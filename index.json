{"repository_name":"anyolite","body":"# Anyolite\n\nAnyolite is a Crystal shard which adds a fully functional mruby interpreter to Crystal.\n\n![Test](https://github.com/Anyolite/anyolite/workflows/Test/badge.svg)\n\n![Release](https://img.shields.io/github/v/release/Anyolite/anyolite)\n![ReleaseDate](https://img.shields.io/github/release-date/Anyolite/anyolite)\n\n![License](https://img.shields.io/github/license/Anyolite/anyolite)\n\n# Description\n\nAnyolite allows for wrapping Crystal classes and functions into mruby with little effort.\nThis way, mruby can be used as a scripting language to Crystal projects, with the major advantage of a similar syntax.\n\nThis project is currently in active development, so please report any bugs or missing relevant features.\n\n# Features\n\n* Bindings to an mruby interpreter\n* Wrapping of nearly arbitrary Crystal classes and methods to mruby\n* Easy syntax without unnecessary boilerplate code\n* Simple system to prevent garbage collector conflicts\n* Support for keyword arguments and default values\n* Objects, structs, enums and unions as function arguments and return values are completely valid\n* Methods and constants can be excluded, modified or renamed with annotations\n\n# Prerequisites\n\nYou need to have the following programs installed (and in your PATH variable, if you are on Windows):\n* Ruby (for building mruby)\n* Rake (for building the whole project)\n* Bison (for building mruby)\n* Git (for downloading mruby)\n* GCC or Microsoft Visual Studio 19 (for building the object files required for Anyolite, depending on your OS)\n\n# Installing\n\nPut this shard as a requirement into your shard.yml project file and then call\n```bash\nshards install\n```\nfrom a terminal or the MSVC Developer Console (on Windows).\n\nAlternatively, you can clone this repository into the lib folder of your project and run\n```bash\nrake build_shard\n```\nmanually to install the shard without using the crystal shards program.\n\nIf you want to use other options for Anyolite, you can set `ANYOLITE_CONFIG_PATH` to the filename of a JSON config file,\nwhich allows for changing multiple options when installing the shard. Possible options are:\n\n* `ANYOLITE_BUILD_PATH` - The relative directory in which Anyolite will be built\n* `ANYOLITE_RUBY_FORK` - The web address of the mruby repository\n* `ANYOLITE_RUBY_RELEASE` - The release tag of the mruby version to be used\n* `ANYOLITE_RUBY_DIR` - The relative directory mruby will be installed in\n* `ANYOLITE_RUBY_CONFIG` - The config file which is used for building mruby\n* `ANYOLITE_GLUE_DIR` - The directory in which helper function C files are located\n* `ANYOLITE_COMPILER` - The C compiler used for building Anyolite\n\n# How to use\n\nImagine a Crystal class for a really bad RPG:\n\n```crystal\nmodule TestModule\n  class Entity\n    property hp : Int32 = 0\n\n    def initialize(@hp)\n    end\n\n    def damage(diff : Int32)\n      @hp -= diff\n    end\n\n    def yell(sound : String, loud : Bool = false)\n      if loud\n        puts \"Entity yelled: #{sound.upcase}\"\n      else\n        puts \"Entity yelled: #{sound}\"\n      end\n    end\n\n    def absorb_hp_from(other : Entity)\n      @hp += other.hp\n      other.hp = 0\n    end\n  end\nend\n```\n\nNow, you want to wrap this class in Ruby. All you need to do is to execute the following code in Crystal (current commit; see documentation page for the version of the latest release):\n\n```crystal\nrequire \"anyolite\"\n\nAnyolite::RbInterpreter.create do |rb|\n  Anyolite.wrap(rb, TestModule)\n\n  rb.load_script_from_file(\"examples/hp_example.rb\")\nend\n```\n\nWell, that's it already. \nThe last line in the block calls the following example script:\n\n```ruby\na = TestModule::Entity.new(hp: 20)\na.damage(diff: 13)\nputs a.hp\n\nb = TestModule::Entity.new(hp: 10)\na.absorb_hp_from(other: b)\nputs a.hp\nputs b.hp\nb.yell(sound: 'Ouch, you stole my HP!', loud: true)\na.yell(sound: 'Well, take better care of your public attributes!')\n```\n\nThe example above gives a good overview over the things you can already do with Anyolite.\nMore features will be added in the future.\n\n# Limitations\n\n* Currently, Anyolite does not work on Windows due to Crystal compiler bugs\n* Anyolite is only compatible with mruby 3 at the current time\n* Arrays and hashes are not directly supported\n* Symbols do not work due to their compiletime nature in Crystal\n* Splat arguments and arbitrary keywords are not possible due to their reliance on symbols\n* Keywords will always be given to functions, even if optional (then with default values)\n* Non-keyword function arguments are always set to their default values before receiving their final values\n* Default arguments need to be specialized with their full class and module path in order to work\n* Private constants need to be excluded in order to prevent errors\n\n# Why this name?\n\nhttps://en.wikipedia.org/wiki/Anyolite\n\nIn short, it is a rare variant of the crystalline mineral called zoisite, with ruby and other crystal shards (of pargasite) embedded.\n\nThe term 'anyoli' means 'green' in the Maasai language, thus naming 'anyolite'.\n\n# Roadmap\n\n## Upcoming releases\n\n### Version 0.10.0\n\nThis version is planned to be the last feature release before 1.0.0.\nCurrently, the way its features are going to be implemented is not yet determined,\nso it will probably take some time before it will be released.\nSome of the features might not even make the release.\n\n* [ ] Options for inherited and/or inheriting classes\n* [ ] Support for arrays\n* [ ] Support for hashes\n* [ ] Support for procs\n* [ ] Support for pointers\n\n### Version 1.0.0\n\n* [ ] Windows support (currently not supported due to problems with Crystal)\n* [ ] Crystal specs for testing\n* [ ] Documentation of all relevant features and wrappers\n* [ ] Mac support (might be possible, not tested yet)\n* [ ] More configuration options for the Rakefile\n* [ ] Ability to choose between mruby and regular Ruby\n\n### Future ideas (might not actually be possible to implement)\n\n* [ ] Splat argument and/or arbitrary keyword passing\n* [ ] Method in mruby to determine owner of object\n","program":{"html_id":"anyolite/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"anyolite","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"anyolite/Anyolite","path":"Anyolite.html","kind":"module","full_name":"Anyolite","name":"Anyolite","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Macro.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Macro.cr#L1"},{"filename":"src/Main.cr","line_number":13,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L13"},{"filename":"src/RbCast.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L1"},{"filename":"src/RbClass.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbClass.cr#L1"},{"filename":"src/RbClassCache.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbClassCache.cr#L1"},{"filename":"src/RbInterpreter.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbInterpreter.cr#L1"},{"filename":"src/RbModule.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbModule.cr#L1"},{"filename":"src/RbRefTable.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbRefTable.cr#L1"},{"filename":"src/RbTypeCache.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbTypeCache.cr#L1"},{"filename":"src/implementations/Mrb3Impl.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/implementations/Mrb3Impl.cr#L1"},{"filename":"src/macros/ArgConversions.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/ArgConversions.cr#L1"},{"filename":"src/macros/ArgTuples.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/ArgTuples.cr#L1"},{"filename":"src/macros/FormatString.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/FormatString.cr#L1"},{"filename":"src/macros/FunctionCalls.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/FunctionCalls.cr#L1"},{"filename":"src/macros/FunctionGenerators.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/FunctionGenerators.cr#L1"},{"filename":"src/macros/ObjectAllocations.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/ObjectAllocations.cr#L1"},{"filename":"src/macros/RubyConversions.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/RubyConversions.cr#L1"},{"filename":"src/macros/RubyTypes.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/RubyTypes.cr#L1"},{"filename":"src/macros/UnionCasts.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/UnionCasts.cr#L1"},{"filename":"src/macros/WrapAll.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/WrapAll.cr#L1"},{"filename":"src/macros/WrapMethodIndex.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/WrapMethodIndex.cr#L1"},{"filename":"src/macros/Wrappers.cr","line_number":1,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/Wrappers.cr#L1"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"Undef","name":"Undef","value":"Undefined.new","doc":"Undefined mruby value.","summary":"<p>Undefined mruby value.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Main wrapper module, which should be covering most of the use cases.","summary":"<p>Main wrapper module, which should be covering most of the use cases.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"wrap(rb_interpreter,crystal_module_or_class,under=nil,instance_method_exclusions=[]ofString|Symbol,class_method_exclusions=[]ofString|Symbol,constant_exclusions=[]ofString|Symbol,verbose=false)-macro","html_id":"wrap(rb_interpreter,crystal_module_or_class,under=nil,instance_method_exclusions=[]ofString|Symbol,class_method_exclusions=[]ofString|Symbol,constant_exclusions=[]ofString|Symbol,verbose=false)-macro","name":"wrap","doc":"Wraps a whole class or module structure under a module into mruby.\n\nThe class or module *crystal_module_or_class* will be integrated \ninto the `RbInterpreter` *rb_interpreter*,\nwith the optional parent module *under*.\nMethods or constants to be excluded can be specified as \n`Symbol` or `String` in the `Array` \n*class_method_exclusions* (for class methods) or \n*constant_exclusions* (for constants).\nIf *verbose* is set, wrapping information will be displayed. ","summary":"<p>Wraps a whole class or module structure under a module into mruby.</p>","abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_module_or_class","doc":null,"default_value":"","external_name":"crystal_module_or_class","restriction":""},{"name":"under","doc":null,"default_value":"nil","external_name":"under","restriction":""},{"name":"instance_method_exclusions","doc":null,"default_value":"[] of String | Symbol","external_name":"instance_method_exclusions","restriction":""},{"name":"class_method_exclusions","doc":null,"default_value":"[] of String | Symbol","external_name":"class_method_exclusions","restriction":""},{"name":"constant_exclusions","doc":null,"default_value":"[] of String | Symbol","external_name":"constant_exclusions","restriction":""},{"name":"verbose","doc":null,"default_value":"false","external_name":"verbose","restriction":""}],"args_string":"(rb_interpreter, crystal_module_or_class, under = <span class=\"n\">nil</span>, instance_method_exclusions = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span> <span class=\"o\">|</span> <span class=\"t\">Symbol</span>, class_method_exclusions = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span> <span class=\"o\">|</span> <span class=\"t\">Symbol</span>, constant_exclusions = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span> <span class=\"o\">|</span> <span class=\"t\">Symbol</span>, verbose = <span class=\"n\">false</span>)","location":{"filename":"src/Main.cr","line_number":408,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L408"},"def":{"name":"wrap","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_module_or_class","doc":null,"default_value":"","external_name":"crystal_module_or_class","restriction":""},{"name":"under","doc":null,"default_value":"nil","external_name":"under","restriction":""},{"name":"instance_method_exclusions","doc":null,"default_value":"[] of String | Symbol","external_name":"instance_method_exclusions","restriction":""},{"name":"class_method_exclusions","doc":null,"default_value":"[] of String | Symbol","external_name":"class_method_exclusions","restriction":""},{"name":"constant_exclusions","doc":null,"default_value":"[] of String | Symbol","external_name":"constant_exclusions","restriction":""},{"name":"verbose","doc":null,"default_value":"false","external_name":"verbose","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n    \n{% if !crystal_module_or_class.is_a?(Path) %}\n      {% puts(\"\\e[31m> WARNING: Object #{crystal_module_or_class} of #{crystal_module_or_class.class_name.id} is neither a class nor module, so it will be skipped\\e[0m\") %}\n    {% else %}{% if crystal_module_or_class.resolve.module? %}\n      Anyolite.wrap_module_with_methods({{ rb_interpreter }}, {{ crystal_module_or_class }}, under: {{ under }},\n        class_method_exclusions: {{ class_method_exclusions }},\n        constant_exclusions: {{ constant_exclusions }},\n        verbose: {{ verbose }}\n      )\n    {% else %}{% if crystal_module_or_class.resolve.class? || crystal_module_or_class.resolve.struct? %}\n      Anyolite.wrap_class_with_methods({{ rb_interpreter }}, {{ crystal_module_or_class }}, under: {{ under }},\n        instance_method_exclusions: {{ instance_method_exclusions }},\n        class_method_exclusions: {{ class_method_exclusions }},\n        constant_exclusions: {{ constant_exclusions }},\n        verbose: {{ verbose }}\n      )\n    {% else %}{% if crystal_module_or_class.resolve.union? %}\n      {% puts(\"\\e[31m> WARNING: Wrapping of unions not supported, thus skipping #{crystal_module_or_class}\\e[0m\") %}\n    {% else %}{% if crystal_module_or_class.resolve < Enum %}\n      Anyolite.wrap_class_with_methods({{ rb_interpreter }}, {{ crystal_module_or_class }}, under: {{ under }},\n        instance_method_exclusions: {{ instance_method_exclusions }},\n        class_method_exclusions: {{ class_method_exclusions }},\n        constant_exclusions: {{ constant_exclusions }},\n        use_enum_constructor: true,\n        verbose: {{ verbose }}\n      )\n    {% else %}{% if crystal_module_or_class.resolve.is_a?(TypeNode) %}\n      Anyolite.wrap_class_with_methods({{ rb_interpreter }}, {{ crystal_module_or_class }}, under: {{ under }},\n        instance_method_exclusions: {{ instance_method_exclusions }},\n        class_method_exclusions: {{ class_method_exclusions }},\n        constant_exclusions: {{ constant_exclusions }},\n        verbose: {{ verbose }}\n      )\n    {% else %}\n      {% puts(\"\\e[31m> WARNING: Could not resolve #{crystal_module_or_class}, so it will be skipped\\e[0m\") %}\n    {% end %}{% end %}{% end %}{% end %}{% end %}{% end %}\n\n  \n"}},{"id":"wrap_class(rb_interpreter,crystal_class,name,under=nil,superclass=nil)-macro","html_id":"wrap_class(rb_interpreter,crystal_class,name,under=nil,superclass=nil)-macro","name":"wrap_class","doc":"Wraps a Crystal class directly into an mruby class.\n\nThe Crystal `Class` *crystal_class* will be integrated into the `RbInterpreter` *rb_interpreter*,\nwith *name* as its new designation, returning an `Anyolite::RbClass`.\n\nTo inherit from another mruby class, specify an `Anyolite::RbClass` as a *superclass*.\n\nEach class can be defined in a specifiy module by setting *under* to a `Anyolite::RbModule`.","summary":"<p>Wraps a Crystal class directly into an mruby class.</p>","abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"under","doc":null,"default_value":"nil","external_name":"under","restriction":""},{"name":"superclass","doc":null,"default_value":"nil","external_name":"superclass","restriction":""}],"args_string":"(rb_interpreter, crystal_class, name, under = <span class=\"n\">nil</span>, superclass = <span class=\"n\">nil</span>)","location":{"filename":"src/Main.cr","line_number":62,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L62"},"def":{"name":"wrap_class","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"under","doc":null,"default_value":"nil","external_name":"under","restriction":""},{"name":"superclass","doc":null,"default_value":"nil","external_name":"superclass","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    new_class = Anyolite::RbClass.new(\n{{ rb_interpreter }}\n, \n{{ name }}\n, under: Anyolite::RbClassCache.get(\n{{ under }}\n), superclass: Anyolite::RbClassCache.get(\n{{ superclass }}\n))\n    Anyolite::RbCore.set_instance_tt_as_data(new_class)\n    Anyolite::RbClassCache.register(\n{{ crystal_class }}\n, new_class)\n    Anyolite::RbClassCache.get(\n{{ crystal_class }}\n)\n  \n"}},{"id":"wrap_class_method(rb_interpreter,crystal_class,name,proc,proc_args=nil,operator=&quot;&quot;,context=nil,return_nil=false)-macro","html_id":"wrap_class_method(rb_interpreter,crystal_class,name,proc,proc_args=nil,operator=&amp;quot;&amp;quot;,context=nil,return_nil=false)-macro","name":"wrap_class_method","doc":"Wraps a class method into mruby.\n\nThe class method *proc* of the Crystal `Class` *crystal_class* will be integrated into the `RbInterpreter` *rb_interpreter*,\nwith the arguments *proc_args* as an `Array of Class`.\n\nIts new name will be *name*.\n\nThe value *operator* will append the specified `String`\nto the final name and *context* can give the function a `Path` for resolving types correctly.\nThe value *return_nil* will override any returned value with `nil`.","summary":"<p>Wraps a class method into mruby.</p>","abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"proc_args","doc":null,"default_value":"nil","external_name":"proc_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"args_string":"(rb_interpreter, crystal_class, name, proc, proc_args = <span class=\"n\">nil</span>, operator = <span class=\"s\">&quot;&quot;</span>, context = <span class=\"n\">nil</span>, return_nil = <span class=\"n\">false</span>)","location":{"filename":"src/Main.cr","line_number":141,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L141"},"def":{"name":"wrap_class_method","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"proc_args","doc":null,"default_value":"nil","external_name":"proc_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    Anyolite::Macro.wrap_class_method_with_args(\n{{ rb_interpreter }}\n, \n{{ crystal_class }}\n, \n{{ name }}\n, \n{{ proc }}\n, \n{{ proc_args }}\n, operator: \n{{ operator }}\n, context: \n{{ context }}\n, return_nil: \n{{ return_nil }}\n)\n  \n"}},{"id":"wrap_class_method_with_keywords(rb_interpreter,crystal_class,name,proc,keyword_args,regular_args=nil,operator=&quot;&quot;,context=nil,return_nil=false)-macro","html_id":"wrap_class_method_with_keywords(rb_interpreter,crystal_class,name,proc,keyword_args,regular_args=nil,operator=&amp;quot;&amp;quot;,context=nil,return_nil=false)-macro","name":"wrap_class_method_with_keywords","doc":"Wraps a class method into mruby, using keyword arguments.\n\nThe class method *proc* of the Crystal `Class` *crystal_class* will be integrated into the `RbInterpreter` *rb_interpreter*,\nwith the arguments *regular_args* as an `Array of Class` and *keyword_args* as an `Array of TypeDeclaration`.\n\nIts new name will be *name*.\n\nThe value *operator* will append the specified `String`\nto the final name and *context* can give the function a `Path` for resolving types correctly.\nThe value *return_nil* will override any returned value with `nil`.","summary":"<p>Wraps a class method into mruby, using keyword arguments.</p>","abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"args_string":"(rb_interpreter, crystal_class, name, proc, keyword_args, regular_args = <span class=\"n\">nil</span>, operator = <span class=\"s\">&quot;&quot;</span>, context = <span class=\"n\">nil</span>, return_nil = <span class=\"n\">false</span>)","location":{"filename":"src/Main.cr","line_number":155,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L155"},"def":{"name":"wrap_class_method_with_keywords","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    Anyolite::Macro.wrap_class_method_with_keyword_args(\n{{ rb_interpreter }}\n, \n{{ crystal_class }}\n, \n{{ name }}\n, \n{{ proc }}\n, \n{{ keyword_args }}\n, \n{{ regular_args }}\n, operator: \n{{ operator }}\n, context: \n{{ context }}\n, return_nil: \n{{ return_nil }}\n)\n  \n"}},{"id":"wrap_class_with_methods(rb_interpreter,crystal_class,under=nil,instance_method_exclusions=[]ofString|Symbol,class_method_exclusions=[]ofString|Symbol,constant_exclusions=[]ofString|Symbol,use_enum_constructor=false,verbose=false)-macro","html_id":"wrap_class_with_methods(rb_interpreter,crystal_class,under=nil,instance_method_exclusions=[]ofString|Symbol,class_method_exclusions=[]ofString|Symbol,constant_exclusions=[]ofString|Symbol,use_enum_constructor=false,verbose=false)-macro","name":"wrap_class_with_methods","doc":"Wraps a whole class structure under a module into mruby.\n\nThe `Class` *crystal_class* will be integrated into the `RbInterpreter` *rb_interpreter*,\nwith the optional parent module *under*.\nMethods or constants to be excluded can be specified as \n`Symbol` or `String` in the `Array` \n*instance_method_exclusions* (for instance methods),\n*class_method_exclusions* (for class methods) or \n*constant_exclusions* (for constants).\nEnum classes can be wrapped by setting *use_enum_constructor*.\nIf *verbose* is set, wrapping information will be displayed.","summary":"<p>Wraps a whole class structure under a module into mruby.</p>","abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"under","doc":null,"default_value":"nil","external_name":"under","restriction":""},{"name":"instance_method_exclusions","doc":null,"default_value":"[] of String | Symbol","external_name":"instance_method_exclusions","restriction":""},{"name":"class_method_exclusions","doc":null,"default_value":"[] of String | Symbol","external_name":"class_method_exclusions","restriction":""},{"name":"constant_exclusions","doc":null,"default_value":"[] of String | Symbol","external_name":"constant_exclusions","restriction":""},{"name":"use_enum_constructor","doc":null,"default_value":"false","external_name":"use_enum_constructor","restriction":""},{"name":"verbose","doc":null,"default_value":"false","external_name":"verbose","restriction":""}],"args_string":"(rb_interpreter, crystal_class, under = <span class=\"n\">nil</span>, instance_method_exclusions = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span> <span class=\"o\">|</span> <span class=\"t\">Symbol</span>, class_method_exclusions = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span> <span class=\"o\">|</span> <span class=\"t\">Symbol</span>, constant_exclusions = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span> <span class=\"o\">|</span> <span class=\"t\">Symbol</span>, use_enum_constructor = <span class=\"n\">false</span>, verbose = <span class=\"n\">false</span>)","location":{"filename":"src/Main.cr","line_number":333,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L333"},"def":{"name":"wrap_class_with_methods","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"under","doc":null,"default_value":"nil","external_name":"under","restriction":""},{"name":"instance_method_exclusions","doc":null,"default_value":"[] of String | Symbol","external_name":"instance_method_exclusions","restriction":""},{"name":"class_method_exclusions","doc":null,"default_value":"[] of String | Symbol","external_name":"class_method_exclusions","restriction":""},{"name":"constant_exclusions","doc":null,"default_value":"[] of String | Symbol","external_name":"constant_exclusions","restriction":""},{"name":"use_enum_constructor","doc":null,"default_value":"false","external_name":"use_enum_constructor","restriction":""},{"name":"verbose","doc":null,"default_value":"false","external_name":"verbose","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if verbose %}\n      {% puts(\">>> Going into class #{crystal_class} under #{under}\\n\\n\") %}\n    {% end %}\n\n\n    \n{% if crystal_class.is_a?(Generic) %}\n      {% if verbose\n  puts(\"> Wrapping of generics not supported, thus skipping #{crystal_class}\\e[0m\\n\\n\")\nend %}\n    {% else %}\n      {% resolved_class = crystal_class.resolve %}\n\n      {% new_context = crystal_class %}\n\n      {% if resolved_class.annotation(Anyolite::RenameClass) %}\n        {% actual_name = (resolved_class.annotation(Anyolite::RenameClass))[0] %}\n      {% else %}\n        {% actual_name = crystal_class.names.last.stringify %}\n      {% end %}\n\n      Anyolite.wrap_class({{ rb_interpreter }}, {{ resolved_class }}, {{ actual_name }}, under: {{ under }})\n\n      Anyolite::Macro.wrap_all_instance_methods({{ rb_interpreter }}, {{ crystal_class }}, {{ instance_method_exclusions }}, \n        {{ verbose }}, context: {{ new_context }}, use_enum_constructor: {{ use_enum_constructor }})\n      Anyolite::Macro.wrap_all_class_methods({{ rb_interpreter }}, {{ crystal_class }}, {{ class_method_exclusions }}, {{ verbose }}, context: {{ new_context }})\n      Anyolite::Macro.wrap_all_constants({{ rb_interpreter }}, {{ crystal_class }}, {{ constant_exclusions }}, {{ verbose }}, context: {{ new_context }})\n    {% end %}\n\n  \n"}},{"id":"wrap_constant(rb_interpreter,under_module,name,crystal_value)-macro","html_id":"wrap_constant(rb_interpreter,under_module,name,crystal_value)-macro","name":"wrap_constant","doc":"Wraps a constant value under a module into mruby.\n\nThe value *crystal_value* will be integrated into the `RbInterpreter` *rb_interpreter*,\nwith the name *name* and the parent module *under_module*.","summary":"<p>Wraps a constant value under a module into mruby.</p>","abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"under_module","doc":null,"default_value":"","external_name":"under_module","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"crystal_value","doc":null,"default_value":"","external_name":"crystal_value","restriction":""}],"args_string":"(rb_interpreter, under_module, name, crystal_value)","location":{"filename":"src/Main.cr","line_number":230,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L230"},"def":{"name":"wrap_constant","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"under_module","doc":null,"default_value":"","external_name":"under_module","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"crystal_value","doc":null,"default_value":"","external_name":"crystal_value","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    Anyolite::RbCore.rb_define_const(\n{{ rb_interpreter }}\n, Anyolite::RbClassCache.get(\n{{ under_module }}\n), \n{{ name }}\n, Anyolite::RbCast.return_value(\n{{ rb_interpreter }}\n.to_unsafe, \n{{ crystal_value }}\n))\n  \n"}},{"id":"wrap_constant_under_class(rb_interpreter,under_class,name,crystal_value)-macro","html_id":"wrap_constant_under_class(rb_interpreter,under_class,name,crystal_value)-macro","name":"wrap_constant_under_class","doc":"Wraps a constant value under a class into mruby.\n\nThe value *crystal_value* will be integrated into the `RbInterpreter` *rb_interpreter*,\nwith the name *name* and the parent `Class` *under_class*.","summary":"<p>Wraps a constant value under a class into mruby.</p>","abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"under_class","doc":null,"default_value":"","external_name":"under_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"crystal_value","doc":null,"default_value":"","external_name":"crystal_value","restriction":""}],"args_string":"(rb_interpreter, under_class, name, crystal_value)","location":{"filename":"src/Main.cr","line_number":238,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L238"},"def":{"name":"wrap_constant_under_class","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"under_class","doc":null,"default_value":"","external_name":"under_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"crystal_value","doc":null,"default_value":"","external_name":"crystal_value","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    Anyolite::RbCore.rb_define_const(\n{{ rb_interpreter }}\n, Anyolite::RbClassCache.get(\n{{ under_class }}\n), \n{{ name }}\n, Anyolite::RbCast.return_value(\n{{ rb_interpreter }}\n.to_unsafe, \n{{ crystal_value }}\n))\n  \n"}},{"id":"wrap_constructor(rb_interpreter,crystal_class,proc_args=nil,operator=&quot;&quot;,context=nil)-macro","html_id":"wrap_constructor(rb_interpreter,crystal_class,proc_args=nil,operator=&amp;quot;&amp;quot;,context=nil)-macro","name":"wrap_constructor","doc":"Wraps the constructor of a Crystal class into mruby.\n\nThe constructor for the Crystal `Class` *crystal_class* will be integrated into the `RbInterpreter` *rb_interpreter*,\nwith the arguments *proc_args* as an `Array of Class`. \n\nThe value *operator* will append the specified `String`\nto the final name and *context* can give the function a `Path` for resolving types correctly.","summary":"<p>Wraps the constructor of a Crystal class into mruby.</p>","abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"proc_args","doc":null,"default_value":"nil","external_name":"proc_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(rb_interpreter, crystal_class, proc_args = <span class=\"n\">nil</span>, operator = <span class=\"s\">&quot;&quot;</span>, context = <span class=\"n\">nil</span>)","location":{"filename":"src/Main.cr","line_number":88,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L88"},"def":{"name":"wrap_constructor","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"proc_args","doc":null,"default_value":"nil","external_name":"proc_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    Anyolite::Macro.wrap_constructor_function_with_args(\n{{ rb_interpreter }}\n, \n{{ crystal_class }}\n, \n{{ crystal_class }}\n.new, \n{{ proc_args }}\n, operator: \n{{ operator }}\n, context: \n{{ context }}\n)\n  \n"}},{"id":"wrap_constructor_with_keywords(rb_interpreter,crystal_class,keyword_args,regular_args=nil,operator=&quot;&quot;,context=nil)-macro","html_id":"wrap_constructor_with_keywords(rb_interpreter,crystal_class,keyword_args,regular_args=nil,operator=&amp;quot;&amp;quot;,context=nil)-macro","name":"wrap_constructor_with_keywords","doc":"Wraps the constructor of a Crystal class into mruby, using keyword arguments.\n\nThe constructor for the Crystal `Class` *crystal_class* will be integrated into the `RbInterpreter` *rb_interpreter*,\nwith the arguments *regular_args* as an `Array of Class` and *keyword_args* as an `Array of TypeDeclaration`.\n\nThe value *operator* will append the specified `String`\nto the final name and *context* can give the function a `Path` for resolving types correctly.","summary":"<p>Wraps the constructor of a Crystal class into mruby, using keyword arguments.</p>","abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(rb_interpreter, crystal_class, keyword_args, regular_args = <span class=\"n\">nil</span>, operator = <span class=\"s\">&quot;&quot;</span>, context = <span class=\"n\">nil</span>)","location":{"filename":"src/Main.cr","line_number":99,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L99"},"def":{"name":"wrap_constructor_with_keywords","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    Anyolite::Macro.wrap_constructor_function_with_keyword_args(\n{{ rb_interpreter }}\n, \n{{ crystal_class }}\n, \n{{ crystal_class }}\n.new, \n{{ keyword_args }}\n, \n{{ regular_args }}\n, operator: \n{{ operator }}\n, context: \n{{ context }}\n)\n  \n"}},{"id":"wrap_getter(rb_interpreter,crystal_class,name,proc,operator=&quot;&quot;,context=nil)-macro","html_id":"wrap_getter(rb_interpreter,crystal_class,name,proc,operator=&amp;quot;&amp;quot;,context=nil)-macro","name":"wrap_getter","doc":"Wraps a getter into mruby.\n\nThe getter *proc* of the Crystal `Class` *crystal_class* will be integrated into the `RbInterpreter` *rb_interpreter*.\n\nIts new name will be *name*.\n\nThe value *operator* will append the specified `String`\nto the final name and *context* can give the function a `Path` for resolving types correctly.","summary":"<p>Wraps a getter into mruby.</p>","abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(rb_interpreter, crystal_class, name, proc, operator = <span class=\"s\">&quot;&quot;</span>, context = <span class=\"n\">nil</span>)","location":{"filename":"src/Main.cr","line_number":208,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L208"},"def":{"name":"wrap_getter","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    Anyolite::Macro.wrap_instance_function_with_args(\n{{ rb_interpreter }}\n, \n{{ crystal_class }}\n, \n{{ name }}\n, \n{{ proc }}\n, operator: \n{{ operator }}\n, context: \n{{ context }}\n)\n  \n"}},{"id":"wrap_instance_method(rb_interpreter,crystal_class,name,proc,proc_args=nil,operator=&quot;&quot;,context=nil,return_nil=false)-macro","html_id":"wrap_instance_method(rb_interpreter,crystal_class,name,proc,proc_args=nil,operator=&amp;quot;&amp;quot;,context=nil,return_nil=false)-macro","name":"wrap_instance_method","doc":"Wraps an instance method into mruby.\n\nThe instance method *proc* of the Crystal `Class` *crystal_class* will be integrated into the `RbInterpreter` *rb_interpreter*,\nwith the arguments *proc_args* as an `Array of Class`.\n\nIts new name will be *name*.\n\nThe value *operator* will append the specified `String`\nto the final name and *context* can give the function a `Path` for resolving types correctly.\nThe value *return_nil* will override any returned value with `nil`.","summary":"<p>Wraps an instance method into mruby.</p>","abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"proc_args","doc":null,"default_value":"nil","external_name":"proc_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"args_string":"(rb_interpreter, crystal_class, name, proc, proc_args = <span class=\"n\">nil</span>, operator = <span class=\"s\">&quot;&quot;</span>, context = <span class=\"n\">nil</span>, return_nil = <span class=\"n\">false</span>)","location":{"filename":"src/Main.cr","line_number":169,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L169"},"def":{"name":"wrap_instance_method","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"proc_args","doc":null,"default_value":"nil","external_name":"proc_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    Anyolite::Macro.wrap_instance_function_with_args(\n{{ rb_interpreter }}\n, \n{{ crystal_class }}\n, \n{{ name }}\n, \n{{ proc }}\n, \n{{ proc_args }}\n, operator: \n{{ operator }}\n, context: \n{{ context }}\n, return_nil: \n{{ return_nil }}\n)\n  \n"}},{"id":"wrap_instance_method_with_keywords(rb_interpreter,crystal_class,name,proc,keyword_args,regular_args=nil,operator=&quot;&quot;,context=nil,return_nil=false)-macro","html_id":"wrap_instance_method_with_keywords(rb_interpreter,crystal_class,name,proc,keyword_args,regular_args=nil,operator=&amp;quot;&amp;quot;,context=nil,return_nil=false)-macro","name":"wrap_instance_method_with_keywords","doc":"Wraps an instance method into mruby, using keyword arguments.\n\nThe instance method *proc* of the Crystal `Class` *crystal_class* will be integrated into the `RbInterpreter` *rb_interpreter*,\nwith the arguments *regular_args* as an `Array of Class` and *keyword_args* as an `Array of TypeDeclaration`.\n\nIts new name will be *name*.\n\nThe value *operator* will append the specified `String`\nto the final name and *context* can give the function a `Path` for resolving types correctly.\nThe value *return_nil* will override any returned value with `nil`.","summary":"<p>Wraps an instance method into mruby, using keyword arguments.</p>","abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"args_string":"(rb_interpreter, crystal_class, name, proc, keyword_args, regular_args = <span class=\"n\">nil</span>, operator = <span class=\"s\">&quot;&quot;</span>, context = <span class=\"n\">nil</span>, return_nil = <span class=\"n\">false</span>)","location":{"filename":"src/Main.cr","line_number":183,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L183"},"def":{"name":"wrap_instance_method_with_keywords","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    Anyolite::Macro.wrap_instance_function_with_keyword_args(\n{{ rb_interpreter }}\n, \n{{ crystal_class }}\n, \n{{ name }}\n, \n{{ proc }}\n, \n{{ keyword_args }}\n, \n{{ regular_args }}\n, operator: \n{{ operator }}\n, context: \n{{ context }}\n, return_nil: \n{{ return_nil }}\n)\n  \n"}},{"id":"wrap_module(rb_interpreter,crystal_module,name,under=nil)-macro","html_id":"wrap_module(rb_interpreter,crystal_module,name,under=nil)-macro","name":"wrap_module","doc":"Wraps a Crystal module into an mruby module.\n\nThe module *crystal_module* will be integrated into the `RbInterpreter` *rb_interpreter*,\nwith *name* as its new designation, returning an `Anyolite::RbModule`.\n\nThe parent module can be specified with the module argument *under*.","summary":"<p>Wraps a Crystal module into an mruby module.</p>","abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_module","doc":null,"default_value":"","external_name":"crystal_module","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"under","doc":null,"default_value":"nil","external_name":"under","restriction":""}],"args_string":"(rb_interpreter, crystal_module, name, under = <span class=\"n\">nil</span>)","location":{"filename":"src/Main.cr","line_number":75,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L75"},"def":{"name":"wrap_module","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_module","doc":null,"default_value":"","external_name":"crystal_module","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"under","doc":null,"default_value":"nil","external_name":"under","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    new_module = Anyolite::RbModule.new(\n{{ rb_interpreter }}\n, \n{{ name }}\n, under: Anyolite::RbClassCache.get(\n{{ under }}\n))\n    Anyolite::RbClassCache.register(\n{{ crystal_module }}\n, new_module)\n    Anyolite::RbClassCache.get(\n{{ crystal_module }}\n)\n  \n"}},{"id":"wrap_module_function(rb_interpreter,under_module,name,proc,proc_args=nil,operator=&quot;&quot;,context=nil,return_nil=false)-macro","html_id":"wrap_module_function(rb_interpreter,under_module,name,proc,proc_args=nil,operator=&amp;quot;&amp;quot;,context=nil,return_nil=false)-macro","name":"wrap_module_function","doc":"Wraps a module function into mruby.\n\nThe function *proc* under the module *under_module* will be integrated into the `RbInterpreter` *rb_interpreter*,\nwith the arguments *proc_args* as an `Array of Class`.\n\nIts new name will be *name*.\n\nThe value *operator* will append the specified `String`\nto the final name and *context* can give the function a `Path` for resolving types correctly.\nThe value *return_nil* will override any returned value with `nil`.","summary":"<p>Wraps a module function into mruby.</p>","abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"under_module","doc":null,"default_value":"","external_name":"under_module","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"proc_args","doc":null,"default_value":"nil","external_name":"proc_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"args_string":"(rb_interpreter, under_module, name, proc, proc_args = <span class=\"n\">nil</span>, operator = <span class=\"s\">&quot;&quot;</span>, context = <span class=\"n\">nil</span>, return_nil = <span class=\"n\">false</span>)","location":{"filename":"src/Main.cr","line_number":113,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L113"},"def":{"name":"wrap_module_function","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"under_module","doc":null,"default_value":"","external_name":"under_module","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"proc_args","doc":null,"default_value":"nil","external_name":"proc_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    Anyolite::Macro.wrap_module_function_with_args(\n{{ rb_interpreter }}\n, \n{{ under_module }}\n, \n{{ name }}\n, \n{{ proc }}\n, \n{{ proc_args }}\n, operator: \n{{ operator }}\n, context: \n{{ context }}\n, return_nil: \n{{ return_nil }}\n)\n  \n"}},{"id":"wrap_module_function_with_keywords(rb_interpreter,under_module,name,proc,keyword_args,regular_args=nil,operator=&quot;&quot;,context=nil,return_nil=false)-macro","html_id":"wrap_module_function_with_keywords(rb_interpreter,under_module,name,proc,keyword_args,regular_args=nil,operator=&amp;quot;&amp;quot;,context=nil,return_nil=false)-macro","name":"wrap_module_function_with_keywords","doc":"Wraps a module function into mruby, using keyword arguments.\n\nThe function *proc* under the module *under_module* will be integrated into the `RbInterpreter` *rb_interpreter*,\nwith the arguments *regular_args* as an `Array of Class` and *keyword_args* as an `Array of TypeDeclaration`.\n\nIts new name will be *name*.\n\nThe value *operator* will append the specified `String`\nto the final name and *context* can give the function a `Path` for resolving types correctly.\nThe value *return_nil* will override any returned value with `nil`.","summary":"<p>Wraps a module function into mruby, using keyword arguments.</p>","abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"under_module","doc":null,"default_value":"","external_name":"under_module","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"args_string":"(rb_interpreter, under_module, name, proc, keyword_args, regular_args = <span class=\"n\">nil</span>, operator = <span class=\"s\">&quot;&quot;</span>, context = <span class=\"n\">nil</span>, return_nil = <span class=\"n\">false</span>)","location":{"filename":"src/Main.cr","line_number":127,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L127"},"def":{"name":"wrap_module_function_with_keywords","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"under_module","doc":null,"default_value":"","external_name":"under_module","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    Anyolite::Macro.wrap_module_function_with_keyword_args(\n{{ rb_interpreter }}\n, \n{{ under_module }}\n, \n{{ name }}\n, \n{{ proc }}\n, \n{{ keyword_args }}\n, \n{{ regular_args }}\n, operator: \n{{ operator }}\n, context: \n{{ context }}\n, return_nil: \n{{ return_nil }}\n)\n  \n"}},{"id":"wrap_module_with_methods(rb_interpreter,crystal_module,under=nil,class_method_exclusions=[]ofString|Symbol,constant_exclusions=[]ofString|Symbol,verbose=false)-macro","html_id":"wrap_module_with_methods(rb_interpreter,crystal_module,under=nil,class_method_exclusions=[]ofString|Symbol,constant_exclusions=[]ofString|Symbol,verbose=false)-macro","name":"wrap_module_with_methods","doc":"Wraps a whole module structure under a module into mruby.\n\nThe module *crystal_module* will be integrated into the `RbInterpreter` *rb_interpreter*,\nwith the optional parent module *under*.\nMethods or constants to be excluded can be specified as \n`Symbol` or `String` in the `Array` \n*class_method_exclusions* (for class methods) or \n*constant_exclusions* (for constants).\nIf *verbose* is set, wrapping information will be displayed.","summary":"<p>Wraps a whole module structure under a module into mruby.</p>","abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_module","doc":null,"default_value":"","external_name":"crystal_module","restriction":""},{"name":"under","doc":null,"default_value":"nil","external_name":"under","restriction":""},{"name":"class_method_exclusions","doc":null,"default_value":"[] of String | Symbol","external_name":"class_method_exclusions","restriction":""},{"name":"constant_exclusions","doc":null,"default_value":"[] of String | Symbol","external_name":"constant_exclusions","restriction":""},{"name":"verbose","doc":null,"default_value":"false","external_name":"verbose","restriction":""}],"args_string":"(rb_interpreter, crystal_module, under = <span class=\"n\">nil</span>, class_method_exclusions = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span> <span class=\"o\">|</span> <span class=\"t\">Symbol</span>, constant_exclusions = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span> <span class=\"o\">|</span> <span class=\"t\">Symbol</span>, verbose = <span class=\"n\">false</span>)","location":{"filename":"src/Main.cr","line_number":375,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L375"},"def":{"name":"wrap_module_with_methods","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_module","doc":null,"default_value":"","external_name":"crystal_module","restriction":""},{"name":"under","doc":null,"default_value":"nil","external_name":"under","restriction":""},{"name":"class_method_exclusions","doc":null,"default_value":"[] of String | Symbol","external_name":"class_method_exclusions","restriction":""},{"name":"constant_exclusions","doc":null,"default_value":"[] of String | Symbol","external_name":"constant_exclusions","restriction":""},{"name":"verbose","doc":null,"default_value":"false","external_name":"verbose","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if verbose %}\n      {% puts(\">>> Going into module #{crystal_module} under #{under}\\n\\n\") %}\n    {% end %}\n\n\n    \n{% new_context = crystal_module %}\n\n\n    \n{% if crystal_module.resolve.annotation(Anyolite::RenameModule) %}\n      {% actual_name = (crystal_module.resolve.annotation(Anyolite::RenameModule))[0] %}\n    {% else %}\n      {% actual_name = crystal_module.names.last.stringify %}\n    {% end %}\n\n\n    Anyolite.wrap_module(\n{{ rb_interpreter }}\n, \n{{ crystal_module.resolve }}\n, \n{{ actual_name }}\n, under: \n{{ under }}\n)\n\n    Anyolite::Macro.wrap_all_class_methods(\n{{ rb_interpreter }}\n, \n{{ crystal_module }}\n, \n{{ class_method_exclusions }}\n, \n{{ verbose }}\n, context: \n{{ new_context }}\n)\n    Anyolite::Macro.wrap_all_constants(\n{{ rb_interpreter }}\n, \n{{ crystal_module }}\n, \n{{ constant_exclusions }}\n, \n{{ verbose }}\n, context: \n{{ new_context }}\n)\n  \n"}},{"id":"wrap_property(rb_interpreter,crystal_class,name,proc,proc_arg,operator_getter=&quot;&quot;,operator_setter=&quot;=&quot;,context=nil)-macro","html_id":"wrap_property(rb_interpreter,crystal_class,name,proc,proc_arg,operator_getter=&amp;quot;&amp;quot;,operator_setter=&amp;quot;=&amp;quot;,context=nil)-macro","name":"wrap_property","doc":"Wraps a property into mruby.\n\nThe property *proc* of the Crystal `Class` *crystal_class* will be integrated into the `RbInterpreter` *rb_interpreter*,\nwith the argument *proc_arg* as its respective `Class`.\n\nIts new name will be *name*.\n\nThe values *operator_getter* and *operator_setter* will append the specified `String`\nto the final names and *context* can give the function a `Path` for resolving types correctly.","summary":"<p>Wraps a property into mruby.</p>","abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"proc_arg","doc":null,"default_value":"","external_name":"proc_arg","restriction":""},{"name":"operator_getter","doc":null,"default_value":"\"\"","external_name":"operator_getter","restriction":""},{"name":"operator_setter","doc":null,"default_value":"\"=\"","external_name":"operator_setter","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(rb_interpreter, crystal_class, name, proc, proc_arg, operator_getter = <span class=\"s\">&quot;&quot;</span>, operator_setter = <span class=\"s\">&quot;=&quot;</span>, context = <span class=\"n\">nil</span>)","location":{"filename":"src/Main.cr","line_number":221,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L221"},"def":{"name":"wrap_property","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"proc_arg","doc":null,"default_value":"","external_name":"proc_arg","restriction":""},{"name":"operator_getter","doc":null,"default_value":"\"\"","external_name":"operator_getter","restriction":""},{"name":"operator_setter","doc":null,"default_value":"\"=\"","external_name":"operator_setter","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    Anyolite.wrap_getter(\n{{ rb_interpreter }}\n, \n{{ crystal_class }}\n, \n{{ name }}\n, \n{{ proc }}\n, operator: \n{{ operator_getter }}\n, context: \n{{ context }}\n)\n    Anyolite.wrap_setter(\n{{ rb_interpreter }}\n, \n{{ crystal_class }}\n, \n{{ name + \"=\" }}\n, \n{{ proc }}\n, \n{{ proc_arg }}\n, operator: \n{{ operator_setter }}\n, context: \n{{ context }}\n)\n  \n"}},{"id":"wrap_setter(rb_interpreter,crystal_class,name,proc,proc_arg,operator=&quot;=&quot;,context=nil)-macro","html_id":"wrap_setter(rb_interpreter,crystal_class,name,proc,proc_arg,operator=&amp;quot;=&amp;quot;,context=nil)-macro","name":"wrap_setter","doc":"Wraps a setter into mruby.\n\nThe setter *proc* (without the `=`) of the Crystal `Class` *crystal_class* will be integrated into the `RbInterpreter` *rb_interpreter*,\nwith the argument *proc_arg* as its respective `Class`.\n\nIts new name will be *name*.\n\nThe value *operator* will append the specified `String`\nto the final name and *context* can give the function a `Path` for resolving types correctly.","summary":"<p>Wraps a setter into mruby.</p>","abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"proc_arg","doc":null,"default_value":"","external_name":"proc_arg","restriction":""},{"name":"operator","doc":null,"default_value":"\"=\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(rb_interpreter, crystal_class, name, proc, proc_arg, operator = <span class=\"s\">&quot;=&quot;</span>, context = <span class=\"n\">nil</span>)","location":{"filename":"src/Main.cr","line_number":196,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L196"},"def":{"name":"wrap_setter","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"proc_arg","doc":null,"default_value":"","external_name":"proc_arg","restriction":""},{"name":"operator","doc":null,"default_value":"\"=\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    Anyolite::Macro.wrap_instance_function_with_args(\n{{ rb_interpreter }}\n, \n{{ crystal_class }}\n, \n{{ name }}\n, \n{{ proc }}\n, \n{{ proc_arg }}\n, operator: \n{{ operator }}\n, context: \n{{ context }}\n)\n  \n"}}],"types":[{"html_id":"anyolite/Anyolite/Empty","path":"Anyolite/Empty.html","kind":"struct","full_name":"Anyolite::Empty","name":"Empty","abstract":false,"superclass":{"html_id":"anyolite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"anyolite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"anyolite/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"anyolite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/Main.cr","line_number":22,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L22"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Use this special constant in case of a function to wrap, which has only an operator as a name.","summary":"<p>Use this special constant in case of a function to wrap, which has only an operator as a name.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/Exclude","path":"Anyolite/Exclude.html","kind":"annotation","full_name":"Anyolite::Exclude","name":"Exclude","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":246,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L246"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Excludes the function from wrapping.","summary":"<p>Excludes the function from wrapping.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/ExcludeClassMethod","path":"Anyolite/ExcludeClassMethod.html","kind":"annotation","full_name":"Anyolite::ExcludeClassMethod","name":"ExcludeClassMethod","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":252,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L252"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Excludes the class method given as the first argument from wrapping.","summary":"<p>Excludes the class method given as the first argument from wrapping.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/ExcludeConstant","path":"Anyolite/ExcludeConstant.html","kind":"annotation","full_name":"Anyolite::ExcludeConstant","name":"ExcludeConstant","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":255,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L255"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Excludes the constant given as the first argument from wrapping.","summary":"<p>Excludes the constant given as the first argument from wrapping.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/ExcludeInstanceMethod","path":"Anyolite/ExcludeInstanceMethod.html","kind":"annotation","full_name":"Anyolite::ExcludeInstanceMethod","name":"ExcludeInstanceMethod","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":249,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L249"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Excludes the instance method given as the first argument from wrapping.","summary":"<p>Excludes the instance method given as the first argument from wrapping.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/Macro","path":"Anyolite/Macro.html","kind":"module","full_name":"Anyolite::Macro","name":"Macro","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Macro.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Macro.cr#L3"},{"filename":"src/macros/ArgConversions.cr","line_number":2,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/ArgConversions.cr#L2"},{"filename":"src/macros/ArgTuples.cr","line_number":2,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/ArgTuples.cr#L2"},{"filename":"src/macros/FormatString.cr","line_number":2,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/FormatString.cr#L2"},{"filename":"src/macros/FunctionCalls.cr","line_number":2,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/FunctionCalls.cr#L2"},{"filename":"src/macros/FunctionGenerators.cr","line_number":2,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/FunctionGenerators.cr#L2"},{"filename":"src/macros/ObjectAllocations.cr","line_number":2,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/ObjectAllocations.cr#L2"},{"filename":"src/macros/RubyConversions.cr","line_number":2,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/RubyConversions.cr#L2"},{"filename":"src/macros/RubyTypes.cr","line_number":2,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/RubyTypes.cr#L2"},{"filename":"src/macros/UnionCasts.cr","line_number":2,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/UnionCasts.cr#L2"},{"filename":"src/macros/WrapAll.cr","line_number":2,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/WrapAll.cr#L2"},{"filename":"src/macros/WrapMethodIndex.cr","line_number":2,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/WrapMethodIndex.cr#L2"},{"filename":"src/macros/Wrappers.cr","line_number":2,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/Wrappers.cr#L2"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Helper methods which should not be used for trivial cases in the final version","summary":"<p>Helper methods which should not be used for trivial cases in the final version</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"add_default_constructor(rb_interpreter,crystal_class,verbose)-macro","html_id":"add_default_constructor(rb_interpreter,crystal_class,verbose)-macro","name":"add_default_constructor","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"verbose","doc":null,"default_value":"","external_name":"verbose","restriction":""}],"args_string":"(rb_interpreter, crystal_class, verbose)","location":{"filename":"src/macros/FunctionGenerators.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/FunctionGenerators.cr#L3"},"def":{"name":"add_default_constructor","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"verbose","doc":null,"default_value":"","external_name":"verbose","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if verbose\n  puts(\"> Adding constructor for #{crystal_class}\\n\\n\")\nend %}\n\r\n      Anyolite.wrap_constructor(\n{{ rb_interpreter }}\n, \n{{ crystal_class }}\n)\r\n    \n"}},{"id":"add_enum_constructor(rb_interpreter,crystal_class,verbose)-macro","html_id":"add_enum_constructor(rb_interpreter,crystal_class,verbose)-macro","name":"add_enum_constructor","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"verbose","doc":null,"default_value":"","external_name":"verbose","restriction":""}],"args_string":"(rb_interpreter, crystal_class, verbose)","location":{"filename":"src/macros/FunctionGenerators.cr","line_number":8,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/FunctionGenerators.cr#L8"},"def":{"name":"add_enum_constructor","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"verbose","doc":null,"default_value":"","external_name":"verbose","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if verbose\n  puts(\"> Adding enum constructor for #{crystal_class}\\n\\n\")\nend %}\n\r\n      Anyolite.wrap_constructor(\n{{ rb_interpreter }}\n, \n{{ crystal_class }}\n, [Int32])\r\n    \n"}},{"id":"allocate_constructed_object(crystal_class,obj,new_obj)-macro","html_id":"allocate_constructed_object(crystal_class,obj,new_obj)-macro","name":"allocate_constructed_object","doc":null,"summary":null,"abstract":false,"args":[{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""},{"name":"new_obj","doc":null,"default_value":"","external_name":"new_obj","restriction":""}],"args_string":"(crystal_class, obj, new_obj)","location":{"filename":"src/macros/ObjectAllocations.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/ObjectAllocations.cr#L3"},"def":{"name":"allocate_constructed_object","args":[{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""},{"name":"new_obj","doc":null,"default_value":"","external_name":"new_obj","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n# Call initializer method if available\r\n\n      if new_obj.responds_to?(:rb_initialize)\r\n        new_obj.rb_initialize(rb)\r\n      \nend\r\n\r\n      \n# Allocate memory so we do not lose this object\r\n\n      if \n{{ crystal_class }}\n <= Struct || \n{{ crystal_class }}\n <= Enum\r\n        struct_wrapper = Anyolite::StructWrapper(\n{{ crystal_class }}\n).new(\n{{ new_obj }}\n)\r\n        new_obj_ptr = Pointer(Anyolite::StructWrapper(\n{{ crystal_class }}\n)).malloc(size: 1, value: struct_wrapper)\r\n        Anyolite::RbRefTable.add(Anyolite::RbRefTable.get_object_id(new_obj_ptr.value), new_obj_ptr.as(Void*))\r\n\r\n        puts \"> S: \n{{ crystal_class }}\n: #{new_obj_ptr.value.inspect}\" if Anyolite::RbRefTable.option_active?(:logging)\r\n\r\n        destructor = Anyolite::RbTypeCache.destructor_method(\n{{ crystal_class }}\n)\r\n        Anyolite::RbCore.set_data_ptr_and_type(\n{{ obj }}\n, new_obj_ptr, Anyolite::RbTypeCache.register(\n{{ crystal_class }}\n, destructor))\r\n      \nelse\r\n        new_obj_ptr = Pointer(\n{{ crystal_class }}\n).malloc(size: 1, value: \n{{ new_obj }}\n)\r\n        Anyolite::RbRefTable.add(Anyolite::RbRefTable.get_object_id(new_obj_ptr.value), new_obj_ptr.as(Void*))\r\n\r\n        puts \"> C: \n{{ crystal_class }}\n: #{new_obj_ptr.value.inspect}\" if Anyolite::RbRefTable.option_active?(:logging)\r\n\r\n        destructor = Anyolite::RbTypeCache.destructor_method(\n{{ crystal_class }}\n)\r\n        Anyolite::RbCore.set_data_ptr_and_type(\n{{ obj }}\n, new_obj_ptr, Anyolite::RbTypeCache.register(\n{{ crystal_class }}\n, destructor))\r\n      \nend\r\n    \n"}},{"id":"call_and_return(rb,proc,regular_args,converted_args,operator=&quot;&quot;,return_nil=false)-macro","html_id":"call_and_return(rb,proc,regular_args,converted_args,operator=&amp;quot;&amp;quot;,return_nil=false)-macro","name":"call_and_return","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"regular_args","doc":null,"default_value":"","external_name":"regular_args","restriction":""},{"name":"converted_args","doc":null,"default_value":"","external_name":"converted_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"args_string":"(rb, proc, regular_args, converted_args, operator = <span class=\"s\">&quot;&quot;</span>, return_nil = <span class=\"n\">false</span>)","location":{"filename":"src/macros/FunctionCalls.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/FunctionCalls.cr#L3"},"def":{"name":"call_and_return","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"regular_args","doc":null,"default_value":"","external_name":"regular_args","restriction":""},{"name":"converted_args","doc":null,"default_value":"","external_name":"converted_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if proc.stringify == \"Anyolite::Empty\" %}\r\n        return_value = {{ operator.id }}(*{{ converted_args }})\r\n      {% else %}\r\n        return_value = {{ proc }}{{ operator.id }}(*{{ converted_args }})\r\n      {% end %}\n\r\n\r\n      \n{% if return_nil %}\r\n        Anyolite::RbCast.return_nil\r\n      {% else %}\r\n        Anyolite::RbCast.return_value({{ rb }}, return_value)\r\n      {% end %}\n\r\n    \n"}},{"id":"call_and_return_instance_method(rb,proc,converted_obj,converted_args,operator=&quot;&quot;,return_nil=false)-macro","html_id":"call_and_return_instance_method(rb,proc,converted_obj,converted_args,operator=&amp;quot;&amp;quot;,return_nil=false)-macro","name":"call_and_return_instance_method","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"converted_obj","doc":null,"default_value":"","external_name":"converted_obj","restriction":""},{"name":"converted_args","doc":null,"default_value":"","external_name":"converted_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"args_string":"(rb, proc, converted_obj, converted_args, operator = <span class=\"s\">&quot;&quot;</span>, return_nil = <span class=\"n\">false</span>)","location":{"filename":"src/macros/FunctionCalls.cr","line_number":50,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/FunctionCalls.cr#L50"},"def":{"name":"call_and_return_instance_method","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"converted_obj","doc":null,"default_value":"","external_name":"converted_obj","restriction":""},{"name":"converted_args","doc":null,"default_value":"","external_name":"converted_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      if \n{{ converted_obj }}\n.is_a?(Anyolite::StructWrapper)\r\n        working_content = \n{{ converted_obj }}\n.content\r\n\r\n        \n{% if proc.stringify == \"Anyolite::Empty\" %}\r\n          return_value = working_content.{{ operator.id }}(*{{ converted_args }})\r\n        {% else %}\r\n          return_value = working_content.{{ proc }}{{ operator.id }}(*{{ converted_args }})\r\n        {% end %}\n\r\n\r\n        \n{{ converted_obj }}\n.content = working_content\r\n      \nelse\r\n        \n{% if proc.stringify == \"Anyolite::Empty\" %}\r\n          return_value = {{ converted_obj }}.{{ operator.id }}(*{{ converted_args }})\r\n        {% else %}\r\n          return_value = {{ converted_obj }}.{{ proc }}{{ operator.id }}(*{{ converted_args }})\r\n        {% end %}\n\r\n      \nend\r\n\r\n      \n{% if return_nil %}\r\n        Anyolite::RbCast.return_nil\r\n      {% else %}\r\n        Anyolite::RbCast.return_value({{ rb }}, return_value)\r\n      {% end %}\n\r\n    \n"}},{"id":"call_and_return_keyword_instance_method(rb,proc,converted_obj,converted_regular_args,keyword_args,kw_args,operator=&quot;&quot;,empty_regular=false,context=nil,type_vars=nil,type_var_names=nil,return_nil=false)-macro","html_id":"call_and_return_keyword_instance_method(rb,proc,converted_obj,converted_regular_args,keyword_args,kw_args,operator=&amp;quot;&amp;quot;,empty_regular=false,context=nil,type_vars=nil,type_var_names=nil,return_nil=false)-macro","name":"call_and_return_keyword_instance_method","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"converted_obj","doc":null,"default_value":"","external_name":"converted_obj","restriction":""},{"name":"converted_regular_args","doc":null,"default_value":"","external_name":"converted_regular_args","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"kw_args","doc":null,"default_value":"","external_name":"kw_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"empty_regular","doc":null,"default_value":"false","external_name":"empty_regular","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"type_vars","doc":null,"default_value":"nil","external_name":"type_vars","restriction":""},{"name":"type_var_names","doc":null,"default_value":"nil","external_name":"type_var_names","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"args_string":"(rb, proc, converted_obj, converted_regular_args, keyword_args, kw_args, operator = <span class=\"s\">&quot;&quot;</span>, empty_regular = <span class=\"n\">false</span>, context = <span class=\"n\">nil</span>, type_vars = <span class=\"n\">nil</span>, type_var_names = <span class=\"n\">nil</span>, return_nil = <span class=\"n\">false</span>)","location":{"filename":"src/macros/FunctionCalls.cr","line_number":76,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/FunctionCalls.cr#L76"},"def":{"name":"call_and_return_keyword_instance_method","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"converted_obj","doc":null,"default_value":"","external_name":"converted_obj","restriction":""},{"name":"converted_regular_args","doc":null,"default_value":"","external_name":"converted_regular_args","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"kw_args","doc":null,"default_value":"","external_name":"kw_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"empty_regular","doc":null,"default_value":"false","external_name":"empty_regular","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"type_vars","doc":null,"default_value":"nil","external_name":"type_vars","restriction":""},{"name":"type_var_names","doc":null,"default_value":"nil","external_name":"type_var_names","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      if \n{{ converted_obj }}\n.is_a?(Anyolite::StructWrapper)\r\n        working_content = \n{{ converted_obj }}\n.content\r\n\r\n        \n{% if proc.stringify == \"Anyolite::Empty\" %}\r\n          return_value = working_content.{{ operator.id }}(\r\n        {% else %}\r\n          return_value = working_content.{{ proc }}{{ operator.id }}(\r\n        {% end %}\n\r\n          \n{% if empty_regular %}\r\n            {% c = 0 %}\r\n            {% for keyword in keyword_args %}\r\n              {{ keyword.var.id }}: Anyolite::Macro.convert_keyword_arg({{ rb }}, {{ kw_args }}.values[{{ c }}], {{ keyword }}, context: {{ context }}, \r\n                type_vars: {{ type_vars }}, type_var_names: {{ type_var_names }}, debug_information: {{ (proc.stringify + \" - \") + keyword_args.stringify }}),\r\n              {% c += 1 %}\r\n            {% end %}\r\n          {% else %}\r\n            *{{ converted_regular_args }},\r\n            {% c = 0 %}\r\n            {% for keyword in keyword_args %}\r\n              {{ keyword.var.id }}: Anyolite::Macro.convert_keyword_arg({{ rb }}, {{ kw_args }}.values[{{ c }}], {{ keyword }}, context: {{ context }},\r\n                type_vars: {{ type_vars }}, type_var_names: {{ type_var_names }}, debug_information: {{ (proc.stringify + \" - \") + keyword_args.stringify }}),\r\n              {% c += 1 %}\r\n            {% end %}\r\n          {% end %}\n\r\n        )\r\n\r\n        \n{{ converted_obj }}\n.content = working_content\r\n      \nelse\r\n\r\n        \n{% if proc.stringify == \"Anyolite::Empty\" %}\r\n          return_value = {{ converted_obj }}.{{ operator.id }}(\r\n        {% else %}\r\n          return_value = {{ converted_obj }}.{{ proc }}{{ operator.id }}(\r\n        {% end %}\n\r\n          \n{% if empty_regular %}\r\n            {% c = 0 %}\r\n            {% for keyword in keyword_args %}\r\n              {{ keyword.var.id }}: Anyolite::Macro.convert_keyword_arg({{ rb }}, {{ kw_args }}.values[{{ c }}], {{ keyword }}, context: {{ context }},\r\n                type_vars: {{ type_vars }}, type_var_names: {{ type_var_names }}, debug_information: {{ (proc.stringify + \" - \") + keyword_args.stringify }}),\r\n              {% c += 1 %}\r\n            {% end %}\r\n          {% else %}\r\n            *{{ converted_regular_args }},\r\n            {% c = 0 %}\r\n            {% for keyword in keyword_args %}\r\n              {{ keyword.var.id }}: Anyolite::Macro.convert_keyword_arg({{ rb }}, {{ kw_args }}.values[{{ c }}], {{ keyword }}, context: {{ context }},\r\n                type_vars: {{ type_vars }}, type_var_names: {{ type_var_names }}, debug_information: {{ (proc.stringify + \" - \") + keyword_args.stringify }}),\r\n              {% c += 1 %}\r\n            {% end %}\r\n          {% end %}\n\r\n        )\r\n\r\n      \nend\r\n\r\n      \n{% if return_nil %}\r\n        Anyolite::RbCast.return_nil\r\n      {% else %}\r\n        Anyolite::RbCast.return_value({{ rb }}, return_value)\r\n      {% end %}\n\r\n    \n"}},{"id":"call_and_return_keyword_method(rb,proc,converted_regular_args,keyword_args,kw_args,operator=&quot;&quot;,empty_regular=false,context=nil,type_vars=nil,type_var_names=nil,return_nil=false)-macro","html_id":"call_and_return_keyword_method(rb,proc,converted_regular_args,keyword_args,kw_args,operator=&amp;quot;&amp;quot;,empty_regular=false,context=nil,type_vars=nil,type_var_names=nil,return_nil=false)-macro","name":"call_and_return_keyword_method","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"converted_regular_args","doc":null,"default_value":"","external_name":"converted_regular_args","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"kw_args","doc":null,"default_value":"","external_name":"kw_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"empty_regular","doc":null,"default_value":"false","external_name":"empty_regular","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"type_vars","doc":null,"default_value":"nil","external_name":"type_vars","restriction":""},{"name":"type_var_names","doc":null,"default_value":"nil","external_name":"type_var_names","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"args_string":"(rb, proc, converted_regular_args, keyword_args, kw_args, operator = <span class=\"s\">&quot;&quot;</span>, empty_regular = <span class=\"n\">false</span>, context = <span class=\"n\">nil</span>, type_vars = <span class=\"n\">nil</span>, type_var_names = <span class=\"n\">nil</span>, return_nil = <span class=\"n\">false</span>)","location":{"filename":"src/macros/FunctionCalls.cr","line_number":17,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/FunctionCalls.cr#L17"},"def":{"name":"call_and_return_keyword_method","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"converted_regular_args","doc":null,"default_value":"","external_name":"converted_regular_args","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"kw_args","doc":null,"default_value":"","external_name":"kw_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"empty_regular","doc":null,"default_value":"false","external_name":"empty_regular","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"type_vars","doc":null,"default_value":"nil","external_name":"type_vars","restriction":""},{"name":"type_var_names","doc":null,"default_value":"nil","external_name":"type_var_names","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if proc.stringify == \"Anyolite::Empty\" %}\r\n        return_value = {{ operator.id }}(\r\n      {% else %}\r\n        return_value = {{ proc }}{{ operator.id }}(\r\n      {% end %}\n\r\n        \n{% if empty_regular %}\r\n          {% c = 0 %}\r\n          {% for keyword in keyword_args %}\r\n            {{ keyword.var.id }}: Anyolite::Macro.convert_keyword_arg({{ rb }}, {{ kw_args }}.values[{{ c }}], {{ keyword }}, context: {{ context }}, \r\n              type_vars: {{ type_vars }}, type_var_names: {{ type_var_names }}, debug_information: {{ (proc.stringify + \" - \") + keyword_args.stringify }}),\r\n            {% c += 1 %}\r\n          {% end %}\r\n        {% else %}\r\n          *{{ converted_regular_args }},\r\n          {% c = 0 %}\r\n          {% for keyword in keyword_args %}\r\n            {{ keyword.var.id }}: Anyolite::Macro.convert_keyword_arg({{ rb }}, {{ kw_args }}.values[{{ c }}], {{ keyword }}, context: {{ context }}}, \r\n              type_vars: {{ type_vars }}, type_var_names: {{ type_var_names }}, debug_information: {{ (proc.stringify + \" - \") + keyword_args.stringify }}),\r\n            {% c += 1 %}\r\n          {% end %}\r\n        {% end %}\n\r\n      )\r\n\r\n      \n{% if return_nil %}\r\n        Anyolite::RbCast.return_nil\r\n      {% else %}\r\n        Anyolite::RbCast.return_value({{ rb }}, return_value)\r\n      {% end %}\n\r\n    \n"}},{"id":"cast_to_union_value(rb,value,types,context=nil)-macro","html_id":"cast_to_union_value(rb,value,types,context=nil)-macro","name":"cast_to_union_value","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"types","doc":null,"default_value":"","external_name":"types","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(rb, value, types, context = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/UnionCasts.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/UnionCasts.cr#L3"},"def":{"name":"cast_to_union_value","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"types","doc":null,"default_value":"","external_name":"types","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      final_value = :invalid\r\n\r\n      \n{% for type in types %}\r\n        {% if type.resolve? %}\r\n          Anyolite::Macro.check_and_cast_union_type({{ rb }}, {{ value }}, {{ type }}, {{ type }}, context: {{ context }})\r\n        {% else %}{% if context %}\r\n          Anyolite::Macro.check_and_cast_union_type({{ rb }}, {{ value }}, {{ context }}::{{ type.stringify.starts_with?(\"::\") ? type.stringify[2..-1].id : type }}, {{ type }}, context: {{ context }})\r\n        {% else %}\r\n          {% raise(\"Could not resolve type #{type}, which is a #{type.class_name}, in context #{context}\") %}\r\n        {% end %}{% end %}\r\n      {% end %}\n\r\n      \r\n      if final_value.is_a?(Symbol)\r\n        Anyolite::RbCore.rb_raise_argument_error(\n{{ rb }}\n, \"Could not determine any value for #{\n{{ value }}\n} with types \n{{ types }}\n in context \n{{ context }}\n\")\r\n        raise(\"Should not be reached\")\r\n      \nelse\r\n        final_value\r\n      \nend\r\n    \n"}},{"id":"check_and_cast_resolved_union_type(rb,value,type,raw_type,context=nil)-macro","html_id":"check_and_cast_resolved_union_type(rb,value,type,raw_type,context=nil)-macro","name":"check_and_cast_resolved_union_type","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"raw_type","doc":null,"default_value":"","external_name":"raw_type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(rb, value, type, raw_type, context = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/UnionCasts.cr","line_number":41,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/UnionCasts.cr#L41"},"def":{"name":"check_and_cast_resolved_union_type","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"raw_type","doc":null,"default_value":"","external_name":"raw_type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if type.resolve <= Nil %}\r\n        if Anyolite::RbCast.check_for_nil({{ value }})\r\n          final_value = Anyolite::RbCast.cast_to_nil({{ rb }}, {{ value }})\r\n        end\r\n      {% else %}{% if type.resolve <= Bool %}\r\n        if Anyolite::RbCast.check_for_bool({{ value }})\r\n          final_value = Anyolite::RbCast.cast_to_bool({{ rb }}, {{ value }})\r\n        end\r\n      {% else %}{% if type.resolve == Number %}\r\n        if Anyolite::RbCast.check_for_float({{ value }})\r\n          final_value = Float64.new(Anyolite::RbCast.cast_to_float({{ rb }}, {{ value }}))\r\n        end\r\n      {% else %}{% if type.resolve == Int %}\r\n        if Anyolite::RbCast.check_for_fixnum({{ value }})\r\n          final_value = Int64.new(Anyolite::RbCast.cast_to_int({{ rb }}, {{ value }}))\r\n        end\r\n      {% else %}{% if type.resolve <= Int %}\r\n        if Anyolite::RbCast.check_for_fixnum({{ value }})\r\n          final_value = {{ type }}.new(Anyolite::RbCast.cast_to_int({{ rb }}, {{ value }}))\r\n        end\r\n      {% else %}{% if type.resolve == Float %}\r\n        if Anyolite::RbCast.check_for_float({{ value }})\r\n          final_value = Float64.new(Anyolite::RbCast.cast_to_float({{ rb }}, {{ value }}))\r\n        end\r\n      {% else %}{% if type.resolve <= Float %}\r\n        if Anyolite::RbCast.check_for_float({{ value }})\r\n          final_value = {{ type }}.new(Anyolite::RbCast.cast_to_float({{ rb }}, {{ value }}))\r\n        end\r\n      {% else %}{% if type.resolve <= String %}\r\n        if Anyolite::RbCast.check_for_string({{ value }})\r\n          final_value = Anyolite::RbCast.cast_to_string({{ rb }}, {{ value }})\r\n        end\r\n      {% else %}{% if type.resolve <= Struct || type.resolve <= Enum %}\r\n        if Anyolite::RbCast.check_for_data({{ value }}) && Anyolite::RbCast.check_custom_type({{ rb }}, {{ value }}, {{ type }})\r\n          final_value = Anyolite::Macro.convert_from_ruby_struct({{ rb }}, {{ value }}, {{ type }}).value.content\r\n        end\r\n      {% else %}{% if type.resolve? %}\r\n        if Anyolite::RbCast.check_for_data({{ value }}) && Anyolite::RbCast.check_custom_type({{ rb }}, {{ value }}, {{ type }})\r\n          final_value = Anyolite::Macro.convert_from_ruby_object({{ rb }}, {{ value }}, {{ type }}).value\r\n        end\r\n      {% else %}\r\n        {% raise(\"Could not resolve type #{type}, which is a #{type.class_name}\") %}\r\n      {% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}\n\r\n    \n"}},{"id":"check_and_cast_union_type(rb,value,type,raw_type,context=nil)-macro","html_id":"check_and_cast_union_type(rb,value,type,raw_type,context=nil)-macro","name":"check_and_cast_union_type","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"raw_type","doc":null,"default_value":"","external_name":"raw_type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(rb, value, type, raw_type, context = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/UnionCasts.cr","line_number":24,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/UnionCasts.cr#L24"},"def":{"name":"check_and_cast_union_type","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"raw_type","doc":null,"default_value":"","external_name":"raw_type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if type.resolve? %}\r\n        Anyolite::Macro.check_and_cast_resolved_union_type({{ rb }}, {{ value }}, {{ type }}, {{ type }})\r\n      {% else %}{% if context %}\r\n        {% if context.names[0..-2].size > 0 %}\r\n          {% new_context = ((context.names[0..-2].join(\"::\")).gsub(/(\\:\\:)+/, \"::\")).id %}\r\n          Anyolite::Macro.check_and_cast_resolved_union_type({{ rb }}, {{ value }}, {{ new_context }}::{{ raw_type.stringify.starts_with?(\"::\") ? raw_type[2..-1] : raw_type }}, {{ raw_type }}, {{ new_context }})\r\n        {% else %}\r\n          Anyolite::Macro.check_and_cast_resolved_union_type({{ rb }}, {{ value }}, {{ raw_type }}, {{ raw_type }})\r\n        {% end %}\r\n      {% else %}\r\n        {% raise(\"Could not resolve type #{type}, which is a #{type.class_name}\") %}\r\n      {% end %}{% end %}\n\r\n    \n"}},{"id":"convert_arg(rb,arg,arg_type,context=nil)-macro","html_id":"convert_arg(rb,arg,arg_type,context=nil)-macro","name":"convert_arg","doc":"Converts Ruby values to Crystal values\r","summary":"<p>Converts Ruby values to Crystal values\r</p>","abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":""},{"name":"arg_type","doc":null,"default_value":"","external_name":"arg_type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(rb, arg, arg_type, context = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/ArgConversions.cr","line_number":11,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/ArgConversions.cr#L11"},"def":{"name":"convert_arg","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":""},{"name":"arg_type","doc":null,"default_value":"","external_name":"arg_type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if (arg_type.stringify.includes?(\"->\")) || (arg_type.stringify.includes?(\" Proc(\")) %}\r\n        {% puts(\"\\e[33m> INFO: Proc types are not allowed as arguments.\\e[0m\") %}\r\n        raise \"Proc types are not allowed as arguments ({{ debug_information.id }})\"\r\n      {% else %}{% if arg_type.is_a?(Generic) && ((arg_type.name.stringify.gsub(/(\\:\\:)+/, \"\")) == \"Pointer\") %}\r\n        {% puts(\"\\e[33m> INFO: Pointer types are not allowed as arguments.\\e[0m\") %}\r\n        raise \"Pointer types are not allowed as arguments ({{ debug_information.id }})\"\r\n      {% else %}{% if arg_type.is_a?(TypeDeclaration) && arg_type.type.is_a?(Union) %}\r\n        Anyolite::Macro.convert_keyword_arg({{ rb }}, {{ arg }}, {{ arg_type }}, context: {{ context }})\r\n      {% else %}{% if arg_type.is_a?(TypeDeclaration) %}\r\n        Anyolite::Macro.convert_arg({{ rb }}, {{ arg }}, {{ arg_type.type }}, context: {{ context }})\r\n      {% else %}{% if context %}\r\n        Anyolite::Macro.convert_resolved_arg({{ rb }}, {{ arg }}, {{ context }}::{{ arg_type.stringify.starts_with?(\"::\") ? arg_type.stringify[2..-1].id : arg_type }}, {{ arg_type }}, {{ context }})\r\n      {% else %}\r\n        Anyolite::Macro.convert_resolved_arg({{ rb }}, {{ arg }}, {{ arg_type }}, {{ arg_type }})\r\n      {% end %}{% end %}{% end %}{% end %}{% end %}\n\r\n    \n"}},{"id":"convert_args(rb,args,regular_args,context)-macro","html_id":"convert_args(rb,args,regular_args,context)-macro","name":"convert_args","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},{"name":"regular_args","doc":null,"default_value":"","external_name":"regular_args","restriction":""},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"args_string":"(rb, args, regular_args, context)","location":{"filename":"src/macros/ArgConversions.cr","line_number":171,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/ArgConversions.cr#L171"},"def":{"name":"convert_args","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},{"name":"regular_args","doc":null,"default_value":"","external_name":"regular_args","restriction":""},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      Tuple.new(\r\n        \n{% c = 0 %}\n\r\n        \n{% if regular_args %}\r\n          {% for arg in regular_args %}\r\n            Anyolite::Macro.convert_arg({{ rb }}, {{ args }}[{{ c }}].value, {{ arg }}, context: {{ context }}),\r\n            {% c += 1 %}\r\n          {% end %}\r\n        {% end %}\n\r\n      )\r\n    \n"}},{"id":"convert_from_ruby_object(rb,obj,crystal_type)-macro","html_id":"convert_from_ruby_object(rb,obj,crystal_type)-macro","name":"convert_from_ruby_object","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""},{"name":"crystal_type","doc":null,"default_value":"","external_name":"crystal_type","restriction":""}],"args_string":"(rb, obj, crystal_type)","location":{"filename":"src/macros/RubyConversions.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/RubyConversions.cr#L3"},"def":{"name":"convert_from_ruby_object","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""},{"name":"crystal_type","doc":null,"default_value":"","external_name":"crystal_type","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      if !Anyolite::RbCast.check_custom_type(\n{{ rb }}\n, \n{{ obj }}\n, \n{{ crystal_type }}\n)\r\n        obj_class = Anyolite::RbCore.get_class_of_obj(\n{{ rb }}\n, \n{{ obj }}\n)\r\n        Anyolite::RbCore.rb_raise_argument_error(\n{{ rb }}\n, \"Invalid data type #{obj_class} for object #{\n{{ obj }}\n}:\\n Should be #{\n{{ crystal_type }}\n} -> Anyolite::RbClassCache.get(\n{{ crystal_type }}\n) instead.\")\r\n      \nend\r\n\r\n      ptr = Anyolite::RbCore.get_data_ptr(\n{{ obj }}\n)\r\n      ptr.as(\n{{ crystal_type }}\n*)\r\n    \n"}},{"id":"convert_from_ruby_struct(rb,obj,crystal_type)-macro","html_id":"convert_from_ruby_struct(rb,obj,crystal_type)-macro","name":"convert_from_ruby_struct","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""},{"name":"crystal_type","doc":null,"default_value":"","external_name":"crystal_type","restriction":""}],"args_string":"(rb, obj, crystal_type)","location":{"filename":"src/macros/RubyConversions.cr","line_number":13,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/RubyConversions.cr#L13"},"def":{"name":"convert_from_ruby_struct","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""},{"name":"crystal_type","doc":null,"default_value":"","external_name":"crystal_type","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      if !Anyolite::RbCast.check_custom_type(\n{{ rb }}\n, \n{{ obj }}\n, \n{{ crystal_type }}\n)\r\n        obj_class = Anyolite::RbCore.get_class_of_obj(\n{{ rb }}\n, \n{{ obj }}\n)\r\n        Anyolite::RbCore.rb_raise_argument_error(\n{{ rb }}\n, \"Invalid data type #{obj_class} for object #{\n{{ obj }}\n}:\\n Should be #{\n{{ crystal_type }}\n} -> Anyolite::RbClassCache.get(\n{{ crystal_type }}\n) instead.\")\r\n      \nend\r\n      \r\n      ptr = Anyolite::RbCore.get_data_ptr(\n{{ obj }}\n)\r\n      ptr.as(Anyolite::StructWrapper(\n{{ crystal_type }}\n)*)\r\n    \n"}},{"id":"convert_keyword_arg(rb,arg,arg_type,context=nil,type_vars=nil,type_var_names=nil,debug_information=nil)-macro","html_id":"convert_keyword_arg(rb,arg,arg_type,context=nil,type_vars=nil,type_var_names=nil,debug_information=nil)-macro","name":"convert_keyword_arg","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":""},{"name":"arg_type","doc":null,"default_value":"","external_name":"arg_type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"type_vars","doc":null,"default_value":"nil","external_name":"type_vars","restriction":""},{"name":"type_var_names","doc":null,"default_value":"nil","external_name":"type_var_names","restriction":""},{"name":"debug_information","doc":null,"default_value":"nil","external_name":"debug_information","restriction":""}],"args_string":"(rb, arg, arg_type, context = <span class=\"n\">nil</span>, type_vars = <span class=\"n\">nil</span>, type_var_names = <span class=\"n\">nil</span>, debug_information = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/ArgConversions.cr","line_number":62,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/ArgConversions.cr#L62"},"def":{"name":"convert_keyword_arg","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":""},{"name":"arg_type","doc":null,"default_value":"","external_name":"arg_type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"type_vars","doc":null,"default_value":"nil","external_name":"type_vars","restriction":""},{"name":"type_var_names","doc":null,"default_value":"nil","external_name":"type_var_names","restriction":""},{"name":"debug_information","doc":null,"default_value":"nil","external_name":"debug_information","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n# TODO: Is it possible to put the message somewhere else... or at least CATCH the exception?\r\n\n      \n{% if (arg_type.stringify.includes?(\"->\")) || (arg_type.stringify.includes?(\" Proc(\")) %}\r\n        {% puts(\"\\e[33m> INFO: Proc types are not allowed as arguments (#{debug_information.id}).\\e[0m\") %}\r\n        raise \"Proc types are not allowed as arguments ({{ debug_information.id }})\"\r\n      {% else %}{% if arg_type.is_a?(Generic) && ((arg_type.name.stringify.gsub(/(\\:\\:)+/, \"\")) == \"Pointer\") %}\r\n        {% puts(\"\\e[33m> INFO: Pointer types are not allowed as arguments (#{debug_information.id}).\\e[0m\") %}\r\n        raise \"Pointer types are not allowed as arguments ({{ debug_information.id }})\"\r\n      {% else %}{% if type_var_names && (type_var_names.includes?(arg_type.type)) %}\r\n        {% type_var_names.each_with_index do |element, index|\n  if element == arg_type.type\n    result = index\n  end\nend %}\r\n        Anyolite::Macro.convert_keyword_arg({{ rb }}, {{ arg }}, {{ type_vars[result] }}, context: {{ context }}, debug_information: {{ debug_information }})\r\n      {% else %}{% if type_var_names %}\r\n        {% magical_regex = /([\\(\\s\\:])([A-Z]+)([\\),\\s])/ %}\r\n        {% replacement_arg_type = arg_type.type.stringify.gsub(magical_regex, \"\\\\1#\\\\2#\\\\3\") %}\r\n\r\n        {% for type_var_name, index in type_var_names %}\r\n          {% split_types = replacement_arg_type.split(\"#\") %}\r\n          {% odd = true %}\r\n          {% final_split_types = [] of ASTNode %}\r\n          {% for split_type, split_type_index in split_types %}\r\n            {% if !odd %}\r\n              {% result = nil %}\r\n              {% type_var_names.each_with_index do |element, index|\n  if element.stringify == split_type\n    result = index\n  end\nend %}\r\n              {% if result %}\r\n                {% final_split_types.push(type_vars[result].stringify) %}\r\n              {% else %}\r\n                {% final_split_types.push(split_type) %}\r\n              {% end %}\r\n            {% else %}\r\n              {% final_split_types.push(split_type) %}\r\n            {% end %}\r\n            {% odd = !odd %}\r\n          {% end %}\r\n        {% end %}\r\n\r\n        {% if arg_type.value %}\r\n        {% final_type_def = \"#{arg_type.var} : #{(final_split_types.join(\"\")).id} = #{arg_type.value}\" %}\r\n        {% else %}\r\n          {% final_type_def = \"#{arg_type.var} : #{(final_split_types.join(\"\")).id}\" %}\r\n        {% end %}\r\n\r\n        Anyolite::Macro.convert_keyword_arg({{ rb }}, {{ arg }}, {{ final_type_def.id }}, context: {{ context }}, debug_information: {{ debug_information }})\r\n      {% else %}{% if arg_type.is_a?(Call) %}\r\n        {% raise(\"Received Call #{arg_type} instead of TypeDeclaration or TypeNode\") %}\r\n      {% else %}{% if arg_type.is_a?(TypeDeclaration) %}\r\n        if Anyolite::RbCast.is_undef?({{ arg }})\r\n          {% if (arg_type.value || (arg_type.value == false)) || (arg_type.value == nil) %}\r\n            {{ arg_type.value }}\r\n          {% else %}\r\n            # Should only happen if no default value was given\r\n            Anyolite::RbCore.rb_raise_argument_error({{ rb }}, \"Undefined argument #{{{ arg }}} of {{ arg_type }} in context {{ context }}\")\r\n            # Code should jump to somewhere else before this point, but we want to have a NoReturn type here\r\n            raise(\"Should not be reached\")\r\n          {% end %}\r\n        else\r\n          {% if arg_type.type.is_a?(Union) %}\r\n            Anyolite::Macro.convert_keyword_arg({{ rb }}, {{ arg }}, Union({{ arg_type.type }}), context: {{ context }}, debug_information: {{ debug_information }})\r\n          {% else %}\r\n            Anyolite::Macro.convert_keyword_arg({{ rb }}, {{ arg }}, {{ arg_type.type }}, context: {{ context }}, debug_information: {{ debug_information }})\r\n          {% end %}\r\n        end\r\n      # TODO: Check if this might need some improvement\r\n      {% else %}{% if context && (!(arg_type.stringify.starts_with?(\"Union\"))) %}\r\n        Anyolite::Macro.convert_resolved_keyword_arg({{ rb }}, {{ arg }}, {{ context }}::{{ arg_type.stringify.starts_with?(\"::\") ? arg_type.stringify[2..-1].id : arg_type }}, {{ arg_type }}, context: {{ context }}, debug_information: {{ debug_information }})\r\n      {% else %}\r\n        Anyolite::Macro.convert_resolved_keyword_arg({{ rb }}, {{ arg }}, {{ arg_type }}, {{ arg_type }}, context: {{ context }}, debug_information: {{ debug_information }})\r\n      {% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}\n\r\n    \n"}},{"id":"convert_resolved_arg(rb,arg,arg_type,raw_arg_type,context=nil)-macro","html_id":"convert_resolved_arg(rb,arg,arg_type,raw_arg_type,context=nil)-macro","name":"convert_resolved_arg","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":""},{"name":"arg_type","doc":null,"default_value":"","external_name":"arg_type","restriction":""},{"name":"raw_arg_type","doc":null,"default_value":"","external_name":"raw_arg_type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(rb, arg, arg_type, raw_arg_type, context = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/ArgConversions.cr","line_number":29,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/ArgConversions.cr#L29"},"def":{"name":"convert_resolved_arg","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":""},{"name":"arg_type","doc":null,"default_value":"","external_name":"arg_type","restriction":""},{"name":"raw_arg_type","doc":null,"default_value":"","external_name":"raw_arg_type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if arg_type.resolve? %}\r\n        {% if arg_type.resolve <= Bool %}\r\n          ({{ arg }} != 0)\r\n        {% else %}{% if arg_type.resolve == Number %}\r\n          Float64.new({{ arg }})\r\n        {% else %}{% if arg_type.resolve == Int %}\r\n          Int64.new({{ arg }})\r\n        {% else %}{% if arg_type.resolve <= Int %}\r\n          {{ arg_type }}.new({{ arg }})\r\n        {% else %}{% if arg_type.resolve == Float %}\r\n          Float64.new({{ arg }})\r\n        {% else %}{% if arg_type.resolve <= Float %}\r\n          {{ arg_type }}.new({{ arg }})\r\n        {% else %}{% if arg_type.resolve <= String %}\r\n          {{ arg_type }}.new({{ arg }})\r\n        {% else %}{% if arg_type.resolve <= Struct || arg_type.resolve <= Enum %}\r\n          Anyolite::Macro.convert_from_ruby_struct({{ rb }}, {{ arg }}, {{ arg_type }}).value.content\r\n        {% else %}\r\n          Anyolite::Macro.convert_from_ruby_object({{ rb }}, {{ arg }}, {{ arg_type }}).value\r\n        {% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}\r\n      {% else %}{% if context %}\r\n        {% if context.names[0..-2].size > 0 %}\r\n          {% new_context = ((context.names[0..-2].join(\"::\")).gsub(/(\\:\\:)+/, \"::\")).id %}\r\n          Anyolite::Macro.convert_resolved_arg({{ rb }}, {{ arg }}, {{ new_context }}::{{ raw_arg_type.stringify.starts_with?(\"::\") ? raw_arg_type.stringify[2..-1].id : raw_arg_type }}, {{ raw_arg_type }}, {{ new_context }})\r\n        {% else %}\r\n          Anyolite::Macro.convert_resolved_arg({{ rb }}, {{ arg }}, {{ raw_arg_type }}, {{ raw_arg_type }})\r\n        {% end %}\r\n      {% else %}\r\n        {% raise(\"Could not resolve #{arg_type}, which is a #{arg_type.class_name}, in any meaningful way\") %}\r\n      {% end %}{% end %}\n\r\n    \n"}},{"id":"convert_resolved_keyword_arg(rb,arg,arg_type,raw_arg_type,context=nil,debug_information=nil)-macro","html_id":"convert_resolved_keyword_arg(rb,arg,arg_type,raw_arg_type,context=nil,debug_information=nil)-macro","name":"convert_resolved_keyword_arg","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":""},{"name":"arg_type","doc":null,"default_value":"","external_name":"arg_type","restriction":""},{"name":"raw_arg_type","doc":null,"default_value":"","external_name":"raw_arg_type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"debug_information","doc":null,"default_value":"nil","external_name":"debug_information","restriction":""}],"args_string":"(rb, arg, arg_type, raw_arg_type, context = <span class=\"n\">nil</span>, debug_information = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/ArgConversions.cr","line_number":131,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/ArgConversions.cr#L131"},"def":{"name":"convert_resolved_keyword_arg","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":""},{"name":"arg_type","doc":null,"default_value":"","external_name":"arg_type","restriction":""},{"name":"raw_arg_type","doc":null,"default_value":"","external_name":"raw_arg_type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"debug_information","doc":null,"default_value":"nil","external_name":"debug_information","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if arg_type.stringify.starts_with?(\"Union\") %}\r\n        # This sadly needs some uncanny magic\r\n        Anyolite::Macro.cast_to_union_value({{ rb }}, {{ arg }}, {{ (arg_type.stringify[6..-2].split('|')).map do |x|\n  x.id\nend }}, context: {{ context }})\r\n      {% else %}{% if arg_type.resolve? %}\r\n        {% if arg_type.resolve <= Nil %}\r\n          Anyolite::RbCast.cast_to_nil({{ rb }}, {{ arg }})\r\n        {% else %}{% if arg_type.resolve <= Bool %}\r\n          Anyolite::RbCast.cast_to_bool({{ rb }}, {{ arg }})\r\n        {% else %}{% if arg_type.resolve == Number %}\r\n          Float64.new(Anyolite::RbCast.cast_to_float({{ rb }}, {{ arg }}))\r\n        {% else %}{% if arg_type.resolve == Int %}\r\n          Int64.new(Anyolite::RbCast.cast_to_int({{ rb }}, {{ arg }}))\r\n        {% else %}{% if arg_type.resolve <= Int %}\r\n          {{ arg_type }}.new(Anyolite::RbCast.cast_to_int({{ rb }}, {{ arg }}))\r\n        {% else %}{% if arg_type.resolve == Float %}\r\n          Float64.new(Anyolite::RbCast.cast_to_float({{ rb }}, {{ arg }}))\r\n        {% else %}{% if arg_type.resolve <= Float %}\r\n          {{ arg_type }}.new(Anyolite::RbCast.cast_to_float({{ rb }}, {{ arg }}))\r\n        {% else %}{% if arg_type.resolve <= String %}\r\n          Anyolite::RbCast.cast_to_string({{ rb }}, {{ arg }})\r\n        {% else %}{% if arg_type.resolve <= Struct || arg_type.resolve <= Enum %}\r\n          Anyolite::Macro.convert_from_ruby_struct({{ rb }}, {{ arg }}, {{ arg_type }}).value.content\r\n        {% else %}{% if arg_type.resolve? %}\r\n          Anyolite::Macro.convert_from_ruby_object({{ rb }}, {{ arg }}, {{ arg_type }}).value\r\n        {% else %}\r\n          {% raise(\"Could not resolve type #{arg_type}, which is a #{arg_type.class_name.id} (#{debug_information.id})\") %}\r\n        {% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}\r\n      {% else %}{% if context %}\r\n        {% if context.names[0..-2].size > 0 %}\r\n          {% new_context = ((context.names[0..-2].join(\"::\")).gsub(/(\\:\\:)+/, \"::\")).id %}\r\n          Anyolite::Macro.convert_resolved_keyword_arg({{ rb }}, {{ arg }}, {{ new_context }}::{{ raw_arg_type.stringify.starts_with?(\"::\") ? raw_arg_type.stringify[2..-1].id : raw_arg_type }}, {{ raw_arg_type }}, {{ new_context }}, debug_information: {{ debug_information }})\r\n        {% else %}\r\n          Anyolite::Macro.convert_resolved_keyword_arg({{ rb }}, {{ arg }}, {{ raw_arg_type }}, {{ raw_arg_type }}, debug_information: {{ debug_information }})\r\n        {% end %}\r\n      {% else %}\r\n        {% raise(\"Could not resolve type #{arg_type}, which is a #{arg_type.class_name.id} (#{debug_information.id})\") %}\r\n      {% end %}{% end %}{% end %}\n\r\n    \n"}},{"id":"format_char(arg,optional_values=false,context=nil)-macro","html_id":"format_char(arg,optional_values=false,context=nil)-macro","name":"format_char","doc":null,"summary":null,"abstract":false,"args":[{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":""},{"name":"optional_values","doc":null,"default_value":"false","external_name":"optional_values","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(arg, optional_values = <span class=\"n\">false</span>, context = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/FormatString.cr","line_number":13,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/FormatString.cr#L13"},"def":{"name":"format_char","args":[{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":""},{"name":"optional_values","doc":null,"default_value":"false","external_name":"optional_values","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if arg.is_a?(TypeDeclaration) %}\r\n        {% if arg.type.is_a?(Union) %}\r\n          {% if optional_values != true %}\r\n            \"|o\"\r\n          {% else %}\r\n            \"o\"\r\n          {% end %}\r\n        {% else %}{% if (optional_values != true) && arg.value %}\r\n          \"|\" + Anyolite::Macro.format_char({{ arg.type }}, optional_values: true, context: {{ context }})\r\n        {% else %}\r\n          Anyolite::Macro.format_char({{ arg.type }}, optional_values: {{ optional_values }}, context: {{ context }})\r\n        {% end %}{% end %}\r\n      {% else %}{% if context %}\r\n        Anyolite::Macro.resolve_format_char({{ context }}::{{ arg.stringify.starts_with?(\"::\") ? arg.stringify[2..-1].id : arg }}, {{ arg }}, {{ context }})\r\n      {% else %}\r\n        Anyolite::Macro.resolve_format_char({{ arg }}, {{ arg }})\r\n      {% end %}{% end %}\n\r\n    \n"}},{"id":"format_string(args,context=nil)-macro","html_id":"format_string(args,context=nil)-macro","name":"format_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(args, context = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/FormatString.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/FormatString.cr#L3"},"def":{"name":"format_string","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \"\" +\r\n      \n{% if args %}\r\n        {% for arg in args %}\r\n          Anyolite::Macro.format_char({{ arg }}, context: {{ context }}) +\r\n        {% end %}\r\n      {% end %}\n\r\n      \"\"\r\n    \n"}},{"id":"generate_arg_tuple(rb,args,context=nil)-macro","html_id":"generate_arg_tuple(rb,args,context=nil)-macro","name":"generate_arg_tuple","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(rb, args, context = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/ArgTuples.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/ArgTuples.cr#L3"},"def":{"name":"generate_arg_tuple","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      Tuple.new(\r\n        \n{% if args %}\r\n          {% for arg in args %}\r\n            {% if arg.is_a?(TypeDeclaration) %}\r\n              {% if arg.value %}\r\n                {% if arg.type.is_a?(Union) %}\r\n                  # This does work, but I'm a bit surprised\r\n                  Anyolite::Macro.pointer_type({{ arg }}, context: {{ context }}).malloc(size: 1, value: Anyolite::RbCast.return_value({{ rb }}, {{ arg.value }})),\r\n                {% else %}{% if arg.type.resolve <= String %}\r\n                  # The outer gods bless my wretched soul that this does neither segfault nor leak\r\n                  Anyolite::Macro.pointer_type({{ arg }}, context: {{ context }}).malloc(size: 1, value: {{ arg.value }}.to_unsafe),\r\n                {% else %}\r\n                  Anyolite::Macro.pointer_type({{ arg }}, context: {{ context }}).malloc(size: 1, value: Anyolite::Macro.type_in_ruby({{ arg }}, context: {{ context }}).new({{ arg.value }})),\r\n                {% end %}{% end %}\r\n              {% else %}\r\n                Anyolite::Macro.pointer_type({{ arg }}, context: {{ context }}).malloc(size: 1),\r\n              {% end %}\r\n            {% else %}\r\n              Anyolite::Macro.pointer_type({{ arg }}, context: {{ context }}).malloc(size: 1),\r\n            {% end %}\r\n          {% end %}\r\n        {% end %}\n\r\n      )\r\n    \n"}},{"id":"generate_keyword_argument_struct(rb_interpreter,keyword_args)-macro","html_id":"generate_keyword_argument_struct(rb_interpreter,keyword_args)-macro","name":"generate_keyword_argument_struct","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""}],"args_string":"(rb_interpreter, keyword_args)","location":{"filename":"src/macros/ArgTuples.cr","line_number":29,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/ArgTuples.cr#L29"},"def":{"name":"generate_keyword_argument_struct","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      kw_names = Anyolite::Macro.generate_keyword_names(\n{{ rb_interpreter }}\n, \n{{ keyword_args }}\n)\r\n      kw_args = Anyolite::RbCore::KWArgs.new\r\n      kw_args.num = \n{{ keyword_args.size }}\n\r\n      kw_args.values = Pointer(Anyolite::RbCore::RbValue).malloc(size: \n{{ keyword_args.size }}\n)\r\n      kw_args.table = kw_names\r\n      kw_args.required = \n{{ keyword_args.select do |i|\n  !i.var\nend.size }}\n\r\n      kw_args.rest = Pointer(Anyolite::RbCore::RbValue).malloc(size: 1)\r\n      kw_args\r\n    \n"}},{"id":"generate_keyword_names(rb_interpreter,keyword_args)-macro","html_id":"generate_keyword_names(rb_interpreter,keyword_args)-macro","name":"generate_keyword_names","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""}],"args_string":"(rb_interpreter, keyword_args)","location":{"filename":"src/macros/ArgTuples.cr","line_number":40,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/ArgTuples.cr#L40"},"def":{"name":"generate_keyword_names","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      [\r\n        \n{% for keyword in keyword_args %}\r\n          Anyolite::RbCore.convert_to_rb_sym({{ rb_interpreter }}, {{ keyword.var.stringify }}),\r\n        {% end %}\n\r\n      ]\r\n    \n"}},{"id":"get_converted_args(rb,regular_args,context)-macro","html_id":"get_converted_args(rb,regular_args,context)-macro","name":"get_converted_args","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"regular_args","doc":null,"default_value":"","external_name":"regular_args","restriction":""},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"args_string":"(rb, regular_args, context)","location":{"filename":"src/macros/ArgConversions.cr","line_number":183,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/ArgConversions.cr#L183"},"def":{"name":"get_converted_args","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"regular_args","doc":null,"default_value":"","external_name":"regular_args","restriction":""},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      args = Anyolite::Macro.generate_arg_tuple(\n{{ rb }}\n, \n{{ regular_args }}\n, context: \n{{ context }}\n)\r\n      format_string = Anyolite::Macro.format_string(\n{{ regular_args }}\n, context: \n{{ context }}\n)\r\n      \r\n      Anyolite::RbCore.rb_get_args(\n{{ rb }}\n, format_string, *args)\r\n\r\n      Anyolite::Macro.convert_args(\n{{ rb }}\n, args, \n{{ regular_args }}\n, context: \n{{ context }}\n)\r\n    \n"}},{"id":"get_raw_args(rb,regular_args,context=nil)-macro","html_id":"get_raw_args(rb,regular_args,context=nil)-macro","name":"get_raw_args","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"regular_args","doc":null,"default_value":"","external_name":"regular_args","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(rb, regular_args, context = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/ArgConversions.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/ArgConversions.cr#L3"},"def":{"name":"get_raw_args","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"regular_args","doc":null,"default_value":"","external_name":"regular_args","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      args = Anyolite::Macro.generate_arg_tuple(\n{{ rb }}\n, \n{{ regular_args }}\n, context: \n{{ context }}\n)\r\n      format_string = Anyolite::Macro.format_string(\n{{ regular_args }}\n, context: \n{{ context }}\n)\r\n      Anyolite::RbCore.rb_get_args(\n{{ rb }}\n, format_string, *args)\r\n      args\r\n    \n"}},{"id":"pointer_type(type,context=nil)-macro","html_id":"pointer_type(type,context=nil)-macro","name":"pointer_type","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(type, context = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/RubyTypes.cr","line_number":43,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/RubyTypes.cr#L43"},"def":{"name":"pointer_type","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if type.is_a?(TypeDeclaration) %}\r\n        {% if type.type.is_a?(Union) %}\r\n          Pointer(Anyolite::RbCore::RbValue)\r\n        {% else %}\r\n          Anyolite::Macro.pointer_type({{ type.type }}, context: {{ context }})\r\n        {% end %}\r\n      {% else %}{% if context %}\r\n        Anyolite::Macro.resolve_pointer_type({{ context }}::{{ type.stringify.starts_with?(\"::\") ? type.stringify[2..-1].id : type }}, {{ type }}, {{ context }})\r\n      {% else %}\r\n        Anyolite::Macro.resolve_pointer_type({{ type }}, {{ type }})\r\n      {% end %}{% end %}\n\r\n    \n"}},{"id":"resolve_format_char(arg,raw_arg,context=nil)-macro","html_id":"resolve_format_char(arg,raw_arg,context=nil)-macro","name":"resolve_format_char","doc":null,"summary":null,"abstract":false,"args":[{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":""},{"name":"raw_arg","doc":null,"default_value":"","external_name":"raw_arg","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(arg, raw_arg, context = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/FormatString.cr","line_number":33,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/FormatString.cr#L33"},"def":{"name":"resolve_format_char","args":[{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":""},{"name":"raw_arg","doc":null,"default_value":"","external_name":"raw_arg","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if arg.resolve? %}\r\n        {% if arg.resolve <= Bool %}\r\n          \"b\"\r\n        {% else %}{% if arg.resolve <= Int %}\r\n          \"i\"\r\n        {% else %}{% if arg.resolve <= Float %}\r\n          \"f\"\r\n        {% else %}{% if arg.resolve <= String %}\r\n          \"z\"\r\n        {% else %}\r\n          \"o\"\r\n        {% end %}{% end %}{% end %}{% end %}\r\n      {% else %}{% if context %}\r\n        {% if context.names[0..-2].size > 0 %}\r\n          {% new_context = ((context.names[0..-2].join(\"::\")).gsub(/(::)+/, \"::\")).id %}\r\n          Anyolite::Macro.resolve_format_char({{ new_context }}::{{ raw_arg.stringify.starts_with?(\"::\") ? raw_arg.stringify[2..-1].id : raw_arg }}, {{ raw_arg }}, {{ new_context }})\r\n        {% else %}\r\n          Anyolite::Macro.resolve_format_char({{ raw_arg }}, {{ raw_arg }})\r\n        {% end %}\r\n      {% else %}\r\n        {% raise(\"Could not resolve #{arg}, which is a #{arg.class_name}, in any meaningful way\") %}\r\n      {% end %}{% end %}\n\r\n    \n"}},{"id":"resolve_pointer_type(type,raw_type,context=nil)-macro","html_id":"resolve_pointer_type(type,raw_type,context=nil)-macro","name":"resolve_pointer_type","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"raw_type","doc":null,"default_value":"","external_name":"raw_type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(type, raw_type, context = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/RubyTypes.cr","line_number":57,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/RubyTypes.cr#L57"},"def":{"name":"resolve_pointer_type","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"raw_type","doc":null,"default_value":"","external_name":"raw_type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if type.resolve? %}\r\n        {% if type.resolve <= Bool %}\r\n          Pointer(Anyolite::RbCore::RbBool)\r\n        {% else %}{% if type.resolve <= Int %}\r\n          Pointer(Anyolite::RbCore::RbInt)\r\n        {% else %}{% if type.resolve <= Float || (type.resolve == Number) %}\r\n          Pointer(Anyolite::RbCore::RbFloat)\r\n        {% else %}{% if type.resolve <= String %}\r\n          Pointer(LibC::Char*)\r\n        {% else %}\r\n          Pointer(Anyolite::RbCore::RbValue)\r\n        {% end %}{% end %}{% end %}{% end %}\r\n      {% else %}{% if context %}\r\n        {% if context.names[0..-2].size > 0 %}\r\n          {% new_context = ((context.names[0..-2].join(\"::\")).gsub(/(\\:\\:)+/, \"::\")).id %}\r\n          Anyolite::Macro.resolve_pointer_type({{ new_context }}::{{ raw_type.stringify.starts_with?(\"::\") ? raw_type.stringify[2..-1].id : raw_type }}, {{ raw_type }}, {{ new_context }})\r\n        {% else %}\r\n          Anyolite::Macro.resolve_pointer_type({{ raw_type }}, {{ raw_type }})\r\n        {% end %}\r\n      {% else %}\r\n        {% raise(\"Could not resolve #{type}, which is a #{type.class_name}, in any meaningful way\") %}\r\n      {% end %}{% end %}\n\r\n    \n"}},{"id":"resolve_type_in_ruby(type,raw_type,context=nil)-macro","html_id":"resolve_type_in_ruby(type,raw_type,context=nil)-macro","name":"resolve_type_in_ruby","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"raw_type","doc":null,"default_value":"","external_name":"raw_type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(type, raw_type, context = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/RubyTypes.cr","line_number":17,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/RubyTypes.cr#L17"},"def":{"name":"resolve_type_in_ruby","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"raw_type","doc":null,"default_value":"","external_name":"raw_type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if type.resolve? %}\r\n        {% if type.resolve <= Bool %}\r\n          Anyolite::RbCore::RbBool\r\n        {% else %}{% if type.resolve <= Int %}\r\n          Anyolite::RbCore::RbInt\r\n        {% else %}{% if type.resolve <= Float %}\r\n          Anyolite::RbCore::RbFloat\r\n        {% else %}{% if type.resolve <= String %}\r\n          # Should actually never occur due to special handling before this function\r\n          Pointer(LibC::Char)\r\n        {% else %}\r\n          Anyolite::RbCore::RbValue\r\n        {% end %}{% end %}{% end %}{% end %}\r\n      {% else %}{% if context %}\r\n        {% if context.names[0..-2].size > 0 %}\r\n          {% new_context = ((context.names[0..-2].join(\"::\")).gsub(/(\\:\\:)+/, \"::\")).id %}\r\n          Anyolite::Macro.resolve_type_in_ruby({{ new_context }}::{{ raw_type.stringify.starts_with?(\"::\") ? raw_type.stringify[2..-1].id : raw_type }}, {{ raw_type }}, {{ new_context }})\r\n        {% else %}\r\n          Anyolite::Macro.resolve_type_in_ruby({{ raw_type }}, {{ raw_type }})\r\n        {% end %}\r\n      {% else %}\r\n        {% raise(\"Could not resolve #{type}, which is a #{type.class_name}, in any meaningful way\") %}\r\n      {% end %}{% end %}\n\r\n    \n"}},{"id":"type_in_ruby(type,context=nil)-macro","html_id":"type_in_ruby(type,context=nil)-macro","name":"type_in_ruby","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(type, context = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/RubyTypes.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/RubyTypes.cr#L3"},"def":{"name":"type_in_ruby","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if type.is_a?(TypeDeclaration) %}\r\n        {% if type.type.is_a?(Union) %}\r\n          Anyolite::RbCore::RbValue\r\n        {% else %}\r\n          Anyolite::Macro.type_in_ruby({{ type.type }})\r\n        {% end %}\r\n      {% else %}{% if context %}\r\n        Anyolite::Macro.resolve_type_in_ruby({{ context }}::{{ type.stringify.starts_with?(\"::\") ? type.stringify[2..-1].id : type }}, {{ type }}, {{ context }})\r\n      {% else %}\r\n        Anyolite::Macro.resolve_type_in_ruby({{ type }}, {{ type }})\r\n      {% end %}{% end %}\n\r\n    \n"}},{"id":"wrap_all_class_methods(rb_interpreter,crystal_class,exclusions,verbose,context=nil)-macro","html_id":"wrap_all_class_methods(rb_interpreter,crystal_class,exclusions,verbose,context=nil)-macro","name":"wrap_all_class_methods","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"exclusions","doc":null,"default_value":"","external_name":"exclusions","restriction":""},{"name":"verbose","doc":null,"default_value":"","external_name":"verbose","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(rb_interpreter, crystal_class, exclusions, verbose, context = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/WrapAll.cr","line_number":117,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/WrapAll.cr#L117"},"def":{"name":"wrap_all_class_methods","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"exclusions","doc":null,"default_value":"","external_name":"exclusions","restriction":""},{"name":"verbose","doc":null,"default_value":"","external_name":"verbose","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% has_specialized_method = {} of String => Bool %}\n\r\n\r\n      \n{% for method in crystal_class.resolve.class.methods %}\r\n        {% all_annotations_specialize_im = crystal_class.resolve.annotations(Anyolite::SpecializeClassMethod) %}\r\n        {% annotation_specialize_im = all_annotations_specialize_im.find do |element|\n  (element[0].stringify == method.name.stringify) || (element[0] == method.name.stringify)\nend %}\r\n\r\n        {% if method.annotation(Anyolite::Specialize) %}\r\n          {% has_specialized_method[method.name.stringify] = true %}\r\n        {% end %}\r\n\r\n        {% if annotation_specialize_im %}\r\n          {% has_specialized_method[annotation_specialize_im[0].id.stringify] = true %}\r\n        {% end %}\r\n      {% end %}\n\r\n\r\n      \n{% how_many_times_wrapped = {} of String => UInt32 %}\n\r\n\r\n      \n# TODO: Replace all im here with cm\r\n\n      \n{% for method, index in crystal_class.resolve.class.methods %}\r\n        {% all_annotations_exclude_im = crystal_class.resolve.annotations(Anyolite::ExcludeClassMethod) %}\r\n        {% annotation_exclude_im = all_annotations_exclude_im.find do |element|\n  element[0].id.stringify == method.name.stringify\nend %}\r\n\r\n        {% all_annotations_specialize_im = crystal_class.resolve.annotations(Anyolite::SpecializeClassMethod) %}\r\n        {% annotation_specialize_im = all_annotations_specialize_im.find do |element|\n  element[0].id.stringify == method.name.stringify\nend %}\r\n\r\n        {% all_annotations_rename_im = crystal_class.resolve.annotations(Anyolite::RenameClassMethod) %}\r\n        {% annotation_rename_im = all_annotations_rename_im.find do |element|\n  element[0].id.stringify == method.name.stringify\nend %}\r\n\r\n        {% all_annotations_without_keywords_im = crystal_class.resolve.annotations(Anyolite::WrapWithoutKeywordsClassMethod) %}\r\n        {% annotation_without_keyword_im = all_annotations_without_keywords_im.find do |element|\n  element[0].id.stringify == method.name.stringify\nend %}\r\n\r\n        {% all_annotations_return_nil_im = crystal_class.resolve.annotations(Anyolite::ReturnNilClassMethod) %}\r\n        {% annotation_return_nil_im = all_annotations_return_nil_im.find do |element|\n  element[0].id.stringify == method.name.stringify\nend %}\r\n\r\n        {% if method.annotation(Anyolite::Rename) %}\r\n          {% ruby_name = (method.annotation(Anyolite::Rename))[0].id %}\r\n        {% else %}{% if annotation_rename_im && (method.name.stringify == annotation_rename_im[0].stringify) %}\r\n          {% ruby_name = annotation_rename_im[1].id %}\r\n        {% else %}\r\n          {% ruby_name = method.name %}\r\n        {% end %}{% end %}\r\n\r\n        {% added_keyword_args = nil %}\r\n\r\n        {% if (method.annotation(Anyolite::Specialize)) && (method.annotation(Anyolite::Specialize))[1] %}\r\n          {% added_keyword_args = (method.annotation(Anyolite::Specialize))[1] %}\r\n        {% end %}\r\n\r\n        {% if annotation_specialize_im && ((method.args.stringify == annotation_specialize_im[1].stringify) || ((method.args.stringify == \"[]\") && (annotation_specialize_im[1] == nil))) %}\r\n          {% added_keyword_args = annotation_specialize_im[2] %}\r\n        {% end %}\r\n\r\n        {% without_keywords = false %}\r\n\r\n        {% if method.annotation(Anyolite::WrapWithoutKeywords) %}\r\n          {% without_keywords = (method.annotation(Anyolite::WrapWithoutKeywords))[0] ? (method.annotation(Anyolite::WrapWithoutKeywords))[0] : -1 %}\r\n        {% else %}{% if annotation_without_keyword_im %}\r\n          {% without_keywords = annotation_without_keyword_im[1] ? annotation_without_keyword_im[1] : -1 %}\r\n        {% end %}{% end %}\r\n\r\n        {% return_nil = false %}\r\n        {% if (method.annotation(Anyolite::ReturnNil)) || (annotation_return_nil_im) %}\r\n          {% return_nil = true %}\r\n        {% end %}\r\n\r\n        {% if verbose\n  puts(\"> Processing class method #{crystal_class}::#{method.name} to #{ruby_name}\\n--> Args: #{method.args}\")\nend %}\r\n        \r\n        # Ignore private and protected methods (can't be called from outside, they'd need to be wrapped for this to work)\r\n        {% if method.visibility != (:public) %}\r\n          {% if verbose\n  puts(\"--> Excluding #{crystal_class}::#{method.name} (Exclusion due to visibility)\")\nend %}\r\n        # We already wrapped 'initialize', so we don't need to wrap these\r\n        {% else %}{% if (method.name == \"allocate\") || (method.name == \"new\") %}\r\n          {% if verbose\n  puts(\"--> Excluding #{crystal_class}::#{method.name} (Allocation method)\")\nend %}\r\n        # Exclude methods if given as arguments\r\n        {% else %}{% if (exclusions.includes?(method.name.symbolize)) || (exclusions.includes?(method.name)) %}\r\n          {% if verbose\n  puts(\"--> Excluding #{crystal_class}::#{method.name} (Exclusion argument)\")\nend %}\r\n        # Exclude methods which were annotated to be excluded\r\n        {% else %}{% if (method.annotation(Anyolite::Exclude)) || (annotation_exclude_im) %}\r\n          {% if verbose\n  puts(\"--> Excluding #{crystal_class}::#{method.name} (Exclusion annotation)\")\nend %}\r\n        # Exclude methods which are not the specialized methods\r\n        {% else %}{% if has_specialized_method[method.name.stringify] && (!((method.annotation(Anyolite::Specialize)) || (annotation_specialize_im && ((method.args.stringify == annotation_specialize_im[1].stringify) || ((method.args.stringify == \"[]\") && (annotation_specialize_im[1] == nil)))))) %}\r\n          {% if verbose\n  puts(\"--> Excluding #{crystal_class}::#{method.name} (Specialization)\")\nend %}\r\n        {% else %}{% if method.name[-1..-1] =~ (/\\W/) %}\r\n          {% operator = ruby_name %}\r\n\r\n          Anyolite::Macro.wrap_method_index({{ rb_interpreter }}, {{ crystal_class }}, {{ index }}, \"{{ ruby_name }}\", operator: \"{{ operator }}\", is_class_method: true, without_keywords: -1, context: {{ context }}, return_nil: {{ return_nil }})\r\n          {% how_many_times_wrapped[ruby_name.stringify] = how_many_times_wrapped[ruby_name.stringify] ? how_many_times_wrapped[ruby_name.stringify] + 1 : 1 %}\r\n        # Handle other class methods\r\n        {% else %}\r\n          Anyolite::Macro.wrap_method_index({{ rb_interpreter }}, {{ crystal_class }}, {{ index }}, \"{{ ruby_name }}\", is_class_method: true, without_keywords: {{ without_keywords }}, added_keyword_args: {{ added_keyword_args }}, context: {{ context }}, return_nil: {{ return_nil }})\r\n          {% how_many_times_wrapped[ruby_name.stringify] = how_many_times_wrapped[ruby_name.stringify] ? how_many_times_wrapped[ruby_name.stringify] + 1 : 1 %}\r\n        {% end %}{% end %}{% end %}{% end %}{% end %}{% end %}\r\n\r\n        {% if how_many_times_wrapped[ruby_name.stringify] && how_many_times_wrapped[ruby_name.stringify] > 1 %}\r\n          {% puts(\"\\e[31m> WARNING: Method #{crystal_class}::#{ruby_name}\\n--> New arguments: #{method.args}\\n--> Wrapped more than once (#{how_many_times_wrapped[ruby_name.stringify]}).\\e[0m\") %}\r\n        {% end %}\r\n        {% if verbose\n  puts(\"\")\nend %}\r\n      {% end %}\n\r\n    \n"}},{"id":"wrap_all_constants(rb_interpreter,crystal_class,exclusions,verbose,context=nil)-macro","html_id":"wrap_all_constants(rb_interpreter,crystal_class,exclusions,verbose,context=nil)-macro","name":"wrap_all_constants","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"exclusions","doc":null,"default_value":"","external_name":"exclusions","restriction":""},{"name":"verbose","doc":null,"default_value":"","external_name":"verbose","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(rb_interpreter, crystal_class, exclusions, verbose, context = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/WrapAll.cr","line_number":218,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/WrapAll.cr#L218"},"def":{"name":"wrap_all_constants","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"exclusions","doc":null,"default_value":"","external_name":"exclusions","restriction":""},{"name":"verbose","doc":null,"default_value":"","external_name":"verbose","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n# TODO: Is the context needed here?\r\n\n\r\n      \n# NOTE: This check is necessary due to https://github.com/crystal-lang/crystal/issues/5757\r\n\n      \n{% if crystal_class.resolve.type_vars.empty? %}\r\n        {% for constant, index in crystal_class.resolve.constants %}\r\n          {% all_annotations_exclude_im = crystal_class.resolve.annotations(Anyolite::ExcludeConstant) %}\r\n          {% annotation_exclude_im = all_annotations_exclude_im.find do |element|\n  element[0].id.stringify == constant.stringify\nend %}\r\n\r\n          {% all_annotations_rename_im = crystal_class.resolve.annotations(Anyolite::RenameConstant) %}\r\n          {% annotation_rename_im = all_annotations_rename_im.find do |element|\n  element[0].id.stringify == constant.stringify\nend %}\r\n\r\n          {% if annotation_rename_im && (constant.stringify == annotation_rename_im[0].stringify) %}\r\n            {% ruby_name = annotation_rename_im[1].id %}\r\n          {% else %}\r\n            {% ruby_name = constant %}\r\n          {% end %}\r\n\r\n          {% if verbose\n  puts(\"> Processing constant #{crystal_class}::#{constant} to #{ruby_name}\")\nend %}\r\n          # Exclude methods which were annotated to be excluded\r\n          {% if (exclusions.includes?(constant.symbolize)) || (exclusions.includes?(constant)) %}\r\n            {% if verbose\n  puts(\"--> Excluding #{crystal_class}::#{constant} (Exclusion argument)\")\nend %}\r\n          {% else %}{% if annotation_exclude_im %}\r\n            {% if verbose\n  puts(\"--> Excluding #{crystal_class}::#{constant} (Exclusion annotation)\")\nend %}\r\n          {% else %}\r\n            Anyolite::Macro.wrap_constant_or_class({{ rb_interpreter }}, {{ crystal_class }}, \"{{ ruby_name }}\", {{ constant }}, {{ verbose }})\r\n          {% end %}{% end %}\r\n          {% if verbose\n  puts(\"\")\nend %}\r\n        {% end %}\r\n      {% end %}\n\r\n    \n"}},{"id":"wrap_all_instance_methods(rb_interpreter,crystal_class,exclusions,verbose,context=nil,use_enum_constructor=false)-macro","html_id":"wrap_all_instance_methods(rb_interpreter,crystal_class,exclusions,verbose,context=nil,use_enum_constructor=false)-macro","name":"wrap_all_instance_methods","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"exclusions","doc":null,"default_value":"","external_name":"exclusions","restriction":""},{"name":"verbose","doc":null,"default_value":"","external_name":"verbose","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"use_enum_constructor","doc":null,"default_value":"false","external_name":"use_enum_constructor","restriction":""}],"args_string":"(rb_interpreter, crystal_class, exclusions, verbose, context = <span class=\"n\">nil</span>, use_enum_constructor = <span class=\"n\">false</span>)","location":{"filename":"src/macros/WrapAll.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/WrapAll.cr#L3"},"def":{"name":"wrap_all_instance_methods","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"exclusions","doc":null,"default_value":"","external_name":"exclusions","restriction":""},{"name":"verbose","doc":null,"default_value":"","external_name":"verbose","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"use_enum_constructor","doc":null,"default_value":"false","external_name":"use_enum_constructor","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% has_specialized_method = {} of String => Bool %}\n\r\n\r\n      \n{% for method in crystal_class.resolve.methods %}\r\n        {% all_annotations_specialize_im = crystal_class.resolve.annotations(Anyolite::SpecializeInstanceMethod) %}\r\n        {% annotation_specialize_im = all_annotations_specialize_im.find do |element|\n  (element[0].stringify == method.name.stringify) || (element[0] == method.name.stringify)\nend %}\r\n\r\n        {% if method.annotation(Anyolite::Specialize) %}\r\n          {% has_specialized_method[method.name.stringify] = true %}\r\n        {% end %}\r\n\r\n        {% if annotation_specialize_im %}\r\n          {% has_specialized_method[annotation_specialize_im[0].id.stringify] = true %}\r\n        {% end %}\r\n      {% end %}\n\r\n\r\n      \n{% how_many_times_wrapped = {} of String => UInt32 %}\n\r\n\r\n      \n{% for method, index in crystal_class.resolve.methods %}\r\n        {% all_annotations_exclude_im = crystal_class.resolve.annotations(Anyolite::ExcludeInstanceMethod) %}\r\n        {% annotation_exclude_im = all_annotations_exclude_im.find do |element|\n  element[0].id.stringify == method.name.stringify\nend %}\r\n\r\n        {% all_annotations_specialize_im = crystal_class.resolve.annotations(Anyolite::SpecializeInstanceMethod) %}\r\n        {% annotation_specialize_im = all_annotations_specialize_im.find do |element|\n  element[0].id.stringify == method.name.stringify\nend %}\r\n\r\n        {% all_annotations_rename_im = crystal_class.resolve.annotations(Anyolite::RenameInstanceMethod) %}\r\n        {% annotation_rename_im = all_annotations_rename_im.find do |element|\n  element[0].id.stringify == method.name.stringify\nend %}\r\n\r\n        {% all_annotations_without_keywords_im = crystal_class.resolve.annotations(Anyolite::WrapWithoutKeywordsInstanceMethod) %}\r\n        {% annotation_without_keyword_im = all_annotations_without_keywords_im.find do |element|\n  element[0].id.stringify == method.name.stringify\nend %}\r\n\r\n        {% all_annotations_return_nil_im = crystal_class.resolve.annotations(Anyolite::ReturnNilInstanceMethod) %}\r\n        {% annotation_return_nil_im = all_annotations_return_nil_im.find do |element|\n  element[0].id.stringify == method.name.stringify\nend %}\r\n\r\n        {% if method.annotation(Anyolite::Rename) %}\r\n          {% ruby_name = (method.annotation(Anyolite::Rename))[0].id %}\r\n        {% else %}{% if annotation_rename_im && (method.name.stringify == annotation_rename_im[0].stringify) %}\r\n          {% ruby_name = annotation_rename_im[1].id %}\r\n        {% else %}\r\n          {% ruby_name = method.name %}\r\n        {% end %}{% end %}\r\n\r\n        {% added_keyword_args = nil %}\r\n\r\n        {% if (method.annotation(Anyolite::Specialize)) && (method.annotation(Anyolite::Specialize))[0] %}\r\n          {% added_keyword_args = (method.annotation(Anyolite::Specialize))[0] %}\r\n        {% end %}\r\n\r\n        {% if annotation_specialize_im && ((method.args.stringify == annotation_specialize_im[1].stringify) || ((method.args.stringify == \"[]\") && (annotation_specialize_im[1] == nil))) %}\r\n          {% added_keyword_args = annotation_specialize_im[2] %}\r\n        {% end %}\r\n\r\n        {% without_keywords = false %}\r\n\r\n        {% if method.annotation(Anyolite::WrapWithoutKeywords) %}\r\n          {% without_keywords = (method.annotation(Anyolite::WrapWithoutKeywords))[0] ? (method.annotation(Anyolite::WrapWithoutKeywords))[0] : -1 %}\r\n        {% else %}{% if annotation_without_keyword_im %}\r\n          {% without_keywords = annotation_without_keyword_im[1] ? annotation_without_keyword_im[1] : -1 %}\r\n        {% end %}{% end %}\r\n\r\n        {% return_nil = false %}\r\n        {% if (method.annotation(Anyolite::ReturnNil)) || (annotation_return_nil_im) %}\r\n          {% return_nil = true %}\r\n        {% end %}\r\n\r\n        {% if verbose\n  puts(\"> Processing instance method #{crystal_class}::#{method.name} to #{ruby_name}\\n--> Args: #{method.args}\")\nend %}\r\n        \r\n        # Ignore private and protected methods (can't be called from outside, they'd need to be wrapped for this to work)\r\n        {% if (method.visibility != (:public)) && (method.name != \"initialize\") %}\r\n          {% if verbose\n  puts(\"--> Excluding #{crystal_class}::#{method.name} (Exclusion due to visibility)\")\nend %}\r\n        # Ignore rb hooks, to_unsafe and finalize (unless specialized, but this is not recommended)\r\n        {% else %}{% if (((method.name.starts_with?(\"rb_\")) || (method.name == \"finalize\")) || (method.name == \"to_unsafe\")) && (!has_specialized_method[method.name.stringify]) %}\r\n          {% if verbose\n  puts(\"--> Excluding #{crystal_class}::#{method.name} (Exclusion by default)\")\nend %}\r\n        # Exclude methods if given as arguments\r\n        {% else %}{% if (exclusions.includes?(method.name.symbolize)) || (exclusions.includes?(method.name.stringify)) %}\r\n          {% if verbose\n  puts(\"--> Excluding #{crystal_class}::#{method.name} (Exclusion argument)\")\nend %}\r\n        # Exclude methods which were annotated to be excluded\r\n        {% else %}{% if (method.annotation(Anyolite::Exclude)) || (annotation_exclude_im) %}\r\n          {% if verbose\n  puts(\"--> Excluding #{crystal_class}::#{method.name} (Exclusion annotation)\")\nend %}\r\n        # Exclude methods which are not the specialized methods\r\n        {% else %}{% if has_specialized_method[method.name.stringify] && (!((method.annotation(Anyolite::Specialize)) || (annotation_specialize_im && ((method.args.stringify == annotation_specialize_im[1].stringify) || ((method.args.stringify == \"[]\") && (annotation_specialize_im[1] == nil)))))) %}\r\n          {% if verbose\n  puts(\"--> Excluding #{crystal_class}::#{method.name} #{method.args} (Specialization)\")\nend %}\r\n        # Handle operator methods (including setters) by just transferring the original name into the operator\r\n        # TODO: This might still be a source for potential bugs, so this code might need some reworking in the future\r\n        {% else %}{% if method.name[-1..-1] =~ (/\\W/) %}\r\n          {% operator = ruby_name %}\r\n\r\n          Anyolite::Macro.wrap_method_index({{ rb_interpreter }}, {{ crystal_class }}, {{ index }}, \"{{ ruby_name }}\", operator: \"{{ operator }}\", without_keywords: -1, context: {{ context }}, return_nil: {{ return_nil }})\r\n          {% how_many_times_wrapped[ruby_name.stringify] = how_many_times_wrapped[ruby_name.stringify] ? how_many_times_wrapped[ruby_name.stringify] + 1 : 1 %}\r\n        # Handle constructors\r\n        {% else %}{% if (method.name == \"initialize\") && (use_enum_constructor == false) %}\r\n          Anyolite::Macro.wrap_method_index({{ rb_interpreter }}, {{ crystal_class }}, {{ index }}, \"{{ ruby_name }}\", is_constructor: true, without_keywords: {{ without_keywords }}, added_keyword_args: {{ added_keyword_args }}, context: {{ context }}, return_nil: {{ return_nil }})\r\n          {% how_many_times_wrapped[ruby_name.stringify] = how_many_times_wrapped[ruby_name.stringify] ? how_many_times_wrapped[ruby_name.stringify] + 1 : 1 %}\r\n        # Handle other instance methods\r\n        {% else %}\r\n          Anyolite::Macro.wrap_method_index({{ rb_interpreter }}, {{ crystal_class }}, {{ index }}, \"{{ ruby_name }}\", without_keywords: {{ without_keywords }}, added_keyword_args: {{ added_keyword_args }}, context: {{ context }}, return_nil: {{ return_nil }})\r\n          {% how_many_times_wrapped[ruby_name.stringify] = how_many_times_wrapped[ruby_name.stringify] ? how_many_times_wrapped[ruby_name.stringify] + 1 : 1 %}\r\n        {% end %}{% end %}{% end %}{% end %}{% end %}{% end %}{% end %}\r\n\r\n        {% if how_many_times_wrapped[ruby_name.stringify] && how_many_times_wrapped[ruby_name.stringify] > 1 %}\r\n          {% puts(\"\\e[31m> WARNING: Method #{crystal_class}::#{ruby_name}\\n--> New arguments: #{method.args}\\n--> Wrapped more than once (#{how_many_times_wrapped[ruby_name.stringify]}).\\e[0m\") %}\r\n        {% end %}\r\n        {% if verbose\n  puts(\"\")\nend %}\r\n      {% end %}\n\r\n      \r\n      \n# Make sure to add a default constructor if none was specified with Crystal\r\n\n\r\n      \n{% if (!how_many_times_wrapped[\"initialize\"]) && (!use_enum_constructor) %}\r\n        Anyolite::Macro.add_default_constructor({{ rb_interpreter }}, {{ crystal_class }}, {{ verbose }})\r\n      {% else %}{% if (!how_many_times_wrapped[\"initialize\"]) && use_enum_constructor %}\r\n        Anyolite::Macro.add_enum_constructor({{ rb_interpreter }}, {{ crystal_class }}, {{ verbose }})\r\n      {% end %}{% end %}\n\r\n    \n"}},{"id":"wrap_class_method_with_args(rb_interpreter,crystal_class,name,proc,regular_args=nil,operator=&quot;&quot;,context=nil,return_nil=nil)-macro","html_id":"wrap_class_method_with_args(rb_interpreter,crystal_class,name,proc,regular_args=nil,operator=&amp;quot;&amp;quot;,context=nil,return_nil=nil)-macro","name":"wrap_class_method_with_args","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"nil","external_name":"return_nil","restriction":""}],"args_string":"(rb_interpreter, crystal_class, name, proc, regular_args = <span class=\"n\">nil</span>, operator = <span class=\"s\">&quot;&quot;</span>, context = <span class=\"n\">nil</span>, return_nil = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/Wrappers.cr","line_number":54,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/Wrappers.cr#L54"},"def":{"name":"wrap_class_method_with_args","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"nil","external_name":"return_nil","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if regular_args.is_a?(ArrayLiteral) %}\r\n        {% regular_arg_array = regular_args %}\r\n      {% else %}{% if regular_args == nil %}\r\n        {% regular_arg_array = nil %}\r\n      {% else %}\r\n        {% regular_arg_array = [regular_args] %}\r\n      {% end %}{% end %}\n\r\n\r\n      \n{% type_vars = crystal_class.resolve.type_vars %}\n\r\n      \n{% type_var_names_annotation = crystal_class.resolve.annotation(Anyolite::SpecifyGenericTypes) %}\n\r\n      \n{% type_var_names = type_var_names_annotation ? type_var_names_annotation[0] : nil %}\n\r\n\r\n      wrapped_method = Anyolite::RbCore::RbFunc.new do |rb, obj|\r\n        converted_args = Anyolite::Macro.get_converted_args(rb, \n{{ regular_arg_array }}\n, context: \n{{ context }}\n)\r\n        Anyolite::Macro.call_and_return(rb, \n{{ proc }}\n, \n{{ regular_arg_array }}\n, converted_args, operator: \n{{ operator }}\n, return_nil: \n{{ return_nil }}\n)\r\n      \nend\r\n      \r\n      \n{{ rb_interpreter }}\n.define_class_method(\n{{ name }}\n, Anyolite::RbClassCache.get(\n{{ crystal_class }}\n), wrapped_method)\r\n    \n"}},{"id":"wrap_class_method_with_keyword_args(rb_interpreter,crystal_class,name,proc,keyword_args,regular_args=nil,operator=&quot;&quot;,context=nil,return_nil=nil)-macro","html_id":"wrap_class_method_with_keyword_args(rb_interpreter,crystal_class,name,proc,keyword_args,regular_args=nil,operator=&amp;quot;&amp;quot;,context=nil,return_nil=nil)-macro","name":"wrap_class_method_with_keyword_args","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"nil","external_name":"return_nil","restriction":""}],"args_string":"(rb_interpreter, crystal_class, name, proc, keyword_args, regular_args = <span class=\"n\">nil</span>, operator = <span class=\"s\">&quot;&quot;</span>, context = <span class=\"n\">nil</span>, return_nil = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/Wrappers.cr","line_number":75,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/Wrappers.cr#L75"},"def":{"name":"wrap_class_method_with_keyword_args","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"nil","external_name":"return_nil","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if regular_args.is_a?(ArrayLiteral) %}\r\n        {% regular_arg_array = regular_args %}\r\n      {% else %}{% if regular_args == nil %}\r\n        {% regular_arg_array = nil %}\r\n      {% else %}\r\n        {% regular_arg_array = [regular_args] %}\r\n      {% end %}{% end %}\n\r\n\r\n      \n{% type_vars = crystal_class.resolve.type_vars %}\n\r\n      \n{% type_var_names_annotation = crystal_class.resolve.annotation(Anyolite::SpecifyGenericTypes) %}\n\r\n      \n{% type_var_names = type_var_names_annotation ? type_var_names_annotation[0] : nil %}\n\r\n\r\n      wrapped_method = Anyolite::RbCore::RbFunc.new do |rb, obj|\r\n        regular_arg_tuple = Anyolite::Macro.generate_arg_tuple(\n{{ rb_interpreter }}\n, \n{{ regular_arg_array }}\n, context: \n{{ context }}\n)\r\n        format_string = Anyolite::Macro.format_string(\n{{ regular_arg_array }}\n, context: \n{{ context }}\n) + \":\"\r\n\r\n        kw_args = Anyolite::Macro.generate_keyword_argument_struct(\n{{ rb_interpreter }}\n, \n{{ keyword_args }}\n)\r\n        Anyolite::RbCore.rb_get_args(rb, format_string, *regular_arg_tuple, pointerof(kw_args))\r\n\r\n        converted_regular_args = Anyolite::Macro.convert_args(rb, regular_arg_tuple, \n{{ regular_arg_array }}\n, context: \n{{ context }}\n)\r\n\r\n        \n{% if (!regular_arg_array) || (regular_arg_array.size == 0) %}\r\n          Anyolite::Macro.call_and_return_keyword_method(rb, {{ proc }}, converted_regular_args, {{ keyword_args }}, kw_args, operator: {{ operator }}, \r\n            empty_regular: true, context: {{ context }}, type_vars: {{ type_vars }}, type_var_names: {{ type_var_names }}, return_nil: {{ return_nil }})\r\n        {% else %}\r\n          Anyolite::Macro.call_and_return_keyword_method(rb, {{ proc }}, converted_regular_args, {{ keyword_args }}, kw_args, operator: {{ operator }}, \r\n            context: {{ context }}, type_vars: {{ type_vars }}, type_var_names: {{ type_var_names }}), return_nil: {{ return_nil }}\r\n        {% end %}\n\r\n      \nend\r\n\r\n      \n{{ rb_interpreter }}\n.define_class_method(\n{{ name }}\n, Anyolite::RbClassCache.get(\n{{ crystal_class }}\n), wrapped_method)\r\n    \n"}},{"id":"wrap_constant_or_class(rb_interpreter,under_class_or_module,ruby_name,value,verbose=false)-macro","html_id":"wrap_constant_or_class(rb_interpreter,under_class_or_module,ruby_name,value,verbose=false)-macro","name":"wrap_constant_or_class","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"under_class_or_module","doc":null,"default_value":"","external_name":"under_class_or_module","restriction":""},{"name":"ruby_name","doc":null,"default_value":"","external_name":"ruby_name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"verbose","doc":null,"default_value":"false","external_name":"verbose","restriction":""}],"args_string":"(rb_interpreter, under_class_or_module, ruby_name, value, verbose = <span class=\"n\">false</span>)","location":{"filename":"src/macros/Wrappers.cr","line_number":250,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/Wrappers.cr#L250"},"def":{"name":"wrap_constant_or_class","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"under_class_or_module","doc":null,"default_value":"","external_name":"under_class_or_module","restriction":""},{"name":"ruby_name","doc":null,"default_value":"","external_name":"ruby_name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"verbose","doc":null,"default_value":"false","external_name":"verbose","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% actual_constant = under_class_or_module.resolve.constant(value.id) %}\n\r\n      \n{% if actual_constant.is_a?(TypeNode) %}\r\n        {% if actual_constant.module? %}\r\n          Anyolite.wrap_module_with_methods({{ rb_interpreter }}, {{ actual_constant }}, under: {{ under_class_or_module }}, verbose: {{ verbose }})\r\n        {% else %}{% if actual_constant.class? || actual_constant.struct? %}\r\n          Anyolite.wrap_class_with_methods({{ rb_interpreter }}, {{ actual_constant }}, under: {{ under_class_or_module }}, verbose: {{ verbose }})\r\n        {% else %}{% if actual_constant.union? %}\r\n          {% puts(\"\\e[31m> WARNING: Wrapping of unions not supported, thus skipping #{actual_constant}\\e[0m\") %}\r\n        {% else %}{% if actual_constant < Enum %}\r\n          Anyolite.wrap_class_with_methods({{ rb_interpreter }}, {{ actual_constant }}, under: {{ under_class_or_module }}, use_enum_constructor: true, verbose: {{ verbose }})\r\n        {% else %}\r\n          # Could be an alias, just try the default case\r\n          Anyolite.wrap_class_with_methods({{ rb_interpreter }}, {{ actual_constant }}, under: {{ under_class_or_module }}, verbose: {{ verbose }})\r\n        {% end %}{% end %}{% end %}{% end %}\r\n      {% else %}\r\n        Anyolite.wrap_constant_under_class({{ rb_interpreter }}, {{ under_class_or_module }}, {{ ruby_name }}, {{ under_class_or_module }}::{{ value }})\r\n      {% end %}\n\r\n    \n"}},{"id":"wrap_constructor_function_with_args(rb_interpreter,crystal_class,proc,regular_args=nil,operator=&quot;&quot;,context=nil)-macro","html_id":"wrap_constructor_function_with_args(rb_interpreter,crystal_class,proc,regular_args=nil,operator=&amp;quot;&amp;quot;,context=nil)-macro","name":"wrap_constructor_function_with_args","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(rb_interpreter, crystal_class, proc, regular_args = <span class=\"n\">nil</span>, operator = <span class=\"s\">&quot;&quot;</span>, context = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/Wrappers.cr","line_number":177,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/Wrappers.cr#L177"},"def":{"name":"wrap_constructor_function_with_args","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if regular_args.is_a?(ArrayLiteral) %}\r\n        {% regular_arg_array = regular_args %}\r\n      {% else %}{% if regular_args == nil %}\r\n        {% regular_arg_array = nil %}\r\n      {% else %}\r\n        {% regular_arg_array = [regular_args] %}\r\n      {% end %}{% end %}\n\r\n\r\n      \n{% type_vars = crystal_class.resolve.type_vars %}\n\r\n      \n{% type_var_names_annotation = crystal_class.resolve.annotation(Anyolite::SpecifyGenericTypes) %}\n\r\n      \n{% type_var_names = type_var_names_annotation ? type_var_names_annotation[0] : nil %}\n\r\n\r\n      wrapped_method = Anyolite::RbCore::RbFunc.new do |rb, obj|\r\n        converted_args = Anyolite::Macro.get_converted_args(rb, \n{{ regular_arg_array }}\n, context: \n{{ context }}\n)\r\n        new_obj = \n{{ proc }}\n{{ operator.id }}\n(*converted_args)\r\n\r\n        Anyolite::Macro.allocate_constructed_object(\n{{ crystal_class }}\n, obj, new_obj)\r\n        obj\r\n      \nend\r\n\r\n      \n{{ rb_interpreter }}\n.define_method(\"initialize\", Anyolite::RbClassCache.get(\n{{ crystal_class }}\n), wrapped_method)\r\n    \n"}},{"id":"wrap_constructor_function_with_keyword_args(rb_interpreter,crystal_class,proc,keyword_args,regular_args=nil,operator=&quot;&quot;,context=nil)-macro","html_id":"wrap_constructor_function_with_keyword_args(rb_interpreter,crystal_class,proc,keyword_args,regular_args=nil,operator=&amp;quot;&amp;quot;,context=nil)-macro","name":"wrap_constructor_function_with_keyword_args","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"args_string":"(rb_interpreter, crystal_class, proc, keyword_args, regular_args = <span class=\"n\">nil</span>, operator = <span class=\"s\">&quot;&quot;</span>, context = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/Wrappers.cr","line_number":201,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/Wrappers.cr#L201"},"def":{"name":"wrap_constructor_function_with_keyword_args","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if regular_args.is_a?(ArrayLiteral) %}\r\n        {% regular_arg_array = regular_args %}\r\n      {% else %}{% if regular_args == nil %}\r\n        {% regular_arg_array = nil %}\r\n      {% else %}\r\n        {% regular_arg_array = [regular_args] %}\r\n      {% end %}{% end %}\n\r\n\r\n      \n{% type_vars = crystal_class.resolve.type_vars %}\n\r\n      \n{% type_var_names_annotation = crystal_class.resolve.annotation(Anyolite::SpecifyGenericTypes) %}\n\r\n      \n{% type_var_names = type_var_names_annotation ? type_var_names_annotation[0] : nil %}\n\r\n\r\n      wrapped_method = Anyolite::RbCore::RbFunc.new do |rb, obj|\r\n        regular_arg_tuple = Anyolite::Macro.generate_arg_tuple(\n{{ rb_interpreter }}\n, \n{{ regular_arg_array }}\n, context: \n{{ context }}\n)\r\n        format_string = Anyolite::Macro.format_string(\n{{ regular_arg_array }}\n, context: \n{{ context }}\n) + \":\"\r\n\r\n        kw_args = Anyolite::Macro.generate_keyword_argument_struct(\n{{ rb_interpreter }}\n, \n{{ keyword_args }}\n)\r\n        Anyolite::RbCore.rb_get_args(rb, format_string, *regular_arg_tuple, pointerof(kw_args))\r\n\r\n        converted_regular_args = Anyolite::Macro.convert_args(rb, regular_arg_tuple, \n{{ regular_arg_array }}\n, context: \n{{ context }}\n)\r\n\r\n        \n{% if (!regular_arg_array) || (regular_arg_array.size == 0) %}\r\n          new_obj = {{ proc }}{{ operator.id }}(\r\n            {% c = 0 %}\r\n            {% for keyword in keyword_args %}\r\n              {{ keyword.var.id }}: Anyolite::Macro.convert_keyword_arg(rb, kw_args.values[{{ c }}], {{ keyword }}, context: {{ context }}, \r\n                type_vars: {{ type_vars }}, type_var_names: {{ type_var_names }}, debug_information: {{ (proc.stringify + \" - \") + keyword_args.stringify }}),\r\n              {% c += 1 %}\r\n            {% end %}\r\n          )\r\n        {% else %}\r\n          new_obj = {{ proc }}{{ operator.id }}(*converted_regular_args,\r\n            {% c = 0 %}\r\n            {% for keyword in keyword_args %}\r\n              {{ keyword.var.id }}: Anyolite::Macro.convert_keyword_arg(rb, kw_args.values[{{ c }}], {{ keyword }}, context: {{ context }}, \r\n                type_vars: {{ type_vars }}, type_var_names: {{ type_var_names }}, debug_information: {{ (proc.stringify + \" - \") + keyword_args.stringify }}),\r\n              {% c += 1 %}\r\n            {% end %}\r\n          )\r\n        {% end %}\n\r\n\r\n        Anyolite::Macro.allocate_constructed_object(\n{{ crystal_class }}\n, obj, new_obj)\r\n        obj\r\n      \nend\r\n\r\n      \n{{ rb_interpreter }}\n.define_method(\"initialize\", Anyolite::RbClassCache.get(\n{{ crystal_class }}\n), wrapped_method)\r\n    \n"}},{"id":"wrap_instance_function_with_args(rb_interpreter,crystal_class,name,proc,regular_args=nil,operator=&quot;&quot;,context=nil,return_nil=nil)-macro","html_id":"wrap_instance_function_with_args(rb_interpreter,crystal_class,name,proc,regular_args=nil,operator=&amp;quot;&amp;quot;,context=nil,return_nil=nil)-macro","name":"wrap_instance_function_with_args","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"nil","external_name":"return_nil","restriction":""}],"args_string":"(rb_interpreter, crystal_class, name, proc, regular_args = <span class=\"n\">nil</span>, operator = <span class=\"s\">&quot;&quot;</span>, context = <span class=\"n\">nil</span>, return_nil = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/Wrappers.cr","line_number":109,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/Wrappers.cr#L109"},"def":{"name":"wrap_instance_function_with_args","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"nil","external_name":"return_nil","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if regular_args.is_a?(ArrayLiteral) %}\r\n        {% regular_arg_array = regular_args %}\r\n      {% else %}{% if regular_args == nil %}\r\n        {% regular_arg_array = nil %}\r\n      {% else %}\r\n        {% regular_arg_array = [regular_args] %}\r\n      {% end %}{% end %}\n\r\n\r\n      \n{% type_vars = crystal_class.resolve.type_vars %}\n\r\n      \n{% type_var_names_annotation = crystal_class.resolve.annotation(Anyolite::SpecifyGenericTypes) %}\n\r\n      \n{% type_var_names = type_var_names_annotation ? type_var_names_annotation[0] : nil %}\n\r\n\r\n      wrapped_method = Anyolite::RbCore::RbFunc.new do |rb, obj|\r\n        converted_args = Anyolite::Macro.get_converted_args(rb, \n{{ regular_arg_array }}\n, context: \n{{ context }}\n)\r\n\r\n        if \n{{ crystal_class }}\n <= Struct || \n{{ crystal_class }}\n <= Enum\r\n          converted_obj = Anyolite::Macro.convert_from_ruby_struct(rb, obj, \n{{ crystal_class }}\n).value\r\n        \nelse\r\n          converted_obj = Anyolite::Macro.convert_from_ruby_object(rb, obj, \n{{ crystal_class }}\n).value\r\n        \nend\r\n\r\n        Anyolite::Macro.call_and_return_instance_method(rb, \n{{ proc }}\n, converted_obj, converted_args, operator: \n{{ operator }}\n, return_nil: \n{{ return_nil }}\n)\r\n      \nend\r\n\r\n      \n{{ rb_interpreter }}\n.define_method(\n{{ name }}\n, Anyolite::RbClassCache.get(\n{{ crystal_class }}\n), wrapped_method)\r\n    \n"}},{"id":"wrap_instance_function_with_keyword_args(rb_interpreter,crystal_class,name,proc,keyword_args,regular_args=nil,operator=&quot;&quot;,context=nil,return_nil=nil)-macro","html_id":"wrap_instance_function_with_keyword_args(rb_interpreter,crystal_class,name,proc,keyword_args,regular_args=nil,operator=&amp;quot;&amp;quot;,context=nil,return_nil=nil)-macro","name":"wrap_instance_function_with_keyword_args","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"nil","external_name":"return_nil","restriction":""}],"args_string":"(rb_interpreter, crystal_class, name, proc, keyword_args, regular_args = <span class=\"n\">nil</span>, operator = <span class=\"s\">&quot;&quot;</span>, context = <span class=\"n\">nil</span>, return_nil = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/Wrappers.cr","line_number":137,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/Wrappers.cr#L137"},"def":{"name":"wrap_instance_function_with_keyword_args","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"nil","external_name":"return_nil","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if regular_args.is_a?(ArrayLiteral) %}\r\n        {% regular_arg_array = regular_args %}\r\n      {% else %}{% if regular_args == nil %}\r\n        {% regular_arg_array = nil %}\r\n      {% else %}\r\n        {% regular_arg_array = [regular_args] %}\r\n      {% end %}{% end %}\n\r\n\r\n      \n{% type_vars = crystal_class.resolve.type_vars %}\n\r\n      \n{% type_var_names_annotation = crystal_class.resolve.annotation(Anyolite::SpecifyGenericTypes) %}\n\r\n      \n{% type_var_names = type_var_names_annotation ? type_var_names_annotation[0] : nil %}\n\r\n\r\n      wrapped_method = Anyolite::RbCore::RbFunc.new do |rb, obj|\r\n        regular_arg_tuple = Anyolite::Macro.generate_arg_tuple(\n{{ rb_interpreter }}\n, \n{{ regular_arg_array }}\n, context: \n{{ context }}\n)\r\n        format_string = Anyolite::Macro.format_string(\n{{ regular_arg_array }}\n, context: \n{{ context }}\n) + \":\"\r\n\r\n        kw_args = Anyolite::Macro.generate_keyword_argument_struct(\n{{ rb_interpreter }}\n, \n{{ keyword_args }}\n)\r\n        Anyolite::RbCore.rb_get_args(rb, format_string, *regular_arg_tuple, pointerof(kw_args))\r\n\r\n        converted_regular_args = Anyolite::Macro.convert_args(rb, regular_arg_tuple, \n{{ regular_arg_array }}\n, context: \n{{ context }}\n)\r\n\r\n        if \n{{ crystal_class }}\n <= Struct || \n{{ crystal_class }}\n <= Enum\r\n          converted_obj = Anyolite::Macro.convert_from_ruby_struct(rb, obj, \n{{ crystal_class }}\n).value\r\n        \nelse\r\n          converted_obj = Anyolite::Macro.convert_from_ruby_object(rb, obj, \n{{ crystal_class }}\n).value\r\n        \nend\r\n\r\n        \n{% if (!regular_arg_array) || (regular_arg_array.size == 0) %}\r\n          Anyolite::Macro.call_and_return_keyword_instance_method(rb, {{ proc }}, converted_obj, converted_regular_args, {{ keyword_args }}, kw_args, operator: {{ operator }}, \r\n            empty_regular: true, context: {{ context }}, type_vars: {{ type_vars }}, type_var_names: {{ type_var_names }}, return_nil: {{ return_nil }})\r\n        {% else %}\r\n          Anyolite::Macro.call_and_return_keyword_instance_method(rb, {{ proc }}, converted_obj, converted_regular_args, {{ keyword_args }}, kw_args, operator: {{ operator }}, \r\n            context: {{ context }}, type_vars: {{ type_vars }}, type_var_names: {{ type_var_names }}, return_nil: {{ return_nil }})\r\n        {% end %}\n\r\n      \nend\r\n\r\n      \n{{ rb_interpreter }}\n.define_method(\n{{ name }}\n, Anyolite::RbClassCache.get(\n{{ crystal_class }}\n), wrapped_method)\r\n    \n"}},{"id":"wrap_method_index(rb_interpreter,crystal_class,method_index,ruby_name,is_constructor=false,is_class_method=false,operator=&quot;&quot;,cut_name=nil,without_keywords=false,added_keyword_args=nil,context=nil,return_nil=false)-macro","html_id":"wrap_method_index(rb_interpreter,crystal_class,method_index,ruby_name,is_constructor=false,is_class_method=false,operator=&amp;quot;&amp;quot;,cut_name=nil,without_keywords=false,added_keyword_args=nil,context=nil,return_nil=false)-macro","name":"wrap_method_index","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"method_index","doc":null,"default_value":"","external_name":"method_index","restriction":""},{"name":"ruby_name","doc":null,"default_value":"","external_name":"ruby_name","restriction":""},{"name":"is_constructor","doc":null,"default_value":"false","external_name":"is_constructor","restriction":""},{"name":"is_class_method","doc":null,"default_value":"false","external_name":"is_class_method","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"cut_name","doc":null,"default_value":"nil","external_name":"cut_name","restriction":""},{"name":"without_keywords","doc":null,"default_value":"false","external_name":"without_keywords","restriction":""},{"name":"added_keyword_args","doc":null,"default_value":"nil","external_name":"added_keyword_args","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"args_string":"(rb_interpreter, crystal_class, method_index, ruby_name, is_constructor = <span class=\"n\">false</span>, is_class_method = <span class=\"n\">false</span>, operator = <span class=\"s\">&quot;&quot;</span>, cut_name = <span class=\"n\">nil</span>, without_keywords = <span class=\"n\">false</span>, added_keyword_args = <span class=\"n\">nil</span>, context = <span class=\"n\">nil</span>, return_nil = <span class=\"n\">false</span>)","location":{"filename":"src/macros/WrapMethodIndex.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/WrapMethodIndex.cr#L3"},"def":{"name":"wrap_method_index","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""},{"name":"method_index","doc":null,"default_value":"","external_name":"method_index","restriction":""},{"name":"ruby_name","doc":null,"default_value":"","external_name":"ruby_name","restriction":""},{"name":"is_constructor","doc":null,"default_value":"false","external_name":"is_constructor","restriction":""},{"name":"is_class_method","doc":null,"default_value":"false","external_name":"is_class_method","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"cut_name","doc":null,"default_value":"nil","external_name":"cut_name","restriction":""},{"name":"without_keywords","doc":null,"default_value":"false","external_name":"without_keywords","restriction":""},{"name":"added_keyword_args","doc":null,"default_value":"nil","external_name":"added_keyword_args","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"false","external_name":"return_nil","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if is_class_method %}\r\n        {% method = crystal_class.resolve.class.methods[method_index] %}\r\n      {% else %}\r\n        {% method = crystal_class.resolve.methods[method_index] %}\r\n      {% end %}\n\r\n\r\n      \n{% if !operator.empty? %}\r\n        {% if cut_name %}\r\n          {% if is_class_method %}\r\n            {% final_method_name = \"#{crystal_class}.#{cut_name}\".id %}\r\n            {% final_operator = \"#{crystal_class}.#{operator.id}\" %}\r\n          {% else %}\r\n            {% final_method_name = cut_name %}\r\n            {% final_operator = operator %}\r\n          {% end %}\r\n        {% else %}\r\n          {% final_method_name = Anyolite::Empty %}\r\n          {% if is_class_method %}\r\n            {% final_operator = \"#{crystal_class}.#{operator.id}\" %}\r\n          {% else %}\r\n            {% final_operator = operator %}\r\n          {% end %}\r\n        {% end %}\r\n      {% else %}\r\n        {% if is_class_method %}\r\n          {% final_method_name = \"#{crystal_class}.#{method.name}\".id %}\r\n        {% else %}\r\n          {% final_method_name = method.name %}\r\n        {% end %}\r\n        {% final_operator = operator %}\r\n      {% end %}\n\r\n\r\n      \n{% final_arg_array = added_keyword_args ? added_keyword_args : method.args %}\n\r\n\r\n      \n{% if final_arg_array.empty? %}\r\n        {% if is_class_method %}\r\n          Anyolite.wrap_class_method({{ rb_interpreter }}, {{ crystal_class }}, {{ ruby_name }}, {{ final_method_name }}, operator: {{ final_operator }}, context: {{ context }}, return_nil: {{ return_nil }})\r\n        {% else %}{% if is_constructor %}\r\n          # Do not ever let a constructor return nil (for now)\r\n          Anyolite.wrap_constructor({{ rb_interpreter }}, {{ crystal_class }}, context: {{ context }})\r\n        {% else %}\r\n          Anyolite.wrap_instance_method({{ rb_interpreter }}, {{ crystal_class }}, {{ ruby_name }}, {{ final_method_name }}, operator: {{ final_operator }}, context: {{ context }}, return_nil: {{ return_nil }})\r\n        {% end %}{% end %}\r\n\r\n      # A complicated check, but it is more stable than simply checking for colons\r\n      {% else %}{% if final_arg_array.find do |m|\n  (m.is_a?(TypeDeclaration) && m.type) || (m.is_a?(Arg) && m.restriction)\nend %}\r\n        {% if without_keywords %}\r\n          {% if without_keywords >= final_arg_array.size %}\r\n            {% regular_arg_partition = nil %}\r\n            {% keyword_arg_partition = final_arg_array %}\r\n          {% else %}{% if without_keywords < 0 %}\r\n            {% regular_arg_partition = final_arg_array %}\r\n            {% keyword_arg_partition = nil %}\r\n          {% else %}\r\n            {% regular_arg_partition = final_arg_array[0..(without_keywords - 1)] %}\r\n            {% keyword_arg_partition = final_arg_array[without_keywords..-1] %}\r\n          {% end %}{% end %}\r\n\r\n          {% if keyword_arg_partition %}\r\n            {% if is_class_method %}\r\n              Anyolite.wrap_class_method_with_keywords({{ rb_interpreter }}, {{ crystal_class }}, {{ ruby_name }}, {{ final_method_name }}, \r\n                {{ keyword_arg_partition }}, regular_args: {{ regular_arg_partition }}, operator: {{ final_operator }}, context: {{ context }}, return_nil: {{ return_nil }})\r\n            {% else %}{% if is_constructor %}\r\n              Anyolite.wrap_constructor_with_keywords({{ rb_interpreter }}, {{ crystal_class }}, \r\n                {{ keyword_arg_partition }}, regular_args: {{ regular_arg_partition }}, operator: {{ final_operator }}, context: {{ context }})\r\n            {% else %}\r\n              Anyolite.wrap_instance_method_with_keywords({{ rb_interpreter }}, {{ crystal_class }}, {{ ruby_name }}, {{ final_method_name }}, \r\n                {{ keyword_arg_partition }}, regular_args: {{ regular_arg_partition }}, operator: {{ final_operator }}, context: {{ context }}, return_nil: {{ return_nil }})\r\n            {% end %}{% end %}\r\n          {% else %}\r\n            {% if is_class_method %}\r\n              Anyolite.wrap_class_method({{ rb_interpreter }}, {{ crystal_class }}, {{ ruby_name }}, {{ final_method_name }}, \r\n                {{ regular_arg_partition }}, operator: {{ final_operator }}, context: {{ context }}, return_nil: {{ return_nil }})\r\n            {% else %}{% if is_constructor %}\r\n              Anyolite.wrap_constructor({{ rb_interpreter }}, {{ crystal_class }}, \r\n                {{ regular_arg_partition }}, operator: {{ final_operator }}, context: {{ context }})\r\n            {% else %}\r\n              Anyolite.wrap_instance_method({{ rb_interpreter }}, {{ crystal_class }}, {{ ruby_name }}, {{ final_method_name }}, \r\n                {{ regular_arg_partition }}, operator: {{ final_operator }}, context: {{ context }}, return_nil: {{ return_nil }})\r\n            {% end %}{% end %}\r\n          {% end %}\r\n        {% else %}\r\n          {% if is_class_method %}\r\n            Anyolite.wrap_class_method_with_keywords({{ rb_interpreter }}, {{ crystal_class }}, {{ ruby_name }}, {{ final_method_name }}, \r\n              {{ final_arg_array }}, operator: {{ final_operator }}, context: {{ context }}, return_nil: {{ return_nil }})\r\n          {% else %}{% if is_constructor %}\r\n            Anyolite.wrap_constructor_with_keywords({{ rb_interpreter }}, {{ crystal_class }}, \r\n              {{ final_arg_array }}, operator: {{ final_operator }}, context: {{ context }})\r\n          {% else %}\r\n            Anyolite.wrap_instance_method_with_keywords({{ rb_interpreter }}, {{ crystal_class }}, {{ ruby_name }}, {{ final_method_name }}, \r\n              {{ final_arg_array }}, operator: {{ final_operator }}, context: {{ context }}, return_nil: {{ return_nil }})\r\n          {% end %}{% end %}\r\n        {% end %}\r\n\r\n      {% else %}\r\n        {% if is_class_method %}\r\n          {% puts(\"\\e[33m> INFO: Could not wrap function '#{crystal_class}.#{method.name}' with args #{method.args}.\\e[0m\") %}\r\n        {% else %}\r\n          {% puts(\"\\e[33m> INFO: Could not wrap function '#{method.name}' with args #{method.args}.\\e[0m\") %}\r\n        {% end %}\r\n      {% end %}{% end %}\n\r\n    \n"}},{"id":"wrap_module_function_with_args(rb_interpreter,under_module,name,proc,regular_args=nil,context=nil,return_nil=nil)-macro","html_id":"wrap_module_function_with_args(rb_interpreter,under_module,name,proc,regular_args=nil,context=nil,return_nil=nil)-macro","name":"wrap_module_function_with_args","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"under_module","doc":null,"default_value":"","external_name":"under_module","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"nil","external_name":"return_nil","restriction":""}],"args_string":"(rb_interpreter, under_module, name, proc, regular_args = <span class=\"n\">nil</span>, context = <span class=\"n\">nil</span>, return_nil = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/Wrappers.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/Wrappers.cr#L3"},"def":{"name":"wrap_module_function_with_args","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"under_module","doc":null,"default_value":"","external_name":"under_module","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"nil","external_name":"return_nil","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if regular_args.is_a?(ArrayLiteral) %}\r\n        {% regular_arg_array = regular_args %}\r\n      {% else %}{% if regular_args == nil %}\r\n        {% regular_arg_array = nil %}\r\n      {% else %}\r\n        {% regular_arg_array = [regular_args] %}\r\n      {% end %}{% end %}\n\r\n\r\n      \n{% type_vars = crystal_class.resolve.type_vars %}\n\r\n      \n{% type_var_names_annotation = crystal_class.resolve.annotation(Anyolite::SpecifyGenericTypes) %}\n\r\n      \n{% type_var_names = type_var_names_annotation ? type_var_names_annotation[0] : nil %}\n\r\n\r\n      \n{% proc_arg_array = Anyolite::Macro.put_args_in_array(regular_args) %}\n\r\n\r\n      wrapped_method = Anyolite::RbCore::RbFunc.new do |rb, obj|\r\n        converted_args = Anyolite::Macro.get_converted_args(rb, \n{{ proc_arg_array }}\n, context: \n{{ context }}\n)\r\n        Anyolite::Macro.call_and_return(rb, \n{{ proc }}\n, \n{{ proc_arg_array }}\n, converted_args, return_nil: \n{{ return_nil }}\n)\r\n      \nend\r\n\r\n      \n{{ rb_interpreter }}\n.define_module_function(\n{{ name }}\n, Anyolite::RbClassCache.get(\n{{ under_module }}\n), wrapped_method)\r\n    \n"}},{"id":"wrap_module_function_with_keyword_args(rb_interpreter,under_module,name,proc,keyword_args,regular_args=nil,operator=&quot;&quot;,context=nil,return_nil=nil)-macro","html_id":"wrap_module_function_with_keyword_args(rb_interpreter,under_module,name,proc,keyword_args,regular_args=nil,operator=&amp;quot;&amp;quot;,context=nil,return_nil=nil)-macro","name":"wrap_module_function_with_keyword_args","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"under_module","doc":null,"default_value":"","external_name":"under_module","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"nil","external_name":"return_nil","restriction":""}],"args_string":"(rb_interpreter, under_module, name, proc, keyword_args, regular_args = <span class=\"n\">nil</span>, operator = <span class=\"s\">&quot;&quot;</span>, context = <span class=\"n\">nil</span>, return_nil = <span class=\"n\">nil</span>)","location":{"filename":"src/macros/Wrappers.cr","line_number":26,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/macros/Wrappers.cr#L26"},"def":{"name":"wrap_module_function_with_keyword_args","args":[{"name":"rb_interpreter","doc":null,"default_value":"","external_name":"rb_interpreter","restriction":""},{"name":"under_module","doc":null,"default_value":"","external_name":"under_module","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""},{"name":"keyword_args","doc":null,"default_value":"","external_name":"keyword_args","restriction":""},{"name":"regular_args","doc":null,"default_value":"nil","external_name":"regular_args","restriction":""},{"name":"operator","doc":null,"default_value":"\"\"","external_name":"operator","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":""},{"name":"return_nil","doc":null,"default_value":"nil","external_name":"return_nil","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if regular_args.is_a?(ArrayLiteral) %}\r\n        {% regular_arg_array = regular_args %}\r\n      {% else %}{% if regular_args == nil %}\r\n        {% regular_arg_array = nil %}\r\n      {% else %}\r\n        {% regular_arg_array = [regular_args] %}\r\n      {% end %}{% end %}\n\r\n\r\n      wrapped_method = Anyolite::RbCore::RbFunc.new do |rb, obj|\r\n        regular_arg_tuple = Anyolite::Macro.generate_arg_tuple(\n{{ rb_interpreter }}\n, \n{{ regular_arg_array }}\n, context: \n{{ context }}\n)\r\n        format_string = Anyolite::Macro.format_string(\n{{ regular_arg_array }}\n, context: \n{{ context }}\n) + \":\"\r\n\r\n        kw_args = Anyolite::Macro.generate_keyword_argument_struct(\n{{ rb_interpreter }}\n, \n{{ keyword_args }}\n)\r\n        Anyolite::RbCore.rb_get_args(rb, format_string, *regular_arg_tuple, pointerof(kw_args))\r\n\r\n        converted_regular_args = Anyolite::Macro.convert_args(rb, regular_arg_tuple, \n{{ regular_arg_array }}\n, context: \n{{ context }}\n)\r\n\r\n        \n{% if (!regular_arg_array) || (regular_arg_array.size == 0) %}\r\n          Anyolite::Macro.call_and_return_keyword_method(rb, {{ proc }}, converted_regular_args, {{ keyword_args }}, kw_args, operator: {{ operator }}, empty_regular: true, context: {{ context }}, return_nil: {{ return_nil }})\r\n        {% else %}\r\n          Anyolite::Macro.call_and_return_keyword_method(rb, {{ proc }}, converted_regular_args, {{ keyword_args }}, kw_args, operator: {{ operator }}, context: {{ context }}, return_nil: {{ return_nil }})\r\n        {% end %}\n\r\n      \nend\r\n\r\n      \n{{ rb_interpreter }}\n.define_module_function(\n{{ name }}\n, Anyolite::RbClassCache.get(\n{{ under_module }}\n), wrapped_method)\r\n    \n"}}],"types":[]},{"html_id":"anyolite/Anyolite/RbCast","path":"Anyolite/RbCast.html","kind":"module","full_name":"Anyolite::RbCast","name":"RbCast","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/RbCast.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L3"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Module for specific casts of Crystal values into mruby values","summary":"<p>Module for specific casts of Crystal values into mruby values</p>","class_methods":[{"id":"cast_to_bool(rb:Pointer(RbCore::State),value:RbCore::RbValue)-class-method","html_id":"cast_to_bool(rb:Pointer(RbCore::State),value:RbCore::RbValue)-class-method","name":"cast_to_bool","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"args_string":"(rb : Pointer(RbCore::State), value : RbCore::RbValue)","args_html":"(rb : Pointer(RbCore::State), value : RbCore::RbValue)","location":{"filename":"src/RbCast.cr","line_number":136,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L136"},"def":{"name":"cast_to_bool","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if RbCast.check_for_true(value)\n  true\nelse\n  if RbCast.check_for_false(value)\n    false\n  else\n    RbCore.rb_raise_argument_error(rb, \"Could not cast #{value} to Bool.\")\n    false\n  end\nend"}},{"id":"cast_to_float(rb:Pointer(RbCore::State),value:RbCore::RbValue)-class-method","html_id":"cast_to_float(rb:Pointer(RbCore::State),value:RbCore::RbValue)-class-method","name":"cast_to_float","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"args_string":"(rb : Pointer(RbCore::State), value : RbCore::RbValue)","args_html":"(rb : Pointer(RbCore::State), value : RbCore::RbValue)","location":{"filename":"src/RbCast.cr","line_number":156,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L156"},"def":{"name":"cast_to_float","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if RbCast.check_for_float(value)\n  RbCore.get_rb_float(value)\nelse\n  RbCore.rb_raise_argument_error(rb, \"Could not cast #{value} to Float.\")\n  0.0\nend"}},{"id":"cast_to_int(rb:Pointer(RbCore::State),value:RbCore::RbValue)-class-method","html_id":"cast_to_int(rb:Pointer(RbCore::State),value:RbCore::RbValue)-class-method","name":"cast_to_int","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"args_string":"(rb : Pointer(RbCore::State), value : RbCore::RbValue)","args_html":"(rb : Pointer(RbCore::State), value : RbCore::RbValue)","location":{"filename":"src/RbCast.cr","line_number":147,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L147"},"def":{"name":"cast_to_int","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if RbCast.check_for_fixnum(value)\n  RbCore.get_rb_fixnum(value)\nelse\n  RbCore.rb_raise_argument_error(rb, \"Could not cast #{value} to Int.\")\n  0\nend"}},{"id":"cast_to_nil(rb:Pointer(RbCore::State),value:RbCore::RbValue)-class-method","html_id":"cast_to_nil(rb:Pointer(RbCore::State),value:RbCore::RbValue)-class-method","name":"cast_to_nil","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"args_string":"(rb : Pointer(RbCore::State), value : RbCore::RbValue)","args_html":"(rb : Pointer(RbCore::State), value : RbCore::RbValue)","location":{"filename":"src/RbCast.cr","line_number":127,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L127"},"def":{"name":"cast_to_nil","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if RbCast.check_for_nil(value)\n  nil\nelse\n  RbCore.rb_raise_argument_error(rb, \"Could not cast #{value} to Nil.\")\n  nil\nend"}},{"id":"cast_to_string(rb:Pointer(RbCore::State),value:RbCore::RbValue)-class-method","html_id":"cast_to_string(rb:Pointer(RbCore::State),value:RbCore::RbValue)-class-method","name":"cast_to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"args_string":"(rb : Pointer(RbCore::State), value : RbCore::RbValue)","args_html":"(rb : Pointer(RbCore::State), value : RbCore::RbValue)","location":{"filename":"src/RbCast.cr","line_number":165,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L165"},"def":{"name":"cast_to_string","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if RbCast.check_for_string(value)\n  String.new(RbCore.get_rb_string(rb, value))\nelse\n  RbCore.rb_raise_argument_error(rb, \"Could not cast #{value} to String.\")\n  \"\"\nend"}},{"id":"check_for_bool(value:RbCore::RbValue)-class-method","html_id":"check_for_bool(value:RbCore::RbValue)-class-method","name":"check_for_bool","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"args_string":"(value : RbCore::RbValue)","args_html":"(value : RbCore::RbValue)","location":{"filename":"src/RbCast.cr","line_number":107,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L107"},"def":{"name":"check_for_bool","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(RbCast.check_for_true(value)) || (RbCast.check_for_false(value))"}},{"id":"check_for_data(value:RbCore::RbValue)-class-method","html_id":"check_for_data(value:RbCore::RbValue)-class-method","name":"check_for_data","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"args_string":"(value : RbCore::RbValue)","args_html":"(value : RbCore::RbValue)","location":{"filename":"src/RbCast.cr","line_number":123,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L123"},"def":{"name":"check_for_data","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(RbCore.check_rb_data(value)) != 0"}},{"id":"check_for_false(value:RbCore::RbValue)-class-method","html_id":"check_for_false(value:RbCore::RbValue)-class-method","name":"check_for_false","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"args_string":"(value : RbCore::RbValue)","args_html":"(value : RbCore::RbValue)","location":{"filename":"src/RbCast.cr","line_number":103,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L103"},"def":{"name":"check_for_false","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(RbCore.check_rb_false(value)) != 0"}},{"id":"check_for_fixnum(value:RbCore::RbValue)-class-method","html_id":"check_for_fixnum(value:RbCore::RbValue)-class-method","name":"check_for_fixnum","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"args_string":"(value : RbCore::RbValue)","args_html":"(value : RbCore::RbValue)","location":{"filename":"src/RbCast.cr","line_number":111,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L111"},"def":{"name":"check_for_fixnum","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(RbCore.check_rb_fixnum(value)) != 0"}},{"id":"check_for_float(value:RbCore::RbValue)-class-method","html_id":"check_for_float(value:RbCore::RbValue)-class-method","name":"check_for_float","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"args_string":"(value : RbCore::RbValue)","args_html":"(value : RbCore::RbValue)","location":{"filename":"src/RbCast.cr","line_number":115,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L115"},"def":{"name":"check_for_float","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(RbCore.check_rb_float(value)) != 0"}},{"id":"check_for_nil(value:RbCore::RbValue)-class-method","html_id":"check_for_nil(value:RbCore::RbValue)-class-method","name":"check_for_nil","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"args_string":"(value : RbCore::RbValue)","args_html":"(value : RbCore::RbValue)","location":{"filename":"src/RbCast.cr","line_number":95,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L95"},"def":{"name":"check_for_nil","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(RbCore.check_rb_nil(value)) != 0"}},{"id":"check_for_string(value:RbCore::RbValue)-class-method","html_id":"check_for_string(value:RbCore::RbValue)-class-method","name":"check_for_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"args_string":"(value : RbCore::RbValue)","args_html":"(value : RbCore::RbValue)","location":{"filename":"src/RbCast.cr","line_number":119,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L119"},"def":{"name":"check_for_string","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(RbCore.check_rb_string(value)) != 0"}},{"id":"check_for_true(value:RbCore::RbValue)-class-method","html_id":"check_for_true(value:RbCore::RbValue)-class-method","name":"check_for_true","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"args_string":"(value : RbCore::RbValue)","args_html":"(value : RbCore::RbValue)","location":{"filename":"src/RbCast.cr","line_number":99,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L99"},"def":{"name":"check_for_true","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(RbCore.check_rb_true(value)) != 0"}},{"id":"check_for_undef(value:RbCore::RbValue)-class-method","html_id":"check_for_undef(value:RbCore::RbValue)-class-method","name":"check_for_undef","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"args_string":"(value : RbCore::RbValue)","args_html":"(value : RbCore::RbValue)","location":{"filename":"src/RbCast.cr","line_number":91,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L91"},"def":{"name":"check_for_undef","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"RbCore::RbValue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(RbCore.check_rb_undef(value)) != 0"}},{"id":"is_undef?(value)-class-method","html_id":"is_undef?(value)-class-method","name":"is_undef?","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/RbCast.cr","line_number":178,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L178"},"def":{"name":"is_undef?","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value.is_a?(RbCore::RbValue)\n  Anyolite::RbCast.check_for_undef(value)\nelse\n  false\nend"}},{"id":"return_bool(value)-class-method","html_id":"return_bool(value)-class-method","name":"return_bool","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/RbCast.cr","line_number":22,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L22"},"def":{"name":"return_bool","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return RbCore.get_bool_value(value ? 1 : 0)"}},{"id":"return_false-class-method","html_id":"return_false-class-method","name":"return_false","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/RbCast.cr","line_number":14,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L14"},"def":{"name":"return_false","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return RbCore.get_false_value"}},{"id":"return_fixnum(value)-class-method","html_id":"return_fixnum(value)-class-method","name":"return_fixnum","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/RbCast.cr","line_number":18,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L18"},"def":{"name":"return_fixnum","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return RbCore.get_fixnum_value(value)"}},{"id":"return_float(rb,value)-class-method","html_id":"return_float(rb,value)-class-method","name":"return_float","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(rb, value)","args_html":"(rb, value)","location":{"filename":"src/RbCast.cr","line_number":26,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L26"},"def":{"name":"return_float","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return RbCore.get_float_value(rb, value)"}},{"id":"return_nil-class-method","html_id":"return_nil-class-method","name":"return_nil","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/RbCast.cr","line_number":6,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L6"},"def":{"name":"return_nil","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return RbCore.get_nil_value"}},{"id":"return_string(rb,value)-class-method","html_id":"return_string(rb,value)-class-method","name":"return_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(rb, value)","args_html":"(rb, value)","location":{"filename":"src/RbCast.cr","line_number":30,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L30"},"def":{"name":"return_string","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return RbCore.get_string_value(rb, value)"}},{"id":"return_true-class-method","html_id":"return_true-class-method","name":"return_true","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/RbCast.cr","line_number":10,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L10"},"def":{"name":"return_true","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return RbCore.get_true_value"}},{"id":"return_value(rb:Pointer(RbCore::State),value:Object)-class-method","html_id":"return_value(rb:Pointer(RbCore::State),value:Object)-class-method","name":"return_value","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Object"}],"args_string":"(rb : Pointer(RbCore::State), value : Object)","args_html":"(rb : Pointer(RbCore::State), value : Object)","location":{"filename":"src/RbCast.cr","line_number":73,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L73"},"def":{"name":"return_value","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Object"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ruby_class = RbClassCache.get(typeof(value))\ndestructor = RbTypeCache.destructor_method(typeof(value))\nptr = Pointer(typeof(value)).malloc(size: 1, value: value)\nnew_ruby_object = RbCore.new_empty_object(rb, ruby_class, ptr.as(::Pointer(Void)), RbTypeCache.register(typeof(value), destructor))\n(Macro.convert_from_ruby_object(rb, new_ruby_object, typeof(value))).value = value\nRbRefTable.add(RbRefTable.get_object_id(value), ptr.as(::Pointer(Void)))\nreturn new_ruby_object\n"}},{"id":"return_value(rb:Pointer(RbCore::State),value:Struct|Enum)-class-method","html_id":"return_value(rb:Pointer(RbCore::State),value:Struct|Enum)-class-method","name":"return_value","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Struct | Enum"}],"args_string":"(rb : Pointer(RbCore::State), value : Struct | Enum)","args_html":"(rb : Pointer(RbCore::State), value : Struct | Enum)","location":{"filename":"src/RbCast.cr","line_number":56,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L56"},"def":{"name":"return_value","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Struct | Enum"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ruby_class = RbClassCache.get(typeof(value))\ndestructor = RbTypeCache.destructor_method(typeof(value))\nptr = Pointer(typeof(value)).malloc(size: 1, value: value)\nnew_ruby_object = RbCore.new_empty_object(rb, ruby_class, ptr.as(::Pointer(Void)), RbTypeCache.register(typeof(value), destructor))\nstruct_wrapper = Macro.convert_from_ruby_struct(rb, new_ruby_object, typeof(value))\nstruct_wrapper.value = StructWrapper(typeof(value)).new(value)\nRbRefTable.add(RbRefTable.get_object_id(struct_wrapper.value), ptr.as(::Pointer(Void)))\nreturn new_ruby_object\n"}},{"id":"return_value(rb:Pointer(RbCore::State),value:String)-class-method","html_id":"return_value(rb:Pointer(RbCore::State),value:String)-class-method","name":"return_value","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(rb : Pointer(RbCore::State), value : String)","args_html":"(rb : Pointer(RbCore::State), value : String)","location":{"filename":"src/RbCast.cr","line_number":52,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L52"},"def":{"name":"return_value","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.return_string(rb, value)"}},{"id":"return_value(rb:Pointer(RbCore::State),value:Float)-class-method","html_id":"return_value(rb:Pointer(RbCore::State),value:Float)-class-method","name":"return_value","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float"}],"args_string":"(rb : Pointer(RbCore::State), value : Float)","args_html":"(rb : Pointer(RbCore::State), value : Float)","location":{"filename":"src/RbCast.cr","line_number":48,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L48"},"def":{"name":"return_value","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.return_float(rb, value)"}},{"id":"return_value(rb:Pointer(RbCore::State),value:Int)-class-method","html_id":"return_value(rb:Pointer(RbCore::State),value:Int)-class-method","name":"return_value","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int"}],"args_string":"(rb : Pointer(RbCore::State), value : Int)","args_html":"(rb : Pointer(RbCore::State), value : Int)","location":{"filename":"src/RbCast.cr","line_number":44,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L44"},"def":{"name":"return_value","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.return_fixnum(value)"}},{"id":"return_value(rb:Pointer(RbCore::State),value:Bool)-class-method","html_id":"return_value(rb:Pointer(RbCore::State),value:Bool)-class-method","name":"return_value","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"args_string":"(rb : Pointer(RbCore::State), value : Bool)","args_html":"(rb : Pointer(RbCore::State), value : Bool)","location":{"filename":"src/RbCast.cr","line_number":40,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L40"},"def":{"name":"return_value","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value ? self.return_true : return_false"}},{"id":"return_value(rb:Pointer(RbCore::State),value:Nil)-class-method","html_id":"return_value(rb:Pointer(RbCore::State),value:Nil)-class-method","name":"return_value","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Nil"}],"args_string":"(rb : Pointer(RbCore::State), value : Nil)","args_html":"(rb : Pointer(RbCore::State), value : Nil)","location":{"filename":"src/RbCast.cr","line_number":36,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L36"},"def":{"name":"return_value","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"::Pointer(RbCore::State)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.return_nil"}}],"constructors":[],"instance_methods":[],"macros":[{"id":"check_custom_type(rb,value,crystal_type)-macro","html_id":"check_custom_type(rb,value,crystal_type)-macro","name":"check_custom_type","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"crystal_type","doc":null,"default_value":"","external_name":"crystal_type","restriction":""}],"args_string":"(rb, value, crystal_type)","location":{"filename":"src/RbCast.cr","line_number":174,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbCast.cr#L174"},"def":{"name":"check_custom_type","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"crystal_type","doc":null,"default_value":"","external_name":"crystal_type","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      Anyolite::RbCore.rb_obj_is_kind_of(\n{{ rb }}\n, \n{{ value }}\n, Anyolite::RbClassCache.get(\n{{ crystal_type }}\n)) != 0\n    \n"}}],"types":[]},{"html_id":"anyolite/Anyolite/RbClass","path":"Anyolite/RbClass.html","kind":"class","full_name":"Anyolite::RbClass","name":"RbClass","abstract":false,"superclass":{"html_id":"anyolite/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"anyolite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"anyolite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/RbClass.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbClass.cr#L3"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Reference to a mruby class","summary":"<p>Reference to a mruby class</p>","class_methods":[],"constructors":[{"id":"new(rb:RbInterpreter,name:String,superclass:RbClass?=nil,under:RbModule|RbClass|Nil=nil)-class-method","html_id":"new(rb:RbInterpreter,name:String,superclass:RbClass?=nil,under:RbModule|RbClass|Nil=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"RbInterpreter"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"superclass","doc":null,"default_value":"nil","external_name":"superclass","restriction":"RbClass | Nil"},{"name":"under","doc":null,"default_value":"nil","external_name":"under","restriction":"RbModule | RbClass | Nil"}],"args_string":"(rb : RbInterpreter, name : String, superclass : RbClass? = <span class=\"n\">nil</span>, under : RbModule | RbClass | Nil = <span class=\"n\">nil</span>)","args_html":"(rb : <a href=\"../Anyolite/RbInterpreter.html\">RbInterpreter</a>, name : String, superclass : <a href=\"../Anyolite/RbClass.html\">RbClass</a>? = <span class=\"n\">nil</span>, under : <a href=\"../Anyolite/RbModule.html\">RbModule</a> | <a href=\"../Anyolite/RbClass.html\">RbClass</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/RbClass.cr","line_number":6,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbClass.cr#L6"},"def":{"name":"new","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"RbInterpreter"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"superclass","doc":null,"default_value":"nil","external_name":"superclass","restriction":"RbClass | Nil"},{"name":"under","doc":null,"default_value":"nil","external_name":"under","restriction":"RbModule | RbClass | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(rb, name, superclass, under)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_unsafe-instance-method","html_id":"to_unsafe-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/RbClass.cr","line_number":15,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbClass.cr#L15"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return @class_ptr"}}],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/RbClassCache","path":"Anyolite/RbClassCache.html","kind":"module","full_name":"Anyolite::RbClassCache","name":"RbClassCache","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/RbClassCache.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbClassCache.cr#L3"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Cache for mruby class and module references","summary":"<p>Cache for mruby class and module references</p>","class_methods":[{"id":"get(n:Nil)-class-method","html_id":"get(n:Nil)-class-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Nil"}],"args_string":"(n : Nil)","args_html":"(n : Nil)","location":{"filename":"src/RbClassCache.cr","line_number":14,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbClassCache.cr#L14"},"def":{"name":"get","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"get(crystal_class:Class)-class-method","html_id":"get(crystal_class:Class)-class-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":"Class"}],"args_string":"(crystal_class : Class)","args_html":"(crystal_class : Class)","location":{"filename":"src/RbClassCache.cr","line_number":22,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbClassCache.cr#L22"},"def":{"name":"get","args":[{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":"Class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @@cache[crystal_class.name]?\n  return @@cache[crystal_class.name]\nelse\n  raise(\"Uncached class or module: #{crystal_class}\")\nend"}},{"id":"get(ruby_module:RbModule)-class-method","html_id":"get(ruby_module:RbModule)-class-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"ruby_module","doc":null,"default_value":"","external_name":"ruby_module","restriction":"RbModule"}],"args_string":"(ruby_module : RbModule)","args_html":"(ruby_module : <a href=\"../Anyolite/RbModule.html\">RbModule</a>)","location":{"filename":"src/RbClassCache.cr","line_number":18,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbClassCache.cr#L18"},"def":{"name":"get","args":[{"name":"ruby_module","doc":null,"default_value":"","external_name":"ruby_module","restriction":"RbModule"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ruby_module"}},{"id":"register(crystal_class:Class,rb_class:RbClass)-class-method","html_id":"register(crystal_class:Class,rb_class:RbClass)-class-method","name":"register","doc":null,"summary":null,"abstract":false,"args":[{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":"Class"},{"name":"rb_class","doc":null,"default_value":"","external_name":"rb_class","restriction":"RbClass"}],"args_string":"(crystal_class : Class, rb_class : RbClass)","args_html":"(crystal_class : Class, rb_class : <a href=\"../Anyolite/RbClass.html\">RbClass</a>)","location":{"filename":"src/RbClassCache.cr","line_number":6,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbClassCache.cr#L6"},"def":{"name":"register","args":[{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":"Class"},{"name":"rb_class","doc":null,"default_value":"","external_name":"rb_class","restriction":"RbClass"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@cache[crystal_class.name] = rb_class"}},{"id":"register(crystal_module:Class,rb_module:RbModule)-class-method","html_id":"register(crystal_module:Class,rb_module:RbModule)-class-method","name":"register","doc":null,"summary":null,"abstract":false,"args":[{"name":"crystal_module","doc":null,"default_value":"","external_name":"crystal_module","restriction":"Class"},{"name":"rb_module","doc":null,"default_value":"","external_name":"rb_module","restriction":"RbModule"}],"args_string":"(crystal_module : Class, rb_module : RbModule)","args_html":"(crystal_module : Class, rb_module : <a href=\"../Anyolite/RbModule.html\">RbModule</a>)","location":{"filename":"src/RbClassCache.cr","line_number":10,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbClassCache.cr#L10"},"def":{"name":"register","args":[{"name":"crystal_module","doc":null,"default_value":"","external_name":"crystal_module","restriction":"Class"},{"name":"rb_module","doc":null,"default_value":"","external_name":"rb_module","restriction":"RbModule"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@cache[crystal_module.name] = rb_module"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/RbInterpreter","path":"Anyolite/RbInterpreter.html","kind":"class","full_name":"Anyolite::RbInterpreter","name":"RbInterpreter","abstract":false,"superclass":{"html_id":"anyolite/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"anyolite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"anyolite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/RbInterpreter.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbInterpreter.cr#L3"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Wrapper for an mruby state reference","summary":"<p>Wrapper for an mruby state reference</p>","class_methods":[{"id":"create(&)-class-method","html_id":"create(&)-class-method","name":"create","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/RbInterpreter.cr","line_number":6,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbInterpreter.cr#L6"},"def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"rb = self.new\nyield rb\nrb.close\n"}}],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/RbInterpreter.cr","line_number":12,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbInterpreter.cr#L12"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"close-instance-method","html_id":"close-instance-method","name":"close","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/RbInterpreter.cr","line_number":16,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbInterpreter.cr#L16"},"def":{"name":"close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"RbCore.rb_close(@rb_ptr)"}},{"id":"define_class_method(name:String,c:RbClass|RbModule,proc:RbCore::RbFunc)-instance-method","html_id":"define_class_method(name:String,c:RbClass|RbModule,proc:RbCore::RbFunc)-instance-method","name":"define_class_method","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"RbClass | RbModule"},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"RbCore::RbFunc"}],"args_string":"(name : String, c : RbClass | RbModule, proc : RbCore::RbFunc)","args_html":"(name : String, c : <a href=\"../Anyolite/RbClass.html\">RbClass</a> | <a href=\"../Anyolite/RbModule.html\">RbModule</a>, proc : RbCore::RbFunc)","location":{"filename":"src/RbInterpreter.cr","line_number":49,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbInterpreter.cr#L49"},"def":{"name":"define_class_method","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"RbClass | RbModule"},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"RbCore::RbFunc"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if c.is_a?(RbModule)\n  RbCore.rb_define_module_function(@rb_ptr, c, name, proc, 1)\nelse\n  RbCore.rb_define_class_method(@rb_ptr, c, name, proc, 1)\nend"}},{"id":"define_method(name:String,c:RbClass|RbModule,proc:RbCore::RbFunc)-instance-method","html_id":"define_method(name:String,c:RbClass|RbModule,proc:RbCore::RbFunc)-instance-method","name":"define_method","doc":"TODO: Use internal mruby arg count in future versions","summary":"<p><span class=\"flag orange\">TODO</span>  Use internal mruby arg count in future versions</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"RbClass | RbModule"},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"RbCore::RbFunc"}],"args_string":"(name : String, c : RbClass | RbModule, proc : RbCore::RbFunc)","args_html":"(name : String, c : <a href=\"../Anyolite/RbClass.html\">RbClass</a> | <a href=\"../Anyolite/RbModule.html\">RbModule</a>, proc : RbCore::RbFunc)","location":{"filename":"src/RbInterpreter.cr","line_number":33,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbInterpreter.cr#L33"},"def":{"name":"define_method","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"RbClass | RbModule"},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"RbCore::RbFunc"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if c.is_a?(RbModule)\n  raise(\"Tried to define method #{name} for RbModule #{c}\")\nelse\n  RbCore.rb_define_method(@rb_ptr, c, name, proc, 1)\nend"}},{"id":"define_module_function(name:String,mod:RbModule|RbClass,proc:RbCore::RbFunc)-instance-method","html_id":"define_module_function(name:String,mod:RbModule|RbClass,proc:RbCore::RbFunc)-instance-method","name":"define_module_function","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"mod","doc":null,"default_value":"","external_name":"mod","restriction":"RbModule | RbClass"},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"RbCore::RbFunc"}],"args_string":"(name : String, mod : RbModule | RbClass, proc : RbCore::RbFunc)","args_html":"(name : String, mod : <a href=\"../Anyolite/RbModule.html\">RbModule</a> | <a href=\"../Anyolite/RbClass.html\">RbClass</a>, proc : RbCore::RbFunc)","location":{"filename":"src/RbInterpreter.cr","line_number":41,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbInterpreter.cr#L41"},"def":{"name":"define_module_function","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"mod","doc":null,"default_value":"","external_name":"mod","restriction":"RbModule | RbClass"},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"RbCore::RbFunc"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if mod.is_a?(RbModule)\n  RbCore.rb_define_module_function(@rb_ptr, mod, name, proc, 1)\nelse\n  RbCore.rb_define_class_method(@rb_ptr, mod, name, proc, 1)\nend"}},{"id":"execute_script_line(str:String)-instance-method","html_id":"execute_script_line(str:String)-instance-method","name":"execute_script_line","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"args_string":"(str : String)","args_html":"(str : String)","location":{"filename":"src/RbInterpreter.cr","line_number":24,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbInterpreter.cr#L24"},"def":{"name":"execute_script_line","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"RbCore.execute_script_line(@rb_ptr, str)"}},{"id":"load_script_from_file(filename:String)-instance-method","html_id":"load_script_from_file(filename:String)-instance-method","name":"load_script_from_file","doc":null,"summary":null,"abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String)","args_html":"(filename : String)","location":{"filename":"src/RbInterpreter.cr","line_number":28,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbInterpreter.cr#L28"},"def":{"name":"load_script_from_file","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"RbCore.load_script_from_file(@rb_ptr, filename)"}},{"id":"to_unsafe-instance-method","html_id":"to_unsafe-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/RbInterpreter.cr","line_number":20,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbInterpreter.cr#L20"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return @rb_ptr"}}],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/RbModule","path":"Anyolite/RbModule.html","kind":"class","full_name":"Anyolite::RbModule","name":"RbModule","abstract":false,"superclass":{"html_id":"anyolite/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"anyolite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"anyolite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/RbModule.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbModule.cr#L3"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Reference to a mruby module","summary":"<p>Reference to a mruby module</p>","class_methods":[],"constructors":[{"id":"new(rb:RbInterpreter,name:String,under:RbModule|RbClass|Nil=nil)-class-method","html_id":"new(rb:RbInterpreter,name:String,under:RbModule|RbClass|Nil=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"RbInterpreter"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"under","doc":null,"default_value":"nil","external_name":"under","restriction":"RbModule | RbClass | Nil"}],"args_string":"(rb : RbInterpreter, name : String, under : RbModule | RbClass | Nil = <span class=\"n\">nil</span>)","args_html":"(rb : <a href=\"../Anyolite/RbInterpreter.html\">RbInterpreter</a>, name : String, under : <a href=\"../Anyolite/RbModule.html\">RbModule</a> | <a href=\"../Anyolite/RbClass.html\">RbClass</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/RbModule.cr","line_number":6,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbModule.cr#L6"},"def":{"name":"new","args":[{"name":"rb","doc":null,"default_value":"","external_name":"rb","restriction":"RbInterpreter"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"under","doc":null,"default_value":"nil","external_name":"under","restriction":"RbModule | RbClass | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(rb, name, under)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_unsafe-instance-method","html_id":"to_unsafe-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/RbModule.cr","line_number":14,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbModule.cr#L14"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return @module_ptr"}}],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/RbRefTable","path":"Anyolite/RbRefTable.html","kind":"module","full_name":"Anyolite::RbRefTable","name":"RbRefTable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/RbRefTable.cr","line_number":8,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbRefTable.cr#L8"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"This is a very simple approach to generate artificial references to the wrapped objects.\nTherefore, the GC won't delete the wrapped objects until necessary.\nNote that this is currently one-directional, so mruby might still delete Crystal objects generated from Crystal itself.\nFurthermore, this is only possible as a module due to C closure limitations.\n\nTODO: Add compilation option for ignoring entry checks","summary":"<p>This is a very simple approach to generate artificial references to the wrapped objects.</p>","class_methods":[{"id":"add(identification,value)-class-method","html_id":"add(identification,value)-class-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"identification","doc":null,"default_value":"","external_name":"identification","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(identification, value)","args_html":"(identification, value)","location":{"filename":"src/RbRefTable.cr","line_number":29,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbRefTable.cr#L29"},"def":{"name":"add","args":[{"name":"identification","doc":null,"default_value":"","external_name":"identification","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if option_active?(:logging)\n  puts(\"> Added reference #{identification} -> #{value}\")\nend\nif @@content[identification]?\n  if value != @@content[identification][0]\n    if option_active?(:warnings)\n      puts(\"WARNING: Value #{identification} replaced pointers (#{value} vs #{@@content[identification][0]}).\")\n    end\n    if option_active?(:pedantic)\n      raise(\"Corrupted reference table\")\n    end\n    if option_active?(:replace_conflicting_pointers)\n      @@content[identification] = {value, @@content[identification][1] + 1}\n    else\n      @@content[identification] = {@@content[identification][0], @@content[identification][1] + 1}\n    end\n  else\n    @@content[identification] = {value, @@content[identification][1] + 1}\n  end\nelse\n  @@content[identification] = {value, 1_i64}\nend\n"}},{"id":"delete(identification)-class-method","html_id":"delete(identification)-class-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"identification","doc":null,"default_value":"","external_name":"identification","restriction":""}],"args_string":"(identification)","args_html":"(identification)","location":{"filename":"src/RbRefTable.cr","line_number":48,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbRefTable.cr#L48"},"def":{"name":"delete","args":[{"name":"identification","doc":null,"default_value":"","external_name":"identification","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if option_active?(:logging)\n  puts(\"> Removed reference #{identification}\")\nend\nif @@content[identification]?\n  @@content[identification] = {@@content[identification][0], @@content[identification][1] - 1}\n  if @@content[identification][1] <= 0\n    @@content.delete(identification)\n  end\nelse\n  if option_active?(:warnings)\n    puts(\"WARNING: Tried to remove unregistered object #{identification} from reference table.\")\n  end\n  if option_active?(:pedantic)\n    raise(\"Corrupted reference table\")\n  end\nend\nnil\n"}},{"id":"get(identification)-class-method","html_id":"get(identification)-class-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"identification","doc":null,"default_value":"","external_name":"identification","restriction":""}],"args_string":"(identification)","args_html":"(identification)","location":{"filename":"src/RbRefTable.cr","line_number":25,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbRefTable.cr#L25"},"def":{"name":"get","args":[{"name":"identification","doc":null,"default_value":"","external_name":"identification","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return @@content[identification][0]"}},{"id":"get_object_id(value)-class-method","html_id":"get_object_id(value)-class-method","name":"get_object_id","doc":"TODO: If a struct wrapper is given here, call the struct methods instead of the wrapper methods","summary":"<p><span class=\"flag orange\">TODO</span>  If a struct wrapper is given here, call the struct methods instead of the wrapper methods</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/RbRefTable.cr","line_number":79,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbRefTable.cr#L79"},"def":{"name":"get_object_id","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value.responds_to?(:rb_ref_id)\n  value.rb_ref_id.to_u64\nelse\n  if value.responds_to?(:object_id)\n    value.object_id.to_u64\n  else\n    value.hash.to_u64\n  end\nend"}},{"id":"inspect-class-method","html_id":"inspect-class-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/RbRefTable.cr","line_number":66,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbRefTable.cr#L66"},"def":{"name":"inspect","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@content.inspect"}},{"id":"is_registered?(identification)-class-method","html_id":"is_registered?(identification)-class-method","name":"is_registered?","doc":null,"summary":null,"abstract":false,"args":[{"name":"identification","doc":null,"default_value":"","external_name":"identification","restriction":""}],"args_string":"(identification)","args_html":"(identification)","location":{"filename":"src/RbRefTable.cr","line_number":62,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbRefTable.cr#L62"},"def":{"name":"is_registered?","args":[{"name":"identification","doc":null,"default_value":"","external_name":"identification","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return @@content[identification]?"}},{"id":"option_active?(symbol)-class-method","html_id":"option_active?(symbol)-class-method","name":"option_active?","doc":null,"summary":null,"abstract":false,"args":[{"name":"symbol","doc":null,"default_value":"","external_name":"symbol","restriction":""}],"args_string":"(symbol)","args_html":"(symbol)","location":{"filename":"src/RbRefTable.cr","line_number":89,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbRefTable.cr#L89"},"def":{"name":"option_active?","args":[{"name":"symbol","doc":null,"default_value":"","external_name":"symbol","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @@options[symbol]?\n  @@options[symbol]\nelse\n  false\nend"}},{"id":"reset-class-method","html_id":"reset-class-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/RbRefTable.cr","line_number":70,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbRefTable.cr#L70"},"def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if !@@content.empty?\n  if option_active?(:warnings)\n    puts(\"WARNING: Reference table is not empty (#{@@content.size} elements will be deleted).\")\n  end\n  if option_active?(:pedantic)\n    raise(\"Corrupted reference table\")\n  end\nend\n@@content.clear\n"}},{"id":"set_option(symbol)-class-method","html_id":"set_option(symbol)-class-method","name":"set_option","doc":null,"summary":null,"abstract":false,"args":[{"name":"symbol","doc":null,"default_value":"","external_name":"symbol","restriction":""}],"args_string":"(symbol)","args_html":"(symbol)","location":{"filename":"src/RbRefTable.cr","line_number":97,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbRefTable.cr#L97"},"def":{"name":"set_option","args":[{"name":"symbol","doc":null,"default_value":"","external_name":"symbol","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@options[symbol] = true"}},{"id":"unset_option(symbol)-class-method","html_id":"unset_option(symbol)-class-method","name":"unset_option","doc":null,"summary":null,"abstract":false,"args":[{"name":"symbol","doc":null,"default_value":"","external_name":"symbol","restriction":""}],"args_string":"(symbol)","args_html":"(symbol)","location":{"filename":"src/RbRefTable.cr","line_number":101,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbRefTable.cr#L101"},"def":{"name":"unset_option","args":[{"name":"symbol","doc":null,"default_value":"","external_name":"symbol","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@options[symbol] = false"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/RbTypeCache","path":"Anyolite/RbTypeCache.html","kind":"module","full_name":"Anyolite::RbTypeCache","name":"RbTypeCache","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/RbTypeCache.cr","line_number":3,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbTypeCache.cr#L3"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Cache for mruby data types, holding the destructor methods","summary":"<p>Cache for mruby data types, holding the destructor methods</p>","class_methods":[{"id":"register(crystal_class:Class,destructor:Proc(Pointer(RbCore::State),Pointer(Void),Void))-class-method","html_id":"register(crystal_class:Class,destructor:Proc(Pointer(RbCore::State),Pointer(Void),Void))-class-method","name":"register","doc":null,"summary":null,"abstract":false,"args":[{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":"Class"},{"name":"destructor","doc":null,"default_value":"","external_name":"destructor","restriction":"Proc(::Pointer(RbCore::State), ::Pointer(Void), Void)"}],"args_string":"(crystal_class : Class, destructor : Proc(Pointer(RbCore::State), Pointer(Void), Void))","args_html":"(crystal_class : Class, destructor : Proc(Pointer(RbCore::State), Pointer(Void), Void))","location":{"filename":"src/RbTypeCache.cr","line_number":6,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbTypeCache.cr#L6"},"def":{"name":"register","args":[{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":"Class"},{"name":"destructor","doc":null,"default_value":"","external_name":"destructor","restriction":"Proc(::Pointer(RbCore::State), ::Pointer(Void), Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @@cache[crystal_class.name]?\nelse\n  new_type = RbCore::RbDataType.new(struct_name: crystal_class.name, dfree: destructor)\n  @@cache[crystal_class.name] = Pointer(RbCore::RbDataType).malloc(size: 1, value: new_type)\nend\nreturn @@cache[crystal_class.name]\n"}}],"constructors":[],"instance_methods":[],"macros":[{"id":"destructor_method(crystal_class)-macro","html_id":"destructor_method(crystal_class)-macro","name":"destructor_method","doc":null,"summary":null,"abstract":false,"args":[{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""}],"args_string":"(crystal_class)","location":{"filename":"src/RbTypeCache.cr","line_number":14,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/RbTypeCache.cr#L14"},"def":{"name":"destructor_method","args":[{"name":"crystal_class","doc":null,"default_value":"","external_name":"crystal_class","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      ->(rb_state : Anyolite::RbCore::State*, ptr : Void*) \n{\n        if \n{{ crystal_class }}\n <= Struct || \n{{ crystal_class }}\n <= Enum\n          crystal_ptr = ptr.as(Anyolite::StructWrapper(\n{{ crystal_class }}\n)*)\n\n          \n# Call optional mruby callback\n\n          if (crystal_value = crystal_ptr.value.content).responds_to?(:rb_finalize)\n            crystal_value.rb_finalize(rb_state)\n          \nend\n        \nelse\n          crystal_ptr = ptr.as(\n{{ crystal_class }}\n*)\n\n          if (crystal_value = crystal_ptr.value).responds_to?(:rb_finalize)\n            crystal_value.rb_finalize(rb_state)\n          \nend\n        \nend\n\n        \n# Delete the Crystal reference to this object\n\n        Anyolite::RbRefTable.delete(Anyolite::RbRefTable.get_object_id(crystal_ptr.value))\n      }\n    \n"}}],"types":[]},{"html_id":"anyolite/Anyolite/Rename","path":"Anyolite/Rename.html","kind":"annotation","full_name":"Anyolite::Rename","name":"Rename","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":272,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L272"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Renames the function to the first argument if wrapped.","summary":"<p>Renames the function to the first argument if wrapped.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/RenameClass","path":"Anyolite/RenameClass.html","kind":"annotation","full_name":"Anyolite::RenameClass","name":"RenameClass","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":287,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L287"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Renames the class to the first argument if wrapped.","summary":"<p>Renames the class to the first argument if wrapped.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/RenameClassMethod","path":"Anyolite/RenameClassMethod.html","kind":"annotation","full_name":"Anyolite::RenameClassMethod","name":"RenameClassMethod","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":280,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L280"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Renames the class method given as the first argument\nto the second argument if wrapped.","summary":"<p>Renames the class method given as the first argument to the second argument if wrapped.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/RenameConstant","path":"Anyolite/RenameConstant.html","kind":"annotation","full_name":"Anyolite::RenameConstant","name":"RenameConstant","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":284,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L284"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Renames the constant given as the first argument\nto the second argument if wrapped.","summary":"<p>Renames the constant given as the first argument to the second argument if wrapped.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/RenameInstanceMethod","path":"Anyolite/RenameInstanceMethod.html","kind":"annotation","full_name":"Anyolite::RenameInstanceMethod","name":"RenameInstanceMethod","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":276,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L276"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Renames the instane method given as the first argument\nto the second argument if wrapped.","summary":"<p>Renames the instane method given as the first argument to the second argument if wrapped.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/RenameModule","path":"Anyolite/RenameModule.html","kind":"annotation","full_name":"Anyolite::RenameModule","name":"RenameModule","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":290,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L290"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Renames the module to the first argument if wrapped.","summary":"<p>Renames the module to the first argument if wrapped.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/ReturnNil","path":"Anyolite/ReturnNil.html","kind":"annotation","full_name":"Anyolite::ReturnNil","name":"ReturnNil","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":310,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L310"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Lets the function always return `nil`.","summary":"<p>Lets the function always return <code>nil</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/ReturnNilClassMethod","path":"Anyolite/ReturnNilClassMethod.html","kind":"annotation","full_name":"Anyolite::ReturnNilClassMethod","name":"ReturnNilClassMethod","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":316,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L316"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Lets the class method given as the first argument always return `nil`.","summary":"<p>Lets the class method given as the first argument always return <code>nil</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/ReturnNilInstanceMethod","path":"Anyolite/ReturnNilInstanceMethod.html","kind":"annotation","full_name":"Anyolite::ReturnNilInstanceMethod","name":"ReturnNilInstanceMethod","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":313,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L313"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Lets the instance method given as the first argument always return `nil`.","summary":"<p>Lets the instance method given as the first argument always return <code>nil</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/Specialize","path":"Anyolite/Specialize.html","kind":"annotation","full_name":"Anyolite::Specialize","name":"Specialize","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":259,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L259"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Excludes all definitions of this function besides this one from wrapping.\nThe optional first argument overwrites the original argument array.","summary":"<p>Excludes all definitions of this function besides this one from wrapping.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/SpecializeClassMethod","path":"Anyolite/SpecializeClassMethod.html","kind":"annotation","full_name":"Anyolite::SpecializeClassMethod","name":"SpecializeClassMethod","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":269,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L269"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Excludes all definitions of the class method given as the first argument \nbesides the one with the arguments given in the second argument (`nil` for none) from wrapping.\nThe optional third argument overwrites the original argument array.","summary":"<p>Excludes all definitions of the class method given as the first argument  besides the one with the arguments given in the second argument (<code>nil</code> for none) from wrapping.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/SpecializeInstanceMethod","path":"Anyolite/SpecializeInstanceMethod.html","kind":"annotation","full_name":"Anyolite::SpecializeInstanceMethod","name":"SpecializeInstanceMethod","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":264,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L264"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Excludes all definitions of the instance method given as the first argument \nbesides the one with the arguments given in the second argument (`nil` for none) from wrapping.\nThe optional third argument overwrites the original argument array.","summary":"<p>Excludes all definitions of the instance method given as the first argument  besides the one with the arguments given in the second argument (<code>nil</code> for none) from wrapping.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/SpecifyGenericTypes","path":"Anyolite/SpecifyGenericTypes.html","kind":"annotation","full_name":"Anyolite::SpecifyGenericTypes","name":"SpecifyGenericTypes","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":320,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L320"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Specifies the generic type names for the following class as its argument,\nin form of an `Array` of their names.","summary":"<p>Specifies the generic type names for the following class as its argument, in form of an <code>Array</code> of their names.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/StructWrapper","path":"Anyolite/StructWrapper.html","kind":"class","full_name":"Anyolite::StructWrapper(T)","name":"StructWrapper","abstract":false,"superclass":{"html_id":"anyolite/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"anyolite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"anyolite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/Main.cr","line_number":30,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L30"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Internal class to hide the `Struct` *T* in a special class\nto obtain all class-related properties.","summary":"<p>Internal class to hide the <code>Struct</code> <em>T</em> in a special class to obtain all class-related properties.</p>","class_methods":[],"constructors":[{"id":"new(value)-class-method","html_id":"new(value)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/Main.cr","line_number":33,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L33"},"def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = StructWrapper(T).allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"content:T-instance-method","html_id":"content:T-instance-method","name":"content","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","args_html":" : T","location":{"filename":"src/Main.cr","line_number":37,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L37"},"def":{"name":"content","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"if c = @content\n  c\nelse\n  raise(\"Content of struct wrapper is undefined!\")\nend"}},{"id":"content=(value)-instance-method","html_id":"content=(value)-instance-method","name":"content=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/Main.cr","line_number":46,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L46"},"def":{"name":"content=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@content = value"}}],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/Undefined","path":"Anyolite/Undefined.html","kind":"struct","full_name":"Anyolite::Undefined","name":"Undefined","abstract":false,"superclass":{"html_id":"anyolite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"anyolite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"anyolite/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"anyolite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/Main.cr","line_number":15,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L15"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Special struct representing undefined values in mruby.","summary":"<p>Special struct representing undefined values in mruby.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/WrapWithoutKeywords","path":"Anyolite/WrapWithoutKeywords.html","kind":"annotation","full_name":"Anyolite::WrapWithoutKeywords","name":"WrapWithoutKeywords","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":295,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L295"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Wraps all arguments of the function to positional arguments.\nThe optional argument limits the number of arguments to wrap as positional\narguments (`-1` for all arguments).","summary":"<p>Wraps all arguments of the function to positional arguments.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/WrapWithoutKeywordsClassMethod","path":"Anyolite/WrapWithoutKeywordsClassMethod.html","kind":"annotation","full_name":"Anyolite::WrapWithoutKeywordsClassMethod","name":"WrapWithoutKeywordsClassMethod","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":307,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L307"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Wraps all arguments of the class method given as the first argument\nto positional arguments.\nThe optional seconds argument limits the number of arguments to wrap as positional\narguments (`-1` for all arguments).","summary":"<p>Wraps all arguments of the class method given as the first argument to positional arguments.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"anyolite/Anyolite/WrapWithoutKeywordsInstanceMethod","path":"Anyolite/WrapWithoutKeywordsInstanceMethod.html","kind":"annotation","full_name":"Anyolite::WrapWithoutKeywordsInstanceMethod","name":"WrapWithoutKeywordsInstanceMethod","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/Main.cr","line_number":301,"url":"https://github.com/Anyolite/anyolite/blob/v0.9.1/src/Main.cr#L301"}],"repository_name":"anyolite","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"anyolite/Anyolite","kind":"module","full_name":"Anyolite","name":"Anyolite"},"doc":"Wraps all arguments of the instance method given as the first argument\nto positional arguments.\nThe optional seconds argument limits the number of arguments to wrap as positional\narguments (`-1` for all arguments).","summary":"<p>Wraps all arguments of the instance method given as the first argument to positional arguments.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]}}